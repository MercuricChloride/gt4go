Class {
	#name : #GoParser,
	#superclass : #SmaCCGLRParser,
	#category : #'Gt4go-Parser'
}

{ #category : #generated }
GoParser class >> ambiguousTransitions [
^#(
#[ 0 106 0 245] 
#[ 0 106 0 249] 
#[ 0 106 0 253] 
#[ 0 106 1 1] 
#[ 0 106 1 5] 
#[ 0 106 1 105] 
#[ 0 106 1 13] 
#[ 0 106 1 21] 
#[ 0 106 1 29] 
#[ 0 106 1 33] 
#[ 0 150 0 245] 
#[ 0 150 0 249] 
#[ 0 150 0 253] 
#[ 0 150 1 1] 
#[ 0 150 1 5] 
#[ 0 150 1 105] 
#[ 0 150 1 181] 
#[ 0 150 1 21] 
#[ 0 150 1 29] 
#[ 0 150 1 33] 
#[ 0 94 0 154] 
#[ 0 166 2 157] 
#[ 0 154 1 225] 
#[ 0 6 3 21] 
#[ 0 6 1 233] 
#[ 0 6 0 249] 
#[ 0 6 3 25] 
#[ 0 6 3 29] 
#[ 0 6 3 33] 
#[ 0 6 0 253] 
#[ 0 6 1 1] 
#[ 0 6 1 5] 
#[ 0 6 3 37] 
#[ 0 6 3 41] 
#[ 0 6 0 93] 
#[ 0 6 3 45] 
#[ 0 6 3 49] 
#[ 0 6 0 97] 
#[ 0 6 3 53] 
#[ 0 6 3 57] 
#[ 0 6 3 61] 
#[ 0 6 0 101] 
#[ 0 6 1 237] 
#[ 0 6 3 65] 
#[ 0 6 1 245] 
#[ 0 6 1 173] 
#[ 0 6 1 249] 
#[ 0 6 2 1] 
#[ 0 6 2 5] 
#[ 0 6 2 9] 
#[ 0 6 2 13] 
#[ 0 6 2 17] 
#[ 0 6 2 21] 
#[ 0 6 2 25] 
#[ 0 6 2 29] 
#[ 0 6 2 33] 
#[ 0 6 2 37] 
#[ 0 6 2 41] 
#[ 0 6 2 45] 
#[ 0 6 2 49] 
#[ 0 6 2 53] 
#[ 0 6 0 69] 
#[ 0 6 0 73] 
#[ 0 154 1 26] 
#[ 0 154 1 26 1 225] 
#[ 1 78 4 117] 
#[ 1 78 4 121] 
#[ 1 102 2 157] 
#[ 1 162 4 97] 
#[ 1 162 4 101] 
#[ 1 162 4 105] 
#[ 1 162 4 109] 
#[ 1 162 4 113] 
#[ 0 94 1 26] 
#[ 0 94 0 154 1 26] 
#[ 1 214 4 241] 
#[ 0 6 5 5] 
#[ 0 6 5 9] 
#[ 0 6 2 205] 
#[ 1 222 5 45] 
#[ 0 6 0 25] 
#[ 0 6 0 29] 
#[ 1 226 1 233] 
#[ 0 249 1 226] 
#[ 0 253 1 226] 
#[ 1 1 1 226] 
#[ 1 5 1 226] 
#[ 1 226 1 237] 
#[ 1 226 1 241] 
#[ 1 226 1 245] 
#[ 1 226 1 249] 
#[ 1 226 2 1] 
#[ 1 226 2 5] 
#[ 1 226 2 9] 
#[ 1 226 2 13] 
#[ 1 226 2 17] 
#[ 1 226 2 21] 
#[ 1 226 2 25] 
#[ 1 226 2 29] 
#[ 1 226 2 33] 
#[ 1 226 2 37] 
#[ 1 226 2 41] 
#[ 1 226 2 45] 
#[ 1 226 2 49] 
#[ 1 226 2 53] 
#[ 0 69 1 226] 
#[ 0 73 1 226] 
#[ 0 14 3 21] 
#[ 0 14 1 233] 
#[ 0 14 0 249] 
#[ 0 14 3 25] 
#[ 0 14 3 29] 
#[ 0 14 3 33] 
#[ 0 14 0 253] 
#[ 0 14 1 1] 
#[ 0 14 1 5] 
#[ 0 14 3 37] 
#[ 0 14 3 41] 
#[ 0 14 0 93] 
#[ 0 14 3 45] 
#[ 0 14 3 49] 
#[ 0 14 0 97] 
#[ 0 14 3 53] 
#[ 0 14 3 57] 
#[ 0 14 3 61] 
#[ 0 14 0 101] 
#[ 0 14 1 237] 
#[ 0 14 3 65] 
#[ 0 14 1 245] 
#[ 0 14 1 173] 
#[ 0 14 1 249] 
#[ 0 14 2 1] 
#[ 0 14 2 5] 
#[ 0 14 2 9] 
#[ 0 14 2 13] 
#[ 0 14 2 17] 
#[ 0 14 2 21] 
#[ 0 14 2 25] 
#[ 0 14 2 29] 
#[ 0 14 2 33] 
#[ 0 14 2 37] 
#[ 0 14 2 41] 
#[ 0 14 2 45] 
#[ 0 14 2 49] 
#[ 0 14 2 53] 
#[ 0 14 0 69] 
#[ 0 14 0 73] 
#[ 1 162 4 73] 
#[ 1 162 4 77] 
#[ 1 162 4 81] 
#[ 1 162 4 85] 
#[ 1 162 4 89] 
#[ 1 162 4 93] 
#[ 1 162 2 74 4 97] 
#[ 1 162 2 74 4 101] 
#[ 1 162 2 74 4 105] 
#[ 1 162 2 74 4 109] 
#[ 1 162 2 74 4 113] 
#[ 2 74 5 173] 
#[ 0 162 3 225] 
#[ 2 94 4 41] 
#[ 2 94 4 45] 
#[ 2 94 4 49] 
#[ 2 94 4 53] 
#[ 2 94 4 57] 
#[ 2 94 4 61] 
#[ 2 94 4 65] 
#[ 2 94 4 69] 
#[ 2 94 4 73] 
#[ 2 94 4 77] 
#[ 2 94 4 81] 
#[ 2 94 4 85] 
#[ 2 94 4 89] 
#[ 2 94 4 93] 
#[ 2 94 4 97] 
#[ 2 94 4 101] 
#[ 2 94 4 105] 
#[ 2 94 4 109] 
#[ 2 94 4 113] 
#[ 2 98 4 41] 
#[ 2 98 4 45] 
#[ 2 98 4 49] 
#[ 2 98 4 53] 
#[ 2 98 4 57] 
#[ 2 98 4 61] 
#[ 2 98 4 65] 
#[ 2 98 4 69] 
#[ 2 98 4 73] 
#[ 2 98 4 77] 
#[ 2 98 4 81] 
#[ 2 98 4 85] 
#[ 2 98 4 89] 
#[ 2 98 4 93] 
#[ 2 98 4 97] 
#[ 2 98 4 101] 
#[ 2 98 4 105] 
#[ 2 98 4 109] 
#[ 2 98 4 113] 
#[ 2 102 4 41] 
#[ 2 102 4 45] 
#[ 2 102 4 49] 
#[ 2 102 4 53] 
#[ 2 102 4 57] 
#[ 2 102 4 61] 
#[ 2 102 4 65] 
#[ 2 102 4 69] 
#[ 2 102 4 73] 
#[ 2 102 4 77] 
#[ 2 102 4 81] 
#[ 2 102 4 85] 
#[ 2 102 4 89] 
#[ 2 102 4 93] 
#[ 2 102 4 97] 
#[ 2 102 4 101] 
#[ 2 102 4 105] 
#[ 2 102 4 109] 
#[ 2 102 4 113] 
#[ 2 106 4 41] 
#[ 2 106 4 45] 
#[ 2 106 4 49] 
#[ 2 106 4 53] 
#[ 2 106 4 57] 
#[ 2 106 4 61] 
#[ 2 106 4 65] 
#[ 2 106 4 69] 
#[ 2 106 4 73] 
#[ 2 106 4 77] 
#[ 2 106 4 81] 
#[ 2 106 4 85] 
#[ 2 106 4 89] 
#[ 2 106 4 93] 
#[ 2 106 4 97] 
#[ 2 106 4 101] 
#[ 2 106 4 105] 
#[ 2 106 4 109] 
#[ 2 106 4 113] 
#[ 1 130 4 25] 
#[ 1 130 4 29] 
#[ 2 110 4 41] 
#[ 2 110 4 45] 
#[ 2 110 4 49] 
#[ 2 110 4 53] 
#[ 2 110 4 57] 
#[ 2 110 4 61] 
#[ 2 110 4 65] 
#[ 2 110 4 69] 
#[ 2 110 4 73] 
#[ 2 110 4 77] 
#[ 2 110 4 81] 
#[ 2 110 4 85] 
#[ 2 110 4 89] 
#[ 2 110 4 93] 
#[ 2 110 4 97] 
#[ 2 110 4 101] 
#[ 2 110 4 105] 
#[ 2 110 4 109] 
#[ 2 110 4 113] 
#[ 2 114 4 41] 
#[ 2 114 4 45] 
#[ 2 114 4 49] 
#[ 2 114 4 53] 
#[ 2 114 4 57] 
#[ 2 114 4 61] 
#[ 2 114 4 65] 
#[ 2 114 4 69] 
#[ 2 114 4 73] 
#[ 2 114 4 77] 
#[ 2 114 4 81] 
#[ 2 114 4 85] 
#[ 2 114 4 89] 
#[ 2 114 4 93] 
#[ 2 114 4 97] 
#[ 2 114 4 101] 
#[ 2 114 4 105] 
#[ 2 114 4 109] 
#[ 2 114 4 113] 
#[ 2 118 4 41] 
#[ 2 118 4 45] 
#[ 2 118 4 49] 
#[ 2 118 4 53] 
#[ 2 118 4 57] 
#[ 2 118 4 61] 
#[ 2 118 4 65] 
#[ 2 118 4 69] 
#[ 2 118 4 73] 
#[ 2 118 4 77] 
#[ 2 118 4 81] 
#[ 2 118 4 85] 
#[ 2 118 4 89] 
#[ 2 118 4 93] 
#[ 2 118 4 97] 
#[ 2 118 4 101] 
#[ 2 118 4 105] 
#[ 2 118 4 109] 
#[ 2 118 4 113] 
#[ 2 182 6 165] 
#[ 2 226 4 97] 
#[ 2 226 4 101] 
#[ 2 226 4 105] 
#[ 2 226 4 109] 
#[ 2 226 4 113] 
#[ 2 230 4 97] 
#[ 2 230 4 101] 
#[ 2 230 4 105] 
#[ 2 230 4 109] 
#[ 2 230 4 113] 
#[ 0 94 6 189] 
#[ 2 74 6 205] 
#[ 1 173 2 74] 
#[ 0 6 1 241] 
#[ 2 254 3 21] 
#[ 1 233 2 254] 
#[ 0 249 2 254] 
#[ 2 254 3 25] 
#[ 2 254 3 29] 
#[ 2 254 3 33] 
#[ 0 253 2 254] 
#[ 1 1 2 254] 
#[ 1 5 2 254] 
#[ 2 254 3 37] 
#[ 2 254 3 41] 
#[ 0 93 2 254] 
#[ 2 254 3 45] 
#[ 2 254 3 49] 
#[ 0 97 2 254] 
#[ 2 254 3 53] 
#[ 2 254 3 57] 
#[ 2 254 3 61] 
#[ 0 101 2 254] 
#[ 1 237 2 254] 
#[ 2 254 3 65] 
#[ 1 245 2 254] 
#[ 1 173 2 254] 
#[ 1 249 2 254] 
#[ 2 1 2 254] 
#[ 2 5 2 254] 
#[ 2 9 2 254] 
#[ 2 13 2 254] 
#[ 2 17 2 254] 
#[ 2 21 2 254] 
#[ 2 25 2 254] 
#[ 2 29 2 254] 
#[ 2 33 2 254] 
#[ 2 37 2 254] 
#[ 2 41 2 254] 
#[ 2 45 2 254] 
#[ 2 49 2 254] 
#[ 2 53 2 254] 
#[ 0 69 2 254] 
#[ 0 73 2 254] 
#[ 0 153 0 154] 
#[ 1 18 2 150] 
#[ 3 66 4 41] 
#[ 3 66 4 45] 
#[ 3 66 4 49] 
#[ 3 66 4 53] 
#[ 3 66 4 57] 
#[ 3 66 4 61] 
#[ 3 66 4 65] 
#[ 3 66 4 69] 
#[ 3 66 4 73] 
#[ 3 66 4 77] 
#[ 3 66 4 81] 
#[ 3 66 4 85] 
#[ 3 66 4 89] 
#[ 3 66 4 93] 
#[ 3 66 4 97] 
#[ 3 66 4 101] 
#[ 3 66 4 105] 
#[ 3 66 4 109] 
#[ 3 66 4 113] 
#[ 3 70 4 41] 
#[ 3 70 4 45] 
#[ 3 70 4 49] 
#[ 3 70 4 53] 
#[ 3 70 4 57] 
#[ 3 70 4 61] 
#[ 3 70 4 65] 
#[ 3 70 4 69] 
#[ 3 70 4 73] 
#[ 3 70 4 77] 
#[ 3 70 4 81] 
#[ 3 70 4 85] 
#[ 3 70 4 89] 
#[ 3 70 4 93] 
#[ 3 70 4 97] 
#[ 3 70 4 101] 
#[ 3 70 4 105] 
#[ 3 70 4 109] 
#[ 3 70 4 113] 
#[ 3 74 4 41] 
#[ 3 74 4 45] 
#[ 3 74 4 49] 
#[ 3 74 4 53] 
#[ 3 74 4 57] 
#[ 3 74 4 61] 
#[ 3 74 4 65] 
#[ 3 74 4 69] 
#[ 3 74 4 73] 
#[ 3 74 4 77] 
#[ 3 74 4 81] 
#[ 3 74 4 85] 
#[ 3 74 4 89] 
#[ 3 74 4 93] 
#[ 3 74 4 97] 
#[ 3 74 4 101] 
#[ 3 74 4 105] 
#[ 3 74 4 109] 
#[ 3 74 4 113] 
#[ 3 78 4 41] 
#[ 3 78 4 45] 
#[ 3 78 4 49] 
#[ 3 78 4 53] 
#[ 3 78 4 57] 
#[ 3 78 4 61] 
#[ 3 78 4 65] 
#[ 3 78 4 69] 
#[ 3 78 4 73] 
#[ 3 78 4 77] 
#[ 3 78 4 81] 
#[ 3 78 4 85] 
#[ 3 78 4 89] 
#[ 3 78 4 93] 
#[ 3 78 4 97] 
#[ 3 78 4 101] 
#[ 3 78 4 105] 
#[ 3 78 4 109] 
#[ 3 78 4 113] 
#[ 3 82 4 41] 
#[ 3 82 4 45] 
#[ 3 82 4 49] 
#[ 3 82 4 53] 
#[ 3 82 4 57] 
#[ 3 82 4 61] 
#[ 3 82 4 65] 
#[ 3 82 4 69] 
#[ 3 82 4 73] 
#[ 3 82 4 77] 
#[ 3 82 4 81] 
#[ 3 82 4 85] 
#[ 3 82 4 89] 
#[ 3 82 4 93] 
#[ 3 82 4 97] 
#[ 3 82 4 101] 
#[ 3 82 4 105] 
#[ 3 82 4 109] 
#[ 3 82 4 113] 
#[ 3 86 4 41] 
#[ 3 86 4 45] 
#[ 3 86 4 49] 
#[ 3 86 4 53] 
#[ 3 86 4 57] 
#[ 3 86 4 61] 
#[ 3 86 4 65] 
#[ 3 86 4 69] 
#[ 3 86 4 73] 
#[ 3 86 4 77] 
#[ 3 86 4 81] 
#[ 3 86 4 85] 
#[ 3 86 4 89] 
#[ 3 86 4 93] 
#[ 3 86 4 97] 
#[ 3 86 4 101] 
#[ 3 86 4 105] 
#[ 3 86 4 109] 
#[ 3 86 4 113] 
#[ 3 90 4 41] 
#[ 3 90 4 45] 
#[ 3 90 4 49] 
#[ 3 90 4 53] 
#[ 3 90 4 57] 
#[ 3 90 4 61] 
#[ 3 90 4 65] 
#[ 3 90 4 69] 
#[ 3 90 4 73] 
#[ 3 90 4 77] 
#[ 3 90 4 81] 
#[ 3 90 4 85] 
#[ 3 90 4 89] 
#[ 3 90 4 93] 
#[ 3 90 4 97] 
#[ 3 90 4 101] 
#[ 3 90 4 105] 
#[ 3 90 4 109] 
#[ 3 90 4 113] 
#[ 3 94 4 41] 
#[ 3 94 4 45] 
#[ 3 94 4 49] 
#[ 3 94 4 53] 
#[ 3 94 4 57] 
#[ 3 94 4 61] 
#[ 3 94 4 65] 
#[ 3 94 4 69] 
#[ 3 94 4 73] 
#[ 3 94 4 77] 
#[ 3 94 4 81] 
#[ 3 94 4 85] 
#[ 3 94 4 89] 
#[ 3 94 4 93] 
#[ 3 94 4 97] 
#[ 3 94 4 101] 
#[ 3 94 4 105] 
#[ 3 94 4 109] 
#[ 3 94 4 113] 
#[ 3 98 4 41] 
#[ 3 98 4 45] 
#[ 3 98 4 49] 
#[ 3 98 4 53] 
#[ 3 98 4 57] 
#[ 3 98 4 61] 
#[ 3 98 4 65] 
#[ 3 98 4 69] 
#[ 3 98 4 73] 
#[ 3 98 4 77] 
#[ 3 98 4 81] 
#[ 3 98 4 85] 
#[ 3 98 4 89] 
#[ 3 98 4 93] 
#[ 3 98 4 97] 
#[ 3 98 4 101] 
#[ 3 98 4 105] 
#[ 3 98 4 109] 
#[ 3 98 4 113] 
#[ 3 102 4 41] 
#[ 3 102 4 45] 
#[ 3 102 4 49] 
#[ 3 102 4 53] 
#[ 3 102 4 57] 
#[ 3 102 4 61] 
#[ 3 102 4 65] 
#[ 3 102 4 69] 
#[ 3 102 4 73] 
#[ 3 102 4 77] 
#[ 3 102 4 81] 
#[ 3 102 4 85] 
#[ 3 102 4 89] 
#[ 3 102 4 93] 
#[ 3 102 4 97] 
#[ 3 102 4 101] 
#[ 3 102 4 105] 
#[ 3 102 4 109] 
#[ 3 102 4 113] 
#[ 3 106 4 41] 
#[ 3 106 4 45] 
#[ 3 106 4 49] 
#[ 3 106 4 53] 
#[ 3 106 4 57] 
#[ 3 106 4 61] 
#[ 3 106 4 65] 
#[ 3 106 4 69] 
#[ 3 106 4 73] 
#[ 3 106 4 77] 
#[ 3 106 4 81] 
#[ 3 106 4 85] 
#[ 3 106 4 89] 
#[ 3 106 4 93] 
#[ 3 106 4 97] 
#[ 3 106 4 101] 
#[ 3 106 4 105] 
#[ 3 106 4 109] 
#[ 3 106 4 113] 
#[ 3 110 4 41] 
#[ 3 110 4 45] 
#[ 3 110 4 49] 
#[ 3 110 4 53] 
#[ 3 110 4 57] 
#[ 3 110 4 61] 
#[ 3 110 4 65] 
#[ 3 110 4 69] 
#[ 3 110 4 73] 
#[ 3 110 4 77] 
#[ 3 110 4 81] 
#[ 3 110 4 85] 
#[ 3 110 4 89] 
#[ 3 110 4 93] 
#[ 3 110 4 97] 
#[ 3 110 4 101] 
#[ 3 110 4 105] 
#[ 3 110 4 109] 
#[ 3 110 4 113] 
#[ 3 114 4 41] 
#[ 3 114 4 45] 
#[ 3 114 4 49] 
#[ 3 114 4 53] 
#[ 3 114 4 57] 
#[ 3 114 4 61] 
#[ 3 114 4 65] 
#[ 3 114 4 69] 
#[ 3 114 4 73] 
#[ 3 114 4 77] 
#[ 3 114 4 81] 
#[ 3 114 4 85] 
#[ 3 114 4 89] 
#[ 3 114 4 93] 
#[ 3 114 4 97] 
#[ 3 114 4 101] 
#[ 3 114 4 105] 
#[ 3 114 4 109] 
#[ 3 114 4 113] 
#[ 3 118 4 41] 
#[ 3 118 4 45] 
#[ 3 118 4 49] 
#[ 3 118 4 53] 
#[ 3 118 4 57] 
#[ 3 118 4 61] 
#[ 3 118 4 65] 
#[ 3 118 4 69] 
#[ 3 118 4 73] 
#[ 3 118 4 77] 
#[ 3 118 4 81] 
#[ 3 118 4 85] 
#[ 3 118 4 89] 
#[ 3 118 4 93] 
#[ 3 118 4 97] 
#[ 3 118 4 101] 
#[ 3 118 4 105] 
#[ 3 118 4 109] 
#[ 3 118 4 113] 
#[ 3 122 4 41] 
#[ 3 122 4 45] 
#[ 3 122 4 49] 
#[ 3 122 4 53] 
#[ 3 122 4 57] 
#[ 3 122 4 61] 
#[ 3 122 4 65] 
#[ 3 122 4 69] 
#[ 3 122 4 73] 
#[ 3 122 4 77] 
#[ 3 122 4 81] 
#[ 3 122 4 85] 
#[ 3 122 4 89] 
#[ 3 122 4 93] 
#[ 3 122 4 97] 
#[ 3 122 4 101] 
#[ 3 122 4 105] 
#[ 3 122 4 109] 
#[ 3 122 4 113] 
#[ 3 126 4 41] 
#[ 3 126 4 45] 
#[ 3 126 4 49] 
#[ 3 126 4 53] 
#[ 3 126 4 57] 
#[ 3 126 4 61] 
#[ 3 126 4 65] 
#[ 3 126 4 69] 
#[ 3 126 4 73] 
#[ 3 126 4 77] 
#[ 3 126 4 81] 
#[ 3 126 4 85] 
#[ 3 126 4 89] 
#[ 3 126 4 93] 
#[ 3 126 4 97] 
#[ 3 126 4 101] 
#[ 3 126 4 105] 
#[ 3 126 4 109] 
#[ 3 126 4 113] 
#[ 3 130 4 41] 
#[ 3 130 4 45] 
#[ 3 130 4 49] 
#[ 3 130 4 53] 
#[ 3 130 4 57] 
#[ 3 130 4 61] 
#[ 3 130 4 65] 
#[ 3 130 4 69] 
#[ 3 130 4 73] 
#[ 3 130 4 77] 
#[ 3 130 4 81] 
#[ 3 130 4 85] 
#[ 3 130 4 89] 
#[ 3 130 4 93] 
#[ 3 130 4 97] 
#[ 3 130 4 101] 
#[ 3 130 4 105] 
#[ 3 130 4 109] 
#[ 3 130 4 113] 
#[ 3 134 4 41] 
#[ 3 134 4 45] 
#[ 3 134 4 49] 
#[ 3 134 4 53] 
#[ 3 134 4 57] 
#[ 3 134 4 61] 
#[ 3 134 4 65] 
#[ 3 134 4 69] 
#[ 3 134 4 73] 
#[ 3 134 4 77] 
#[ 3 134 4 81] 
#[ 3 134 4 85] 
#[ 3 134 4 89] 
#[ 3 134 4 93] 
#[ 3 134 4 97] 
#[ 3 134 4 101] 
#[ 3 134 4 105] 
#[ 3 134 4 109] 
#[ 3 134 4 113] 
#[ 3 138 4 41] 
#[ 3 138 4 45] 
#[ 3 138 4 49] 
#[ 3 138 4 53] 
#[ 3 138 4 57] 
#[ 3 138 4 61] 
#[ 3 138 4 65] 
#[ 3 138 4 69] 
#[ 3 138 4 73] 
#[ 3 138 4 77] 
#[ 3 138 4 81] 
#[ 3 138 4 85] 
#[ 3 138 4 89] 
#[ 3 138 4 93] 
#[ 3 138 4 97] 
#[ 3 138 4 101] 
#[ 3 138 4 105] 
#[ 3 138 4 109] 
#[ 3 138 4 113] 
#[ 3 182 7 209] 
#[ 3 190 7 209] 
#[ 0 6 4 97] 
#[ 0 6 4 101] 
#[ 0 6 4 105] 
#[ 0 6 4 109] 
#[ 0 6 4 113] 
#[ 4 46 4 97] 
#[ 4 46 4 101] 
#[ 4 46 4 105] 
#[ 4 46 4 109] 
#[ 4 46 4 113] 
#[ 0 245 4 54] 
#[ 0 249 4 54] 
#[ 0 253 4 54] 
#[ 1 1 4 54] 
#[ 1 5 4 54] 
#[ 1 105 4 54] 
#[ 1 181 4 54] 
#[ 1 21 4 54] 
#[ 1 29 4 54] 
#[ 1 33 4 54] 
#[ 4 118 8 169] 
#[ 4 73 4 130] 
#[ 4 77 4 130] 
#[ 4 81 4 130] 
#[ 4 85 4 130] 
#[ 4 89 4 130] 
#[ 4 93 4 130] 
#[ 4 97 4 130] 
#[ 4 101 4 130] 
#[ 4 105 4 130] 
#[ 4 109 4 130] 
#[ 4 113 4 130]
	).
]

{ #category : #generated }
GoParser class >> definitionComment [
"/*
 [The ""BSD licence""] Copyright (c) 2017 Sasa Coh, Michal Blotniak
 Copyright (c) 2019 Ivan Kochurkin, kvanttt@gmail.com, Positive Technologies 
 Copyright (c) 2019 Dmitry Rassadin, flipparassa@gmail.com,Positive Technologies All rights reserved. 
 Copyright (c) 2021 Martin Mirchev, mirchevmartin2203@gmail.com
 Copyright (c) 2023 Dmitry Litovchenko, i@dlitovchenko.ru

 Redistribution and use in source and binary forms, with or without modification, are permitted
 provided that the following conditions are met: 1. Redistributions of source code must retain the
 above copyright notice, this list of conditions and the following disclaimer. 2. Redistributions in
 binary form must reproduce the above copyright notice, this list of conditions and the following
 disclaimer in the documentation and/or other materials provided with the distribution. 3. The name
 of the author may not be used to endorse or promote products derived from this software without
 specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
 BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * A Go grammar for ANTLR 4 derived from the Go Language Specification https://golang.org/ref/spec
 */

# $antlr-format alignTrailingComments true, columnLimit 150, minEmptyLines 1, maxEmptyLinesToKeep 1, reflowComments false, useTab false
# $antlr-format allowShortRulesOnASingleLine false, allowShortBlocksOnASingleLine true, alignSemicolons hanging, alignColons hanging

%glr;
#%annotate_tokens;
%root Program;
%prefix Go;
%suffix Node;
%start sourceFile;

<BREAK>       : break /*-> mode(NLSEMI);*/;
<DEFAULT>     : default;
<FUNC>        : func;
<INTERFACE>   : interface;
<SELECT>      : select;
<CASE>        : case;
<DEFER>       : defer;
<GO>          : go;
<MAP>         : map;
<STRUCT>      : struct;
<CHAN>        : chan;
<ELSE>        : else;
<GOTO>        : goto;
<PACKAGE>     : package;
<SWITCH>      : switch;
<CONST>       : const;
<FALLTHROUGH> : fallthrough /*-> mode(NLSEMI);*/;
<IF>          : if;
<RANGE>       : range;
<TYPE>        : type;
<CONTINUE>    : continue /*-> mode(NLSEMI);*/;
<FOR>         : for;
<IMPORT>      : import;
<RETURN>      : return /*-> mode(NLSEMI);*/;
<VAR>         : var;

<NIL_LIT>: nil /*-> mode(NLSEMI);*/;

<IDENTIFIER>: <LETTER> (<LETTER> | <UNICODE_DIGIT>)*;

# Punctuation

<L_PAREN>        : \(;
<R_PAREN>        : \) /*-> mode(NLSEMI);*/;
<L_CURLY>        : \{;
<R_CURLY>        : \} /*-> mode(NLSEMI);*/;
<L_BRACKET>      : \[;
<R_BRACKET>      : \] /*-> mode(NLSEMI);*/;
<ASSIGN>         : \=;
<COMMA>          : \,;
<SEMI>           : \;;
<COLON>          : \:;
<DOT>            : \.;
<PLUS_PLUS>      : \+\+ /*-> mode(NLSEMI);*/;
<MINUS_MINUS>    : \-\- /*-> mode(NLSEMI);*/;
<DECLARE_ASSIGN> : \:\=;
<ELLIPSIS>       : \.\.\.;

# Logical

<LOGICAL_OR>  : \|\|;
<LOGICAL_AND> : \&\&;

# Relation operators

<EQUALS>            : \=\=;
<NOT_EQUALS>        : \!\=;
<LESS>              : \<;
<LESS_OR_EQUALS>    : \<\=;
<GREATER>           : \>;
<GREATER_OR_EQUALS> : \>\=;

# Arithmetic operators

<OR>         : \|;
<DIV>        : \/;
<MOD>        : \%;
<LSHIFT>     : \<\<;
<RSHIFT>     : \>\>;
<BIT_CLEAR>  : \&\^;
<UNDERLYING> : \~;

# Unary operators

<EXCLAMATION>: \!;

# Mixed operators

<PLUS>      : \+;
<MINUS>     : \-;
<CARET>     : \^;
<STAR>      : \*;
<AMPERSAND> : \&;
<RECEIVE>   : \<\-;

# Number literals

<DECIMAL_LIT> : (0 | [1-9] (_? [0-9])*)   /*-> mode(NLSEMI);*/;
<BINARY_LIT>  : 0 [bB] (_? <BIN_DIGIT>)+    /*-> mode(NLSEMI);*/;
<OCTAL_LIT>   : 0 [oO]? (_? <OCTAL_DIGIT>)+ /*-> mode(NLSEMI);*/;
<HEX_LIT>     : 0 [xX] (_? <HEX_DIGIT>)+    /*-> mode(NLSEMI);*/;

<FLOAT_LIT>: (<DECIMAL_FLOAT_LIT> | <HEX_FLOAT_LIT>) /*-> mode(NLSEMI);*/;

<DECIMAL_FLOAT_LIT>: <DECIMALS> (\. <DECIMALS>? <EXPONENT>? | <EXPONENT>) | \. <DECIMALS> <EXPONENT>?;

<HEX_FLOAT_LIT>: 0 [xX] <HEX_MANTISSA> <HEX_EXPONENT>;

<HEX_MANTISSA>:
    (_? <HEX_DIGIT>)+ (\. ( _? <HEX_DIGIT>)*)?
    | \. <HEX_DIGIT> (_? <HEX_DIGIT>)*
;

<HEX_EXPONENT>: [pP] [\+\-]? <DECIMALS>;

<IMAGINARY_LIT>: (<DECIMAL_LIT> | <BINARY_LIT> | <OCTAL_LIT> | <HEX_LIT> | <FLOAT_LIT>) i /*-> mode(NLSEMI);*/;

# Rune literals

<RUNE>: \' (<UNICODE_VALUE> | <BYTE_VALUE>) \'; #: '\'' (~[\n\\] | ESCAPED_VALUE) '\'';

<RUNE_LIT>: <RUNE> /*-> mode(NLSEMI);*/;

<BYTE_VALUE>: <OCTAL_BYTE_VALUE> | <HEX_BYTE_VALUE>;

<OCTAL_BYTE_VALUE>: \\ <OCTAL_DIGIT> <OCTAL_DIGIT> <OCTAL_DIGIT>;

<HEX_BYTE_VALUE>: \\ x <HEX_DIGIT> <HEX_DIGIT>;

<LITTLE_U_VALUE>: \\ u <HEX_DIGIT> <HEX_DIGIT> <HEX_DIGIT> <HEX_DIGIT>;

<BIG_U_VALUE>:
    \\ U <HEX_DIGIT> <HEX_DIGIT> <HEX_DIGIT> <HEX_DIGIT> <HEX_DIGIT> <HEX_DIGIT> <HEX_DIGIT> <HEX_DIGIT>
;

# String literals

<RAW_STRING_LIT>         : \` [^\`]* \`                     /*-> mode(NLSEMI);*/;
<INTERPRETED_STRING_LIT> : \"" ([^\""\\] | <ESCAPED_VALUE>)* \"" /*-> mode(NLSEMI);*/;

# Hidden tokens

<whitespace>: [ \t]+;
<COMMENT>      : \/\* .*/* TODO: ? */ \*\/ /*-> channel(HIDDEN);*/;
<TERMINATOR>   : [\r\n]+       /*-> channel(HIDDEN);*/;
<LINE_COMMENT> : \/\/ [^\r\n]* /*-> channel(HIDDEN);*/;

<UNICODE_VALUE>: [^\r\n\'] | <LITTLE_U_VALUE> | <BIG_U_VALUE> | <ESCAPED_VALUE>;

# Fragments

<ESCAPED_VALUE>:
    \\ (
        u <HEX_DIGIT> <HEX_DIGIT> <HEX_DIGIT> <HEX_DIGIT>
        | U <HEX_DIGIT> <HEX_DIGIT> <HEX_DIGIT> <HEX_DIGIT> <HEX_DIGIT> <HEX_DIGIT> <HEX_DIGIT> <HEX_DIGIT>
        | [abfnrtv\\\'\""]
        | <OCTAL_DIGIT> <OCTAL_DIGIT> <OCTAL_DIGIT>
        | x <HEX_DIGIT> <HEX_DIGIT>
    )
;

<DECIMALS>: [0-9] (_? [0-9])*;

<OCTAL_DIGIT>: [0-7];

<HEX_DIGIT>: [0-9a-fA-F];

<BIN_DIGIT>: [01];

<EXPONENT>: (e | E) [+\-]? <DECIMALS>;

<LETTER>: \w;

#[\p{Nd}] matches a digit zero through nine in any script except ideographic scripts
<UNICODE_DIGIT>: \d;
#[\p{L}] matches any kind of letter from any language
<UNICODE_LETTER>: [\p\{L\}];
<BLOCK_COMMENT>
	: (\/\* [^\*]* \*+ ([^\/\*] [^\*]* \*+)* \/)
	;
<comment>
	: <BLOCK_COMMENT> | <LINE_COMMENT>
	;
<NEWLINE>
	: [\n\r]+
	;


#
# Treat whitespace as normal
#NLSEMI <WS_NLSEMI>: [\ \t]+ /*-> channel(HIDDEN);*/;
# Ignore any comments that only span one line
#NLSEMI <COMMENT_NLSEMI>      : \/\* [^\r\n]*/* TODO: ? */ \*\/ /*-> channel(HIDDEN);*/;
#NLSEMI <LINE_COMMENT_NLSEMI> : \/\/ [^\r\n]*       /*-> channel(HIDDEN);*/;
# Emit an EOS token for any newlines, semicolon, multiline comments or the EOF and 
#return to normal lexing
#NLSEMI <EOS>: ([\r\n]+ | \; | \/\* .*/* TODO: ? */ \*\/ | ) /*-> mode(DEFAULT_MODE);*/;

# Did not find an EOS, so go back to normal lexing
# OTHER: /*-> mode(DEFAULT_MODE), channel(HIDDEN);? '*/' | EOF) /*-> mode(DEFAULT_MODE);*/;*/;
# Did not find an EOS, so go back to normal lexing
# OTHER: /*/*-> mode(DEFAULT_MODE), channel(HIDDEN);? '*/' | EOF) /*-> mode(DEFAULT_MODE);*/;*/;*/;
# Did not find an EOS, so go back to normal lexing
# OTHER: /*-> mode(DEFAULT_MODE), channel(HIDDEN)/;*' ~[\r\n]*? '*/' /*/*/*/*-> // channel(HIDDEN);*/;*/;*/;*/;*/;*/;

#LINE_COMMENT_NLSEMI : '//' ~[\r\n]*       /*/*/*/*/*/*-> channel(HIDDEN);*/;*/;*/;*/;*/;*/;
# Emit an EOS token for any newlines, semicolon, multiline comments or the EOF and 
#return to normal lexing
#NLSEMI <EOS>: ([\r\n]+ | \; | \/\* .*/* TODO: ? */ \*\/ | ) /*-> mode(DEFAULT_MODE); */;
# Did not find an EOS, so go back to normal lexing
#NLSEMI <OTHER>: /*-> mode(DEFAULT_MODE), channel(HIDDEN); */;
/*
interfaceType
    : INTERFACE L_CURLY ((methodSpec | typeElement) eos)* R_CURLY
    ;

sliceType
    : L_BRACKET R_BRACKET elementType
    ;

// It's possible to replace `type` with more restricted typeLit list and also pay attention to nil maps
mapType
    : MAP L_BRACKET type_ R_BRACKET elementType
    ;

channelType
    : (CHAN | CHAN RECEIVE | RECEIVE CHAN) elementType
    ;

methodSpec
    : IDENTIFIER parameters result
    | IDENTIFIER parameters
    ;

functionType
    : FUNC signature
    ;

signature
    : parameters result?
    ;

result
    : parameters
    | type_
    ;

parameters
    : L_PAREN (parameterDecl (COMMA parameterDecl)* COMMA?)? R_PAREN
    ;

parameterDecl
    : identifierList? ELLIPSIS? type_
    ;

expression
    : primaryExpr
    | unary_op = (PLUS | MINUS | EXCLAMATION | CARET | STAR | AMPERSAND | RECEIVE) expression
    | expression mul_op = (STAR | DIV | MOD | LSHIFT | RSHIFT | AMPERSAND | BIT_CLEAR) expression
    | expression add_op = (PLUS | MINUS | OR | CARET) expression
    | expression rel_op = (
        EQUALS
        | NOT_EQUALS
        | LESS
        | LESS_OR_EQUALS
        | GREATER
        | GREATER_OR_EQUALS
    ) expression
    | expression LOGICAL_AND expression
    | expression LOGICAL_OR expression
    ;

primaryExpr
    : operand
    | conversion
    | methodExpr
    | primaryExpr ( DOT IDENTIFIER | index | slice_ | typeAssertion | arguments)
    ;

conversion
    : type_ L_PAREN expression COMMA? R_PAREN
    ;

operand
    : literal
    | operandName typeArgs?
    | L_PAREN expression R_PAREN
    ;

literal
    : basicLit
    | compositeLit
    | functionLit
    ;

basicLit
    : NIL_LIT
    | integer
    | string_
    | FLOAT_LIT
    ;

integer
    : DECIMAL_LIT
    | BINARY_LIT
    | OCTAL_LIT
    | HEX_LIT
    | IMAGINARY_LIT
    | RUNE_LIT
    ;

operandName
    : IDENTIFIER
    ;

qualifiedIdent
    : IDENTIFIER DOT IDENTIFIER
    ;

compositeLit
    : literalType literalValue
    ;

literalType
    : structType
    | arrayType
    | L_BRACKET ELLIPSIS R_BRACKET elementType
    | sliceType
    | mapType
    | typeName typeArgs?
    ;

literalValue
    : L_CURLY (elementList COMMA?)? R_CURLY
    ;

elementList
    : keyedElement (COMMA keyedElement)*
    ;

keyedElement
    : (key COLON)? element
    ;

key
    : expression
    | literalValue
    ;

element
    : expression
    | literalValue
    ;

structType
    : STRUCT L_CURLY (fieldDecl eos)* R_CURLY
    ;

fieldDecl
    : (identifierList type_ | embeddedField) tag = string_?
    ;

string_
    : RAW_STRING_LIT
    | INTERPRETED_STRING_LIT
    ;

embeddedField
    : STAR? typeName typeArgs?
    ;

functionLit
    : FUNC signature block
    ; // function

index
    : L_BRACKET expression R_BRACKET
    ;

slice_
    : L_BRACKET (expression? COLON expression? | expression? COLON expression COLON expression) R_BRACKET
    ;

typeAssertion
    : DOT L_PAREN type_ R_PAREN
    ;

arguments
    : L_PAREN ((expressionList | type_ (COMMA expressionList)?) ELLIPSIS? COMMA?)? R_PAREN
    ;

methodExpr
    : type_ DOT IDENTIFIER
    ;
*/
/* 
eos
    : SEMI
    | EOF
    | EOS
    | {this.closingBracket()}?
    ;
    */


sourceFile
    : packageClause 'package' eos (importDecl 'import' eos)* ((functionDecl 'functionDeclaration' | methodDecl 'methodDeclaration' | declaration 'declaration') eos)* {{}}
    ;

packageClause
    : <PACKAGE> 'packageName' <IDENTIFIER> {{}}
    ;

importDecl
    : <IMPORT> (importSpec 'import' | (<L_PAREN> eos (importSpec 'import' eos)* <R_PAREN>)) {{}}
    ;

importSpec
    : (<DOT> 'name' | <IDENTIFIER> 'name')?  importPath 'path' {{}}
    ;

importPath
    : string_ 'string' {{}}
    ;

declaration
    : constDecl
    | typeDecl
    | varDecl
    ;

constDecl
    : <CONST> (constSpec | <L_PAREN> (constSpec eos)* <R_PAREN>)
    ;

constSpec
    : identifierList (type_? <ASSIGN> expressionList)?
    ;

identifierList
    : <IDENTIFIER> (<COMMA> <IDENTIFIER>)*
    ;

expressionList
    : expression (<COMMA> expression)*
    ;

typeDecl
    : <TYPE> (typeSpec | <L_PAREN> (typeSpec eos)* <R_PAREN>)
    ;

typeSpec
    : aliasDecl
    | typeDef
    ;

aliasDecl
    : <IDENTIFIER> <ASSIGN> type_
    ;

typeDef
    : <IDENTIFIER> typeParameters? type_
    ;

typeParameters
    : <L_BRACKET> typeParameterDecl (<COMMA> typeParameterDecl)* <R_BRACKET>
    ;

typeParameterDecl
    : identifierList typeElement
    ;

typeElement
    : typeTerm (<OR> typeTerm)*
    ;

typeTerm
    : <UNDERLYING>? type_
    ;

# Function declarations

functionDecl
    : <FUNC> <IDENTIFIER> typeParameters? signature block?
    ;

methodDecl
    : <FUNC> receiver <IDENTIFIER> signature block?
    ;

receiver
    : parameters
    ;

varDecl
    : <VAR> (varSpec | <L_PAREN> (varSpec eos)* <R_PAREN>)
    ;

varSpec
    : identifierList (type_ (<ASSIGN> expressionList)? | <ASSIGN> expressionList)
    ;

block
    : <L_CURLY> statementList? <R_CURLY>
    ;

statementList
    : ((<SEMI>? | eos?) statement eos)+
    ;

statement
    : declaration
    | labeledStmt
    | simpleStmt
    | goStmt
    | returnStmt
    | breakStmt
    | continueStmt
    | gotoStmt
    | fallthroughStmt
    | block
    | ifStmt
    | switchStmt
    | selectStmt
    | forStmt
    | deferStmt
    ;

simpleStmt
    : sendStmt
    | incDecStmt
    | assignment
    | expressionStmt
    | shortVarDecl
    ;

expressionStmt
    : expression
    ;

sendStmt
    : expression 'channel' <RECEIVE> expression
    ;

incDecStmt
    : expression (<PLUS_PLUS> | <MINUS_MINUS>)
    ;

assignment
    : expressionList assign_op expressionList
    ;

assign_op
    : (<PLUS> | <MINUS> | <OR> | <CARET> | <STAR> | <DIV> | <MOD> | <LSHIFT> | <RSHIFT> | <AMPERSAND> | <BIT_CLEAR>)? <ASSIGN>
    ;

shortVarDecl
    : identifierList <DECLARE_ASSIGN> expressionList
    ;

labeledStmt
    : <IDENTIFIER> <COLON> statement?
    ;

returnStmt
    : <RETURN> expressionList?
    ;

breakStmt
    : <BREAK> <IDENTIFIER>?
    ;

continueStmt
    : <CONTINUE> <IDENTIFIER>?
    ;

gotoStmt
    : <GOTO> <IDENTIFIER>
    ;

fallthroughStmt
    : <FALLTHROUGH>
    ;

deferStmt
    : <DEFER> expression
    ;

ifStmt
    : <IF> (expression | eos expression | simpleStmt eos expression) block (<ELSE> (ifStmt | block))?
    ;

switchStmt
    : exprSwitchStmt
    | typeSwitchStmt
    ;

exprSwitchStmt
    : <SWITCH> (expression? | simpleStmt? eos expression?) <L_CURLY> exprCaseClause* <R_CURLY>
    ;

exprCaseClause
    : exprSwitchCase <COLON> statementList?
    ;

exprSwitchCase
    : <CASE> expressionList
    | <DEFAULT>
    ;

typeSwitchStmt
    : <SWITCH> (typeSwitchGuard | eos typeSwitchGuard | simpleStmt eos typeSwitchGuard) <L_CURLY> typeCaseClause* <R_CURLY>
    ;

typeSwitchGuard
    : (<IDENTIFIER> <DECLARE_ASSIGN>)? primaryExpr <DOT> <L_PAREN> <TYPE> <R_PAREN>
    ;

typeCaseClause
    : typeSwitchCase <COLON> statementList?
    ;

typeSwitchCase
    : <CASE> typeList
    | <DEFAULT>
    ;

typeList
    : (type_ | <NIL_LIT>) (<COMMA> (type_ | <NIL_LIT>))*
    ;

selectStmt
    : <SELECT> <L_CURLY> commClause* <R_CURLY>
    ;

commClause
    : commCase <COLON> statementList?
    ;

commCase
    : <CASE> (sendStmt | recvStmt)
    | <DEFAULT>
    ;

recvStmt
    : (expressionList <ASSIGN> | identifierList <DECLARE_ASSIGN>)? expression 'recvExpr'
    ;

forStmt
    : <FOR> (expression? | forClause | rangeClause?) block
    ;

forClause
    : simpleStmt 'initStmt' ? eos expression? eos simpleStmt 'postStmt' ?
    ;

rangeClause
    : (expressionList <ASSIGN> | identifierList <DECLARE_ASSIGN>)? <RANGE> expression
    ;

goStmt
    : <GO> expression
    ;

type_
    : typeName typeArgs?
    | typeLit
    | <L_PAREN> type_ <R_PAREN>
    ;

typeArgs
    : <L_BRACKET> typeList <COMMA>? <R_BRACKET>
    ;

typeName
    : qualifiedIdent
    | <IDENTIFIER>
    ;

typeLit
    : arrayType
    | structType
    | pointerType
    | functionType
    | interfaceType
    | sliceType
    | mapType
    | channelType
    ;

arrayType
    : <L_BRACKET> arrayLength <R_BRACKET> elementType
    ;

arrayLength
    : expression
    ;

elementType
    : type_
    ;

pointerType
    : <STAR> type_
    ;

interfaceType
    : <INTERFACE> <L_CURLY> ((methodSpec | typeElement) eos)* <R_CURLY>
    ;

sliceType
    : <L_BRACKET> <R_BRACKET> elementType
    ;

# It's possible to replace `type` with more restricted typeLit list and also pay attention to nil maps
mapType
    : <MAP> <L_BRACKET> type_ <R_BRACKET> elementType
    ;

channelType
    : (<CHAN> | <CHAN> <RECEIVE> | <RECEIVE> <CHAN>) elementType
    ;

methodSpec
    : <IDENTIFIER> parameters result
    | <IDENTIFIER> parameters
    ;

functionType
    : <FUNC> signature
    ;

signature
    : parameters result?
    ;

result
    : parameters
    | type_
    ;

parameters
    : <L_PAREN> (parameterDecl (<COMMA> parameterDecl)* <COMMA>?)? <R_PAREN>
    ;

parameterDecl
    : identifierList? <ELLIPSIS>? type_
    ;

expression
    : primaryExpr
    | (<PLUS> | <MINUS> | <EXCLAMATION> | <CARET> | <STAR> | <AMPERSAND> | <RECEIVE> 'unaryOp' ) expression
    | expression (<STAR> | <DIV> | <MOD> | <LSHIFT> | <RSHIFT> | <AMPERSAND> | <BIT_CLEAR> 'mulOp') expression
    | expression (<PLUS> | <MINUS> | <OR> | <CARET> 'addOp') expression
    | expression (
        <EQUALS>
        | <NOT_EQUALS>
        | <LESS>
        | <LESS_OR_EQUALS>
        | <GREATER>
        | <GREATER_OR_EQUALS> 'relOp'
    ) expression
    | expression <LOGICAL_AND> expression
    | expression <LOGICAL_OR> expression
    ;

primaryExpr
    : operand
    | conversion
    | methodExpr
    | primaryExpr ( <DOT> <IDENTIFIER> | index | slice_ | typeAssertion | arguments)
    ;

conversion
    : type_ <L_PAREN> expression <COMMA>? <R_PAREN>
    ;

operand
    : literal
    | operandName typeArgs?
    | <L_PAREN> expression <R_PAREN>
    ;

literal
    : basicLit
    | compositeLit
    | functionLit
    ;

basicLit
    : <NIL_LIT>
    | integer
    | string_
    | <FLOAT_LIT>
    ;

integer
    : <DECIMAL_LIT>
    | <BINARY_LIT>
    | <OCTAL_LIT>
    | <HEX_LIT>
    | <IMAGINARY_LIT>
    | <RUNE_LIT>
    ;

operandName
    : <IDENTIFIER>
    ;

qualifiedIdent
    : <IDENTIFIER> <DOT> <IDENTIFIER>
    ;

compositeLit
    : literalType literalValue
    ;

literalType
    : structType
    | arrayType
    | <L_BRACKET> <ELLIPSIS> <R_BRACKET> elementType
    | sliceType
    | mapType
    | typeName typeArgs?
    ;

literalValue
    : <L_CURLY> <NEWLINE>? (elementList <COMMA>? <NEWLINE>?)? <R_CURLY>
    ;

elementList
    : keyedElement (<COMMA> keyedElement)*
    ;

keyedElement
    : (key <COLON>)? element
    ;

key
    : expression
    | literalValue
    ;

element
    : expression
    | literalValue
    ;

structType
    : <STRUCT> <L_CURLY> (fieldDecl eos)* <R_CURLY>
    ;

fieldDecl
    : (identifierList type_ | embeddedField) string_ 'tag' ?
    ;

string_
    : <RAW_STRING_LIT>
    | <INTERPRETED_STRING_LIT>
    ;

embeddedField
    : <STAR>? typeName typeArgs?
    ;

functionLit
    : <FUNC> signature block
    ; # function

index
    : <L_BRACKET> expression <R_BRACKET>
    ;

slice_
    : <L_BRACKET> (expression? <COLON> expression? | expression? <COLON> expression <COLON> expression) <R_BRACKET>
    ;

typeAssertion
    : <DOT> <L_PAREN> type_ <R_PAREN>
    ;

arguments
    : <L_PAREN> ((expressionList | type_ (<COMMA> expressionList)?) <ELLIPSIS>? <COMMA>?)? <R_PAREN>
    ;

methodExpr
    : type_ <DOT> <IDENTIFIER>
    ;

eos
    : <SEMI>
   | <NEWLINE>?
    ;"
]

{ #category : #generated }
GoParser class >> scannerClass [
	^GoScanner
]

{ #category : #generated }
GoParser class >> startingStateForsourceFile [
	^ 1
]

{ #category : #generated }
GoParser class >> symbolTypes [
	^ #(#SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #GoSourceFileNode #GoSourceFileNode #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #GoPackageClauseNode #GoImportDeclNode #OrderedCollection #OrderedCollection #GoImportSpecNode #GoImportPathNode #GoDeclarationNode #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #GoFunctionDeclNode #GoMethodDeclNode #GoParametersNode #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #SmaCCToken #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #GoSignatureNode #OrderedCollection #GoParametersNode #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #SmaCCToken #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #SmaCCToken #OrderedCollection #OrderedCollection #SmaCCToken #SmaCCErrorNode)
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFor__COMMA___IDENTIFIER___1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFor__functionDecl__functionDeclaration____methodDecl__methodDeclaration____declaration__declaration___eos_1: nodes [
	| result |
	result := Array new: 5.
	result at: 1 put: (nodes at: 1).
	result at: 2 put: ((nodes at: 2) at: 1).
	result at: 3 put: ((nodes at: 2) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFor__functionDecl__functionDeclaration____methodDecl__methodDeclaration____declaration__declaration___eos_2: nodes [
	| result |
	result := Array new: 5.
	result at: 4 put: (nodes at: 1).
	result at: 2 put: ((nodes at: 2) at: 1).
	result at: 3 put: ((nodes at: 2) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFor__functionDecl__functionDeclaration____methodDecl__methodDeclaration____declaration__declaration___eos_3: nodes [
	| result |
	result := Array new: 5.
	result at: 5 put: (nodes at: 1).
	result at: 2 put: ((nodes at: 2) at: 1).
	result at: 3 put: ((nodes at: 2) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFor__functionDecl__functionDeclaration____methodDecl__methodDeclaration____declaration__declaration___eos__1: nodes [
	| result |
	result := Array new: 5.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFor__functionDecl__functionDeclaration____methodDecl__methodDeclaration____declaration__declaration___eos__2: nodes [
	| result |
	result := nodes at: 1.
	self add: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 4).
	self add: ((nodes at: 2) at: 3) to: (result at: 5).
	self add: ((nodes at: 2) at: 4) to: (result at: 2).
	self add: ((nodes at: 2) at: 5) to: (result at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFor_constSpec_eos__1: nodes [
	| result |
	result := Array new: 83.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 7 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 9 put: (OrderedCollection new: 2).
	result at: 10 put: (OrderedCollection new: 2).
	result at: 11 put: (OrderedCollection new: 2).
	result at: 12 put: (OrderedCollection new: 2).
	result at: 13 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 15 put: (OrderedCollection new: 2).
	result at: 16 put: (OrderedCollection new: 2).
	result at: 17 put: (OrderedCollection new: 2).
	result at: 18 put: (OrderedCollection new: 2).
	result at: 19 put: (OrderedCollection new: 2).
	result at: 20 put: (OrderedCollection new: 2).
	result at: 21 put: (OrderedCollection new: 2).
	result at: 22 put: (OrderedCollection new: 2).
	result at: 23 put: (OrderedCollection new: 2).
	result at: 24 put: (OrderedCollection new: 2).
	result at: 25 put: (OrderedCollection new: 2).
	result at: 26 put: (OrderedCollection new: 2).
	result at: 27 put: (OrderedCollection new: 2).
	result at: 28 put: (OrderedCollection new: 2).
	result at: 29 put: (OrderedCollection new: 2).
	result at: 30 put: (OrderedCollection new: 2).
	result at: 31 put: (OrderedCollection new: 2).
	result at: 32 put: (OrderedCollection new: 2).
	result at: 33 put: (OrderedCollection new: 2).
	result at: 34 put: (OrderedCollection new: 2).
	result at: 35 put: (OrderedCollection new: 2).
	result at: 36 put: (OrderedCollection new: 2).
	result at: 37 put: (OrderedCollection new: 2).
	result at: 38 put: (OrderedCollection new: 2).
	result at: 39 put: (OrderedCollection new: 2).
	result at: 40 put: (OrderedCollection new: 2).
	result at: 41 put: (OrderedCollection new: 2).
	result at: 42 put: (OrderedCollection new: 2).
	result at: 43 put: (OrderedCollection new: 2).
	result at: 44 put: (OrderedCollection new: 2).
	result at: 45 put: (OrderedCollection new: 2).
	result at: 46 put: (OrderedCollection new: 2).
	result at: 47 put: (OrderedCollection new: 2).
	result at: 48 put: (OrderedCollection new: 2).
	result at: 49 put: (OrderedCollection new: 2).
	result at: 50 put: (OrderedCollection new: 2).
	result at: 51 put: (OrderedCollection new: 2).
	result at: 52 put: (OrderedCollection new: 2).
	result at: 53 put: (OrderedCollection new: 2).
	result at: 54 put: (OrderedCollection new: 2).
	result at: 55 put: (OrderedCollection new: 2).
	result at: 56 put: (OrderedCollection new: 2).
	result at: 57 put: (OrderedCollection new: 2).
	result at: 58 put: (OrderedCollection new: 2).
	result at: 59 put: (OrderedCollection new: 2).
	result at: 60 put: (OrderedCollection new: 2).
	result at: 61 put: (OrderedCollection new: 2).
	result at: 62 put: (OrderedCollection new: 2).
	result at: 63 put: (OrderedCollection new: 2).
	result at: 64 put: (OrderedCollection new: 2).
	result at: 65 put: (OrderedCollection new: 2).
	result at: 66 put: (OrderedCollection new: 2).
	result at: 67 put: (OrderedCollection new: 2).
	result at: 68 put: (OrderedCollection new: 2).
	result at: 69 put: (OrderedCollection new: 2).
	result at: 70 put: (OrderedCollection new: 2).
	result at: 71 put: (OrderedCollection new: 2).
	result at: 72 put: (OrderedCollection new: 2).
	result at: 73 put: (OrderedCollection new: 2).
	result at: 74 put: (OrderedCollection new: 2).
	result at: 75 put: (OrderedCollection new: 2).
	result at: 76 put: (OrderedCollection new: 2).
	result at: 77 put: (OrderedCollection new: 2).
	result at: 78 put: (OrderedCollection new: 2).
	result at: 79 put: (OrderedCollection new: 2).
	result at: 80 put: (OrderedCollection new: 2).
	result at: 81 put: (OrderedCollection new: 2).
	result at: 82 put: (OrderedCollection new: 2).
	result at: 83 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFor_importDecl__import__eos_1: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (nodes at: 1).
	result at: 2 put: ((nodes at: 2) at: 1).
	result at: 3 put: ((nodes at: 2) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFor_importDecl__import__eos__1: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFor_importDecl__import__eos__2: nodes [
	| result |
	result := nodes at: 1.
	self add: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	self add: ((nodes at: 2) at: 3) to: (result at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionForconstDecl1: nodes [
	| result |
	result := Array new: 83.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 7 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 9 put: (OrderedCollection new: 2).
	result at: 10 put: (OrderedCollection new: 2).
	result at: 11 put: (OrderedCollection new: 2).
	result at: 12 put: (OrderedCollection new: 2).
	result at: 13 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 15 put: (OrderedCollection new: 2).
	result at: 16 put: (OrderedCollection new: 2).
	result at: 17 put: (OrderedCollection new: 2).
	result at: 18 put: (OrderedCollection new: 2).
	result at: 19 put: (OrderedCollection new: 2).
	result at: 20 put: (OrderedCollection new: 2).
	result at: 21 put: (OrderedCollection new: 2).
	result at: 22 put: (OrderedCollection new: 2).
	result at: 23 put: (OrderedCollection new: 2).
	result at: 24 put: (OrderedCollection new: 2).
	result at: 25 put: (OrderedCollection new: 2).
	result at: 26 put: (OrderedCollection new: 2).
	result at: 27 put: (OrderedCollection new: 2).
	result at: 28 put: (OrderedCollection new: 2).
	result at: 29 put: (OrderedCollection new: 2).
	result at: 30 put: (OrderedCollection new: 2).
	result at: 31 put: (OrderedCollection new: 2).
	result at: 32 put: (OrderedCollection new: 2).
	result at: 33 put: (OrderedCollection new: 2).
	result at: 34 put: (OrderedCollection new: 2).
	result at: 35 put: (OrderedCollection new: 2).
	result at: 36 put: (OrderedCollection new: 2).
	result at: 37 put: (OrderedCollection new: 2).
	result at: 38 put: (OrderedCollection new: 2).
	result at: 39 put: (OrderedCollection new: 2).
	result at: 40 put: (OrderedCollection new: 2).
	result at: 41 put: (OrderedCollection new: 2).
	result at: 42 put: (OrderedCollection new: 2).
	result at: 43 put: (OrderedCollection new: 2).
	result at: 44 put: (OrderedCollection new: 2).
	result at: 45 put: (OrderedCollection new: 2).
	result at: 46 put: (OrderedCollection new: 2).
	result at: 47 put: (OrderedCollection new: 2).
	result at: 48 put: (OrderedCollection new: 2).
	result at: 49 put: (OrderedCollection new: 2).
	result at: 50 put: (OrderedCollection new: 2).
	result at: 51 put: (OrderedCollection new: 2).
	result at: 52 put: (OrderedCollection new: 2).
	result at: 53 put: (OrderedCollection new: 2).
	result at: 54 put: (OrderedCollection new: 2).
	result at: 55 put: (OrderedCollection new: 2).
	result at: 56 put: (OrderedCollection new: 2).
	result at: 57 put: (OrderedCollection new: 2).
	result at: 58 put: (OrderedCollection new: 2).
	result at: 59 put: (OrderedCollection new: 2).
	result at: 60 put: (OrderedCollection new: 2).
	result at: 61 put: (OrderedCollection new: 2).
	result at: 62 put: (OrderedCollection new: 2).
	result at: 63 put: (OrderedCollection new: 2).
	result at: 64 put: (OrderedCollection new: 2).
	result at: 65 put: (OrderedCollection new: 2).
	result at: 66 put: (OrderedCollection new: 2).
	result at: 67 put: (OrderedCollection new: 2).
	result at: 68 put: (OrderedCollection new: 2).
	result at: 69 put: (OrderedCollection new: 2).
	result at: 70 put: (OrderedCollection new: 2).
	result at: 71 put: (OrderedCollection new: 2).
	result at: 72 put: (OrderedCollection new: 2).
	result at: 73 put: (OrderedCollection new: 2).
	result at: 74 put: (OrderedCollection new: 2).
	result at: 75 put: (OrderedCollection new: 2).
	result at: 76 put: (OrderedCollection new: 2).
	result at: 77 put: (OrderedCollection new: 2).
	result at: 78 put: (OrderedCollection new: 2).
	result at: 79 put: (OrderedCollection new: 2).
	result at: 80 put: (OrderedCollection new: 2).
	result at: 81 put: (OrderedCollection new: 2).
	result at: 82 put: (OrderedCollection new: 2).
	result at: 83 put: (OrderedCollection new: 2).
	self add: (nodes at: 1) to: (result at: 1).
	self addAll: ((nodes at: 2) at: 1) to: (result at: 2).
	self addAll: ((nodes at: 2) at: 2) to: (result at: 3).
	self addAll: ((nodes at: 2) at: 3) to: (result at: 4).
	self addAll: ((nodes at: 2) at: 4) to: (result at: 5).
	self addAll: ((nodes at: 2) at: 5) to: (result at: 6).
	self addAll: ((nodes at: 2) at: 6) to: (result at: 7).
	self addAll: ((nodes at: 2) at: 7) to: (result at: 8).
	self addAll: ((nodes at: 2) at: 8) to: (result at: 9).
	self addAll: ((nodes at: 2) at: 9) to: (result at: 10).
	self addAll: ((nodes at: 2) at: 10) to: (result at: 11).
	self addAll: ((nodes at: 2) at: 11) to: (result at: 12).
	self addAll: ((nodes at: 2) at: 12) to: (result at: 13).
	self addAll: ((nodes at: 2) at: 13) to: (result at: 14).
	self addAll: ((nodes at: 2) at: 14) to: (result at: 15).
	self addAll: ((nodes at: 2) at: 15) to: (result at: 16).
	self addAll: ((nodes at: 2) at: 16) to: (result at: 17).
	self addAll: ((nodes at: 2) at: 17) to: (result at: 18).
	self addAll: ((nodes at: 2) at: 18) to: (result at: 19).
	self addAll: ((nodes at: 2) at: 19) to: (result at: 20).
	self addAll: ((nodes at: 2) at: 20) to: (result at: 21).
	self addAll: ((nodes at: 2) at: 21) to: (result at: 22).
	self addAll: ((nodes at: 2) at: 22) to: (result at: 23).
	self addAll: ((nodes at: 2) at: 23) to: (result at: 24).
	self addAll: ((nodes at: 2) at: 24) to: (result at: 25).
	self addAll: ((nodes at: 2) at: 25) to: (result at: 26).
	self addAll: ((nodes at: 2) at: 26) to: (result at: 27).
	self addAll: ((nodes at: 2) at: 27) to: (result at: 28).
	self addAll: ((nodes at: 2) at: 28) to: (result at: 29).
	self addAll: ((nodes at: 2) at: 29) to: (result at: 30).
	self addAll: ((nodes at: 2) at: 30) to: (result at: 31).
	self addAll: ((nodes at: 2) at: 31) to: (result at: 32).
	self addAll: ((nodes at: 2) at: 32) to: (result at: 33).
	self addAll: ((nodes at: 2) at: 33) to: (result at: 34).
	self addAll: ((nodes at: 2) at: 34) to: (result at: 35).
	self addAll: ((nodes at: 2) at: 35) to: (result at: 36).
	self addAll: ((nodes at: 2) at: 36) to: (result at: 37).
	self addAll: ((nodes at: 2) at: 37) to: (result at: 38).
	self addAll: ((nodes at: 2) at: 38) to: (result at: 39).
	self addAll: ((nodes at: 2) at: 39) to: (result at: 40).
	self addAll: ((nodes at: 2) at: 40) to: (result at: 41).
	self addAll: ((nodes at: 2) at: 41) to: (result at: 42).
	self addAll: ((nodes at: 2) at: 42) to: (result at: 43).
	self addAll: ((nodes at: 2) at: 43) to: (result at: 44).
	self addAll: ((nodes at: 2) at: 44) to: (result at: 45).
	self addAll: ((nodes at: 2) at: 45) to: (result at: 46).
	self addAll: ((nodes at: 2) at: 46) to: (result at: 47).
	self addAll: ((nodes at: 2) at: 47) to: (result at: 48).
	self addAll: ((nodes at: 2) at: 48) to: (result at: 49).
	self addAll: ((nodes at: 2) at: 49) to: (result at: 50).
	self addAll: ((nodes at: 2) at: 50) to: (result at: 51).
	self addAll: ((nodes at: 2) at: 51) to: (result at: 52).
	self addAll: ((nodes at: 2) at: 52) to: (result at: 53).
	self addAll: ((nodes at: 2) at: 53) to: (result at: 54).
	self addAll: ((nodes at: 2) at: 54) to: (result at: 55).
	self addAll: ((nodes at: 2) at: 55) to: (result at: 56).
	self addAll: ((nodes at: 2) at: 56) to: (result at: 57).
	self addAll: ((nodes at: 2) at: 57) to: (result at: 58).
	self addAll: ((nodes at: 2) at: 58) to: (result at: 1).
	self addAll: ((nodes at: 2) at: 59) to: (result at: 59).
	self addAll: ((nodes at: 2) at: 60) to: (result at: 60).
	self addAll: ((nodes at: 2) at: 61) to: (result at: 61).
	self addAll: ((nodes at: 2) at: 62) to: (result at: 62).
	self addAll: ((nodes at: 2) at: 63) to: (result at: 63).
	self addAll: ((nodes at: 2) at: 64) to: (result at: 64).
	self addAll: ((nodes at: 2) at: 65) to: (result at: 65).
	self addAll: ((nodes at: 2) at: 66) to: (result at: 66).
	self addAll: ((nodes at: 2) at: 67) to: (result at: 67).
	self addAll: ((nodes at: 2) at: 68) to: (result at: 68).
	self addAll: ((nodes at: 2) at: 69) to: (result at: 69).
	self addAll: ((nodes at: 2) at: 70) to: (result at: 70).
	self addAll: ((nodes at: 2) at: 71) to: (result at: 71).
	self addAll: ((nodes at: 2) at: 72) to: (result at: 72).
	self addAll: ((nodes at: 2) at: 73) to: (result at: 73).
	self addAll: ((nodes at: 2) at: 74) to: (result at: 74).
	self addAll: ((nodes at: 2) at: 75) to: (result at: 75).
	self addAll: ((nodes at: 2) at: 76) to: (result at: 76).
	self addAll: ((nodes at: 2) at: 77) to: (result at: 77).
	self addAll: ((nodes at: 2) at: 78) to: (result at: 78).
	self addAll: ((nodes at: 2) at: 79) to: (result at: 79).
	self addAll: ((nodes at: 2) at: 80) to: (result at: 80).
	self addAll: ((nodes at: 2) at: 81) to: (result at: 81).
	self addAll: ((nodes at: 2) at: 82) to: (result at: 82).
	self addAll: ((nodes at: 2) at: 83) to: (result at: 83).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionForconstSpec1: nodes [
	| result |
	result := Array new: 83.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 7 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 9 put: (OrderedCollection new: 2).
	result at: 10 put: (OrderedCollection new: 2).
	result at: 11 put: (OrderedCollection new: 2).
	result at: 12 put: (OrderedCollection new: 2).
	result at: 13 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 15 put: (OrderedCollection new: 2).
	result at: 16 put: (OrderedCollection new: 2).
	result at: 17 put: (OrderedCollection new: 2).
	result at: 18 put: (OrderedCollection new: 2).
	result at: 19 put: (OrderedCollection new: 2).
	result at: 20 put: (OrderedCollection new: 2).
	result at: 21 put: (OrderedCollection new: 2).
	result at: 22 put: (OrderedCollection new: 2).
	result at: 23 put: (OrderedCollection new: 2).
	result at: 24 put: (OrderedCollection new: 2).
	result at: 25 put: (OrderedCollection new: 2).
	result at: 26 put: (OrderedCollection new: 2).
	result at: 27 put: (OrderedCollection new: 2).
	result at: 28 put: (OrderedCollection new: 2).
	result at: 29 put: (OrderedCollection new: 2).
	result at: 30 put: (OrderedCollection new: 2).
	result at: 31 put: (OrderedCollection new: 2).
	result at: 32 put: (OrderedCollection new: 2).
	result at: 33 put: (OrderedCollection new: 2).
	result at: 34 put: (OrderedCollection new: 2).
	result at: 35 put: (OrderedCollection new: 2).
	result at: 36 put: (OrderedCollection new: 2).
	result at: 37 put: (OrderedCollection new: 2).
	result at: 38 put: (OrderedCollection new: 2).
	result at: 39 put: (OrderedCollection new: 2).
	result at: 40 put: (OrderedCollection new: 2).
	result at: 41 put: (OrderedCollection new: 2).
	result at: 42 put: (OrderedCollection new: 2).
	result at: 43 put: (OrderedCollection new: 2).
	result at: 44 put: (OrderedCollection new: 2).
	result at: 45 put: (OrderedCollection new: 2).
	result at: 46 put: (OrderedCollection new: 2).
	result at: 47 put: (OrderedCollection new: 2).
	result at: 48 put: (OrderedCollection new: 2).
	result at: 49 put: (OrderedCollection new: 2).
	result at: 50 put: (OrderedCollection new: 2).
	result at: 51 put: (OrderedCollection new: 2).
	result at: 52 put: (OrderedCollection new: 2).
	result at: 53 put: (OrderedCollection new: 2).
	result at: 54 put: (OrderedCollection new: 2).
	result at: 55 put: (OrderedCollection new: 2).
	result at: 56 put: (OrderedCollection new: 2).
	result at: 57 put: (OrderedCollection new: 2).
	result at: 58 put: (OrderedCollection new: 2).
	result at: 59 put: (OrderedCollection new: 2).
	result at: 60 put: (OrderedCollection new: 2).
	result at: 61 put: (OrderedCollection new: 2).
	result at: 62 put: (OrderedCollection new: 2).
	result at: 63 put: (OrderedCollection new: 2).
	result at: 64 put: (OrderedCollection new: 2).
	result at: 65 put: (OrderedCollection new: 2).
	result at: 66 put: (OrderedCollection new: 2).
	result at: 67 put: (OrderedCollection new: 2).
	result at: 68 put: (OrderedCollection new: 2).
	result at: 69 put: (OrderedCollection new: 2).
	result at: 70 put: (OrderedCollection new: 2).
	result at: 71 put: (OrderedCollection new: 2).
	result at: 72 put: (OrderedCollection new: 2).
	result at: 73 put: (OrderedCollection new: 2).
	result at: 74 put: (OrderedCollection new: 2).
	result at: 75 put: (OrderedCollection new: 2).
	result at: 76 put: (OrderedCollection new: 2).
	result at: 77 put: (OrderedCollection new: 2).
	result at: 78 put: (OrderedCollection new: 2).
	result at: 79 put: (OrderedCollection new: 2).
	result at: 80 put: (OrderedCollection new: 2).
	result at: 81 put: (OrderedCollection new: 2).
	result at: 82 put: (OrderedCollection new: 2).
	result at: 83 put: (OrderedCollection new: 2).
	self addAll: ((nodes at: 1) at: 1) to: (result at: 1).
	self addAll: ((nodes at: 1) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFordeclaration1: nodes [
	| result |
	result := GoDeclarationNode new.
	result addTokens: ((nodes at: 1) at: 1) to: result cONSTTokens.
	result addTokens: ((nodes at: 1) at: 2) to: result iDENTIFIERTokens.
	result addTokens: ((nodes at: 1) at: 3) to: result cOMMATokens.
	result addTokens: ((nodes at: 1) at: 4) to: result aSSIGNTokens.
	result addTokens: ((nodes at: 1) at: 5) to: result nIL_LITTokens.
	result addTokens: ((nodes at: 1) at: 6) to: result dECIMAL_LITTokens.
	result addTokens: ((nodes at: 1) at: 7) to: result bINARY_LITTokens.
	result addTokens: ((nodes at: 1) at: 8) to: result oCTAL_LITTokens.
	result addTokens: ((nodes at: 1) at: 9) to: result hEX_LITTokens.
	result addTokens: ((nodes at: 1) at: 10) to: result iMAGINARY_LITTokens.
	result addTokens: ((nodes at: 1) at: 11) to: result rUNE_LITTokens.
	result addTokens: ((nodes at: 1) at: 12) to: result rAW_STRING_LITTokens.
	result
		addTokens: ((nodes at: 1) at: 13)
		to: result iNTERPRETED_STRING_LITTokens.
	result addTokens: ((nodes at: 1) at: 14) to: result fLOAT_LITTokens.
	result addTokens: ((nodes at: 1) at: 15) to: result sTRUCTTokens.
	result addTokens: ((nodes at: 1) at: 16) to: result l_CURLYTokens.
	result addTokens: ((nodes at: 1) at: 17) to: result l_PARENTokens.
	result addTokens: ((nodes at: 1) at: 18) to: result r_PARENTokens.
	result addObjects: ((nodes at: 1) at: 19) to: result tags.
	result addTokens: ((nodes at: 1) at: 20) to: result sEMITokens.
	result addTokens: ((nodes at: 1) at: 21) to: result nEWLINETokens.
	result addTokens: ((nodes at: 1) at: 22) to: result l_BRACKETTokens.
	result addTokens: ((nodes at: 1) at: 23) to: result r_BRACKETTokens.
	result addTokens: ((nodes at: 1) at: 24) to: result sTARTokens.
	result addTokens: ((nodes at: 1) at: 25) to: result dOTTokens.
	result addTokens: ((nodes at: 1) at: 26) to: result r_CURLYTokens.
	result addTokens: ((nodes at: 1) at: 27) to: result fUNCTokens.
	result addTokens: ((nodes at: 1) at: 28) to: result iNTERFACETokens.
	result addTokens: ((nodes at: 1) at: 29) to: result mAPTokens.
	result addTokens: ((nodes at: 1) at: 30) to: result cHANTokens.
	result addTokens: ((nodes at: 1) at: 31) to: result rECEIVETokens.
	result addNodes: ((nodes at: 1) at: 32) to: result paramses.
	result addObjects: ((nodes at: 1) at: 33) to: result results.
	result addTokens: ((nodes at: 1) at: 34) to: result eLLIPSISTokens.
	result addTokens: ((nodes at: 1) at: 35) to: result pLUSTokens.
	result addTokens: ((nodes at: 1) at: 36) to: result mINUSTokens.
	result addTokens: ((nodes at: 1) at: 37) to: result eXCLAMATIONTokens.
	result addTokens: ((nodes at: 1) at: 38) to: result cARETTokens.
	result addTokens: ((nodes at: 1) at: 39) to: result aMPERSANDTokens.
	result addTokens: ((nodes at: 1) at: 40) to: result unaryOps.
	result addTokens: ((nodes at: 1) at: 41) to: result dIVTokens.
	result addTokens: ((nodes at: 1) at: 42) to: result mODTokens.
	result addTokens: ((nodes at: 1) at: 43) to: result lSHIFTTokens.
	result addTokens: ((nodes at: 1) at: 44) to: result rSHIFTTokens.
	result addTokens: ((nodes at: 1) at: 45) to: result mulOps.
	result addTokens: ((nodes at: 1) at: 46) to: result oRTokens.
	result addTokens: ((nodes at: 1) at: 47) to: result addOps.
	result addTokens: ((nodes at: 1) at: 48) to: result eQUALSTokens.
	result addTokens: ((nodes at: 1) at: 49) to: result nOT_EQUALSTokens.
	result addTokens: ((nodes at: 1) at: 50) to: result lESSTokens.
	result addTokens: ((nodes at: 1) at: 51) to: result lESS_OR_EQUALSTokens.
	result addTokens: ((nodes at: 1) at: 52) to: result gREATERTokens.
	result addTokens: ((nodes at: 1) at: 53) to: result relOps.
	result addTokens: ((nodes at: 1) at: 54) to: result lOGICAL_ANDTokens.
	result addTokens: ((nodes at: 1) at: 55) to: result lOGICAL_ORTokens.
	result addTokens: ((nodes at: 1) at: 56) to: result cOLONTokens.
	result addTokens: ((nodes at: 1) at: 57) to: result uNDERLYINGTokens.
	result addObjects: ((nodes at: 1) at: 58) to: result parameters.
	result addTokens: ((nodes at: 1) at: 59) to: result tYPETokens.
	result addTokens: ((nodes at: 1) at: 60) to: result vARTokens.
	result addObjects: ((nodes at: 1) at: 61) to: result channels.
	result addTokens: ((nodes at: 1) at: 62) to: result pLUS_PLUSTokens.
	result addTokens: ((nodes at: 1) at: 63) to: result mINUS_MINUSTokens.
	result addTokens: ((nodes at: 1) at: 64) to: result dECLARE_ASSIGNTokens.
	result addTokens: ((nodes at: 1) at: 65) to: result gOTokens.
	result addTokens: ((nodes at: 1) at: 66) to: result rETURNTokens.
	result addTokens: ((nodes at: 1) at: 67) to: result bREAKTokens.
	result addTokens: ((nodes at: 1) at: 68) to: result cONTINUETokens.
	result addTokens: ((nodes at: 1) at: 69) to: result gOTOTokens.
	result addTokens: ((nodes at: 1) at: 70) to: result fALLTHROUGHTokens.
	result addTokens: ((nodes at: 1) at: 71) to: result iFTokens.
	result addTokens: ((nodes at: 1) at: 72) to: result eLSETokens.
	result addTokens: ((nodes at: 1) at: 73) to: result sELECTTokens.
	result addTokens: ((nodes at: 1) at: 74) to: result fORTokens.
	result addTokens: ((nodes at: 1) at: 75) to: result dEFERTokens.
	result addTokens: ((nodes at: 1) at: 76) to: result bIT_CLEARTokens.
	result addTokens: ((nodes at: 1) at: 77) to: result sWITCHTokens.
	result addObjects: ((nodes at: 1) at: 78) to: result postStmts.
	result addObjects: ((nodes at: 1) at: 79) to: result initStmts.
	result addTokens: ((nodes at: 1) at: 80) to: result rANGETokens.
	result addTokens: ((nodes at: 1) at: 81) to: result cASETokens.
	result addTokens: ((nodes at: 1) at: 82) to: result dEFAULTTokens.
	result addObjects: ((nodes at: 1) at: 83) to: result recvExprs.
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFordeclaration2: nodes [
	| result |
	result := GoDeclarationNode new.
	result addTokens: ((nodes at: 1) at: 1) to: result tYPETokens.
	result addTokens: ((nodes at: 1) at: 2) to: result iDENTIFIERTokens.
	result addTokens: ((nodes at: 1) at: 3) to: result aSSIGNTokens.
	result addTokens: ((nodes at: 1) at: 4) to: result dOTTokens.
	result addTokens: ((nodes at: 1) at: 5) to: result l_BRACKETTokens.
	result addTokens: ((nodes at: 1) at: 6) to: result l_PARENTokens.
	result addTokens: ((nodes at: 1) at: 7) to: result r_PARENTokens.
	result addTokens: ((nodes at: 1) at: 8) to: result cOMMATokens.
	result addTokens: ((nodes at: 1) at: 9) to: result nIL_LITTokens.
	result addTokens: ((nodes at: 1) at: 10) to: result r_BRACKETTokens.
	result addTokens: ((nodes at: 1) at: 11) to: result sTRUCTTokens.
	result addTokens: ((nodes at: 1) at: 12) to: result l_CURLYTokens.
	result addTokens: ((nodes at: 1) at: 13) to: result r_CURLYTokens.
	result addTokens: ((nodes at: 1) at: 14) to: result sTARTokens.
	result addTokens: ((nodes at: 1) at: 15) to: result fUNCTokens.
	result addTokens: ((nodes at: 1) at: 16) to: result iNTERFACETokens.
	result addTokens: ((nodes at: 1) at: 17) to: result mAPTokens.
	result addTokens: ((nodes at: 1) at: 18) to: result cHANTokens.
	result addTokens: ((nodes at: 1) at: 19) to: result rECEIVETokens.
	result addTokens: ((nodes at: 1) at: 20) to: result pLUSTokens.
	result addTokens: ((nodes at: 1) at: 21) to: result mINUSTokens.
	result addTokens: ((nodes at: 1) at: 22) to: result eXCLAMATIONTokens.
	result addTokens: ((nodes at: 1) at: 23) to: result cARETTokens.
	result addTokens: ((nodes at: 1) at: 24) to: result aMPERSANDTokens.
	result addTokens: ((nodes at: 1) at: 25) to: result unaryOps.
	result addTokens: ((nodes at: 1) at: 26) to: result dIVTokens.
	result addTokens: ((nodes at: 1) at: 27) to: result mODTokens.
	result addTokens: ((nodes at: 1) at: 28) to: result lSHIFTTokens.
	result addTokens: ((nodes at: 1) at: 29) to: result rSHIFTTokens.
	result addTokens: ((nodes at: 1) at: 30) to: result mulOps.
	result addTokens: ((nodes at: 1) at: 31) to: result oRTokens.
	result addTokens: ((nodes at: 1) at: 32) to: result addOps.
	result addTokens: ((nodes at: 1) at: 33) to: result eQUALSTokens.
	result addTokens: ((nodes at: 1) at: 34) to: result nOT_EQUALSTokens.
	result addTokens: ((nodes at: 1) at: 35) to: result lESSTokens.
	result addTokens: ((nodes at: 1) at: 36) to: result lESS_OR_EQUALSTokens.
	result addTokens: ((nodes at: 1) at: 37) to: result gREATERTokens.
	result addTokens: ((nodes at: 1) at: 38) to: result relOps.
	result addTokens: ((nodes at: 1) at: 39) to: result lOGICAL_ANDTokens.
	result addTokens: ((nodes at: 1) at: 40) to: result lOGICAL_ORTokens.
	result addNodes: ((nodes at: 1) at: 41) to: result paramses.
	result addObjects: ((nodes at: 1) at: 42) to: result results.
	result addTokens: ((nodes at: 1) at: 43) to: result sEMITokens.
	result addTokens: ((nodes at: 1) at: 44) to: result nEWLINETokens.
	result addTokens: ((nodes at: 1) at: 45) to: result uNDERLYINGTokens.
	result addTokens: ((nodes at: 1) at: 46) to: result cOLONTokens.
	result addTokens: ((nodes at: 1) at: 47) to: result eLLIPSISTokens.
	result addObjects: ((nodes at: 1) at: 48) to: result tags.
	result addObjects: ((nodes at: 1) at: 49) to: result parameters.
	result addTokens: ((nodes at: 1) at: 50) to: result dECIMAL_LITTokens.
	result addTokens: ((nodes at: 1) at: 51) to: result bINARY_LITTokens.
	result addTokens: ((nodes at: 1) at: 52) to: result oCTAL_LITTokens.
	result addTokens: ((nodes at: 1) at: 53) to: result hEX_LITTokens.
	result addTokens: ((nodes at: 1) at: 54) to: result iMAGINARY_LITTokens.
	result addTokens: ((nodes at: 1) at: 55) to: result rUNE_LITTokens.
	result addTokens: ((nodes at: 1) at: 56) to: result rAW_STRING_LITTokens.
	result
		addTokens: ((nodes at: 1) at: 57)
		to: result iNTERPRETED_STRING_LITTokens.
	result addTokens: ((nodes at: 1) at: 58) to: result fLOAT_LITTokens.
	result addTokens: ((nodes at: 1) at: 59) to: result cONSTTokens.
	result addTokens: ((nodes at: 1) at: 60) to: result vARTokens.
	result addObjects: ((nodes at: 1) at: 61) to: result channels.
	result addTokens: ((nodes at: 1) at: 62) to: result pLUS_PLUSTokens.
	result addTokens: ((nodes at: 1) at: 63) to: result mINUS_MINUSTokens.
	result addTokens: ((nodes at: 1) at: 64) to: result dECLARE_ASSIGNTokens.
	result addTokens: ((nodes at: 1) at: 65) to: result gOTokens.
	result addTokens: ((nodes at: 1) at: 66) to: result rETURNTokens.
	result addTokens: ((nodes at: 1) at: 67) to: result bREAKTokens.
	result addTokens: ((nodes at: 1) at: 68) to: result cONTINUETokens.
	result addTokens: ((nodes at: 1) at: 69) to: result gOTOTokens.
	result addTokens: ((nodes at: 1) at: 70) to: result fALLTHROUGHTokens.
	result addTokens: ((nodes at: 1) at: 71) to: result iFTokens.
	result addTokens: ((nodes at: 1) at: 72) to: result eLSETokens.
	result addTokens: ((nodes at: 1) at: 73) to: result sELECTTokens.
	result addTokens: ((nodes at: 1) at: 74) to: result fORTokens.
	result addTokens: ((nodes at: 1) at: 75) to: result dEFERTokens.
	result addTokens: ((nodes at: 1) at: 76) to: result bIT_CLEARTokens.
	result addTokens: ((nodes at: 1) at: 77) to: result sWITCHTokens.
	result addObjects: ((nodes at: 1) at: 78) to: result postStmts.
	result addObjects: ((nodes at: 1) at: 79) to: result initStmts.
	result addTokens: ((nodes at: 1) at: 80) to: result rANGETokens.
	result addTokens: ((nodes at: 1) at: 81) to: result cASETokens.
	result addTokens: ((nodes at: 1) at: 82) to: result dEFAULTTokens.
	result addObjects: ((nodes at: 1) at: 83) to: result recvExprs.
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFordeclaration3: nodes [
	| result |
	result := GoDeclarationNode new.
	result addTokens: ((nodes at: 1) at: 1) to: result vARTokens.
	result addTokens: ((nodes at: 1) at: 2) to: result iDENTIFIERTokens.
	result addTokens: ((nodes at: 1) at: 3) to: result cOMMATokens.
	result addTokens: ((nodes at: 1) at: 4) to: result dOTTokens.
	result addTokens: ((nodes at: 1) at: 5) to: result l_BRACKETTokens.
	result addTokens: ((nodes at: 1) at: 6) to: result l_PARENTokens.
	result addTokens: ((nodes at: 1) at: 7) to: result r_PARENTokens.
	result addTokens: ((nodes at: 1) at: 8) to: result nIL_LITTokens.
	result addTokens: ((nodes at: 1) at: 9) to: result r_BRACKETTokens.
	result addTokens: ((nodes at: 1) at: 10) to: result sTRUCTTokens.
	result addTokens: ((nodes at: 1) at: 11) to: result l_CURLYTokens.
	result addTokens: ((nodes at: 1) at: 12) to: result r_CURLYTokens.
	result addTokens: ((nodes at: 1) at: 13) to: result sTARTokens.
	result addTokens: ((nodes at: 1) at: 14) to: result fUNCTokens.
	result addTokens: ((nodes at: 1) at: 15) to: result iNTERFACETokens.
	result addTokens: ((nodes at: 1) at: 16) to: result mAPTokens.
	result addTokens: ((nodes at: 1) at: 17) to: result cHANTokens.
	result addTokens: ((nodes at: 1) at: 18) to: result rECEIVETokens.
	result addTokens: ((nodes at: 1) at: 19) to: result pLUSTokens.
	result addTokens: ((nodes at: 1) at: 20) to: result mINUSTokens.
	result addTokens: ((nodes at: 1) at: 21) to: result eXCLAMATIONTokens.
	result addTokens: ((nodes at: 1) at: 22) to: result cARETTokens.
	result addTokens: ((nodes at: 1) at: 23) to: result aMPERSANDTokens.
	result addTokens: ((nodes at: 1) at: 24) to: result unaryOps.
	result addTokens: ((nodes at: 1) at: 25) to: result dIVTokens.
	result addTokens: ((nodes at: 1) at: 26) to: result mODTokens.
	result addTokens: ((nodes at: 1) at: 27) to: result lSHIFTTokens.
	result addTokens: ((nodes at: 1) at: 28) to: result rSHIFTTokens.
	result addTokens: ((nodes at: 1) at: 29) to: result mulOps.
	result addTokens: ((nodes at: 1) at: 30) to: result oRTokens.
	result addTokens: ((nodes at: 1) at: 31) to: result addOps.
	result addTokens: ((nodes at: 1) at: 32) to: result eQUALSTokens.
	result addTokens: ((nodes at: 1) at: 33) to: result nOT_EQUALSTokens.
	result addTokens: ((nodes at: 1) at: 34) to: result lESSTokens.
	result addTokens: ((nodes at: 1) at: 35) to: result lESS_OR_EQUALSTokens.
	result addTokens: ((nodes at: 1) at: 36) to: result gREATERTokens.
	result addTokens: ((nodes at: 1) at: 37) to: result relOps.
	result addTokens: ((nodes at: 1) at: 38) to: result lOGICAL_ANDTokens.
	result addTokens: ((nodes at: 1) at: 39) to: result lOGICAL_ORTokens.
	result addNodes: ((nodes at: 1) at: 40) to: result paramses.
	result addObjects: ((nodes at: 1) at: 41) to: result results.
	result addTokens: ((nodes at: 1) at: 42) to: result sEMITokens.
	result addTokens: ((nodes at: 1) at: 43) to: result nEWLINETokens.
	result addTokens: ((nodes at: 1) at: 44) to: result uNDERLYINGTokens.
	result addTokens: ((nodes at: 1) at: 45) to: result cOLONTokens.
	result addTokens: ((nodes at: 1) at: 46) to: result eLLIPSISTokens.
	result addObjects: ((nodes at: 1) at: 47) to: result tags.
	result addObjects: ((nodes at: 1) at: 48) to: result parameters.
	result addTokens: ((nodes at: 1) at: 49) to: result dECIMAL_LITTokens.
	result addTokens: ((nodes at: 1) at: 50) to: result bINARY_LITTokens.
	result addTokens: ((nodes at: 1) at: 51) to: result oCTAL_LITTokens.
	result addTokens: ((nodes at: 1) at: 52) to: result hEX_LITTokens.
	result addTokens: ((nodes at: 1) at: 53) to: result iMAGINARY_LITTokens.
	result addTokens: ((nodes at: 1) at: 54) to: result rUNE_LITTokens.
	result addTokens: ((nodes at: 1) at: 55) to: result rAW_STRING_LITTokens.
	result
		addTokens: ((nodes at: 1) at: 56)
		to: result iNTERPRETED_STRING_LITTokens.
	result addTokens: ((nodes at: 1) at: 57) to: result fLOAT_LITTokens.
	result addTokens: ((nodes at: 1) at: 58) to: result cONSTTokens.
	result addTokens: ((nodes at: 1) at: 59) to: result tYPETokens.
	result addObjects: ((nodes at: 1) at: 60) to: result channels.
	result addTokens: ((nodes at: 1) at: 61) to: result pLUS_PLUSTokens.
	result addTokens: ((nodes at: 1) at: 62) to: result mINUS_MINUSTokens.
	result addTokens: ((nodes at: 1) at: 63) to: result dECLARE_ASSIGNTokens.
	result addTokens: ((nodes at: 1) at: 64) to: result gOTokens.
	result addTokens: ((nodes at: 1) at: 65) to: result rETURNTokens.
	result addTokens: ((nodes at: 1) at: 66) to: result bREAKTokens.
	result addTokens: ((nodes at: 1) at: 67) to: result cONTINUETokens.
	result addTokens: ((nodes at: 1) at: 68) to: result gOTOTokens.
	result addTokens: ((nodes at: 1) at: 69) to: result fALLTHROUGHTokens.
	result addTokens: ((nodes at: 1) at: 70) to: result iFTokens.
	result addTokens: ((nodes at: 1) at: 71) to: result eLSETokens.
	result addTokens: ((nodes at: 1) at: 72) to: result sELECTTokens.
	result addTokens: ((nodes at: 1) at: 73) to: result fORTokens.
	result addTokens: ((nodes at: 1) at: 74) to: result dEFERTokens.
	result addTokens: ((nodes at: 1) at: 75) to: result aSSIGNTokens.
	result addTokens: ((nodes at: 1) at: 76) to: result bIT_CLEARTokens.
	result addTokens: ((nodes at: 1) at: 77) to: result sWITCHTokens.
	result addObjects: ((nodes at: 1) at: 78) to: result postStmts.
	result addObjects: ((nodes at: 1) at: 79) to: result initStmts.
	result addTokens: ((nodes at: 1) at: 80) to: result rANGETokens.
	result addTokens: ((nodes at: 1) at: 81) to: result cASETokens.
	result addTokens: ((nodes at: 1) at: 82) to: result dEFAULTTokens.
	result addObjects: ((nodes at: 1) at: 83) to: result recvExprs.
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionForeos1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionForeos2: nodes [
	| result |
	result := Array new: 2.
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionForeos3: nodes [
	| result |
	result := Array new: 2.
	result at: 2 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionForfunctionDecl1: nodes [
	| result |
	result := GoFunctionDeclNode new.
	result addToken: (nodes at: 1) to: result fUNCTokens.
	result name: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionForfunctionDecl2: nodes [
	| result |
	result := GoFunctionDeclNode new.
	result addToken: (nodes at: 1) to: result fUNCTokens.
	result name: (nodes at: 2).
	result addTokens: ((nodes at: 4) at: 1) to: result l_CURLYTokens.
	result addTokens: ((nodes at: 4) at: 2) to: result r_CURLYTokens.
	result addTokens: ((nodes at: 4) at: 3) to: result cONSTTokens.
	result addTokens: ((nodes at: 4) at: 4) to: result iDENTIFIERTokens.
	result addTokens: ((nodes at: 4) at: 5) to: result cOMMATokens.
	result addTokens: ((nodes at: 4) at: 6) to: result aSSIGNTokens.
	result addTokens: ((nodes at: 4) at: 7) to: result l_BRACKETTokens.
	result addTokens: ((nodes at: 4) at: 8) to: result nIL_LITTokens.
	result addTokens: ((nodes at: 4) at: 9) to: result r_BRACKETTokens.
	result addTokens: ((nodes at: 4) at: 10) to: result l_PARENTokens.
	result addTokens: ((nodes at: 4) at: 11) to: result pLUSTokens.
	result addTokens: ((nodes at: 4) at: 12) to: result mINUSTokens.
	result addTokens: ((nodes at: 4) at: 13) to: result eXCLAMATIONTokens.
	result addTokens: ((nodes at: 4) at: 14) to: result cARETTokens.
	result addTokens: ((nodes at: 4) at: 15) to: result sTARTokens.
	result addTokens: ((nodes at: 4) at: 16) to: result aMPERSANDTokens.
	result addTokens: ((nodes at: 4) at: 17) to: result unaryOps.
	result addTokens: ((nodes at: 4) at: 18) to: result dIVTokens.
	result addTokens: ((nodes at: 4) at: 19) to: result mODTokens.
	result addTokens: ((nodes at: 4) at: 20) to: result lSHIFTTokens.
	result addTokens: ((nodes at: 4) at: 21) to: result rSHIFTTokens.
	result addTokens: ((nodes at: 4) at: 22) to: result mulOps.
	result addTokens: ((nodes at: 4) at: 23) to: result oRTokens.
	result addTokens: ((nodes at: 4) at: 24) to: result addOps.
	result addTokens: ((nodes at: 4) at: 25) to: result eQUALSTokens.
	result addTokens: ((nodes at: 4) at: 26) to: result nOT_EQUALSTokens.
	result addTokens: ((nodes at: 4) at: 27) to: result lESSTokens.
	result addTokens: ((nodes at: 4) at: 28) to: result lESS_OR_EQUALSTokens.
	result addTokens: ((nodes at: 4) at: 29) to: result gREATERTokens.
	result addTokens: ((nodes at: 4) at: 30) to: result relOps.
	result addTokens: ((nodes at: 4) at: 31) to: result lOGICAL_ANDTokens.
	result addTokens: ((nodes at: 4) at: 32) to: result lOGICAL_ORTokens.
	result addTokens: ((nodes at: 4) at: 33) to: result r_PARENTokens.
	result addTokens: ((nodes at: 4) at: 34) to: result dOTTokens.
	result addTokens: ((nodes at: 4) at: 35) to: result cOLONTokens.
	result addTokens: ((nodes at: 4) at: 36) to: result eLLIPSISTokens.
	result addTokens: ((nodes at: 4) at: 37) to: result sTRUCTTokens.
	result addTokens: ((nodes at: 4) at: 38) to: result fUNCTokens.
	result addNodes: ((nodes at: 4) at: 39) to: result paramses.
	result addObjects: ((nodes at: 4) at: 40) to: result results.
	result addTokens: ((nodes at: 4) at: 41) to: result iNTERFACETokens.
	result addTokens: ((nodes at: 4) at: 42) to: result mAPTokens.
	result addTokens: ((nodes at: 4) at: 43) to: result cHANTokens.
	result addTokens: ((nodes at: 4) at: 44) to: result rECEIVETokens.
	result addTokens: ((nodes at: 4) at: 45) to: result sEMITokens.
	result addTokens: ((nodes at: 4) at: 46) to: result nEWLINETokens.
	result addTokens: ((nodes at: 4) at: 47) to: result tYPETokens.
	result addTokens: ((nodes at: 4) at: 48) to: result uNDERLYINGTokens.
	result addTokens: ((nodes at: 4) at: 49) to: result vARTokens.
	result addObjects: ((nodes at: 4) at: 50) to: result channels.
	result addTokens: ((nodes at: 4) at: 51) to: result pLUS_PLUSTokens.
	result addTokens: ((nodes at: 4) at: 52) to: result mINUS_MINUSTokens.
	result addTokens: ((nodes at: 4) at: 53) to: result dECLARE_ASSIGNTokens.
	result addTokens: ((nodes at: 4) at: 54) to: result gOTokens.
	result addTokens: ((nodes at: 4) at: 55) to: result rETURNTokens.
	result addTokens: ((nodes at: 4) at: 56) to: result bREAKTokens.
	result addTokens: ((nodes at: 4) at: 57) to: result cONTINUETokens.
	result addTokens: ((nodes at: 4) at: 58) to: result gOTOTokens.
	result addTokens: ((nodes at: 4) at: 59) to: result fALLTHROUGHTokens.
	result addTokens: ((nodes at: 4) at: 60) to: result iFTokens.
	result addTokens: ((nodes at: 4) at: 61) to: result eLSETokens.
	result addTokens: ((nodes at: 4) at: 62) to: result sELECTTokens.
	result addTokens: ((nodes at: 4) at: 63) to: result fORTokens.
	result addTokens: ((nodes at: 4) at: 64) to: result dEFERTokens.
	result addTokens: ((nodes at: 4) at: 65) to: result bIT_CLEARTokens.
	result addTokens: ((nodes at: 4) at: 66) to: result sWITCHTokens.
	result addObjects: ((nodes at: 4) at: 67) to: result postStmts.
	result addObjects: ((nodes at: 4) at: 68) to: result initStmts.
	result addTokens: ((nodes at: 4) at: 69) to: result rANGETokens.
	result addTokens: ((nodes at: 4) at: 70) to: result cASETokens.
	result addTokens: ((nodes at: 4) at: 71) to: result dEFAULTTokens.
	result addTokens: ((nodes at: 4) at: 72) to: result fLOAT_LITTokens.
	result addObjects: ((nodes at: 4) at: 73) to: result recvExprs.
	result addTokens: ((nodes at: 4) at: 74) to: result dECIMAL_LITTokens.
	result addTokens: ((nodes at: 4) at: 75) to: result bINARY_LITTokens.
	result addTokens: ((nodes at: 4) at: 76) to: result oCTAL_LITTokens.
	result addTokens: ((nodes at: 4) at: 77) to: result hEX_LITTokens.
	result addTokens: ((nodes at: 4) at: 78) to: result iMAGINARY_LITTokens.
	result addTokens: ((nodes at: 4) at: 79) to: result rUNE_LITTokens.
	result addTokens: ((nodes at: 4) at: 80) to: result rAW_STRING_LITTokens.
	result
		addTokens: ((nodes at: 4) at: 81)
		to: result iNTERPRETED_STRING_LITTokens.
	result addObjects: ((nodes at: 4) at: 82) to: result tags.
	result addObjects: ((nodes at: 4) at: 83) to: result parameters.
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionForfunctionDecl3: nodes [
	| result |
	result := GoFunctionDeclNode new.
	result addToken: (nodes at: 1) to: result fUNCTokens.
	result name: (nodes at: 2).
	result addTokens: ((nodes at: 3) at: 1) to: result l_BRACKETTokens.
	result addTokens: ((nodes at: 3) at: 2) to: result iDENTIFIERTokens.
	result addTokens: ((nodes at: 3) at: 3) to: result cOMMATokens.
	result addTokens: ((nodes at: 3) at: 4) to: result dOTTokens.
	result addTokens: ((nodes at: 3) at: 5) to: result l_PARENTokens.
	result addTokens: ((nodes at: 3) at: 6) to: result r_PARENTokens.
	result addTokens: ((nodes at: 3) at: 7) to: result nIL_LITTokens.
	result addTokens: ((nodes at: 3) at: 8) to: result r_BRACKETTokens.
	result addTokens: ((nodes at: 3) at: 9) to: result sTRUCTTokens.
	result addTokens: ((nodes at: 3) at: 10) to: result l_CURLYTokens.
	result addTokens: ((nodes at: 3) at: 11) to: result r_CURLYTokens.
	result addTokens: ((nodes at: 3) at: 12) to: result sTARTokens.
	result addTokens: ((nodes at: 3) at: 13) to: result fUNCTokens.
	result addTokens: ((nodes at: 3) at: 14) to: result iNTERFACETokens.
	result addTokens: ((nodes at: 3) at: 15) to: result mAPTokens.
	result addTokens: ((nodes at: 3) at: 16) to: result cHANTokens.
	result addTokens: ((nodes at: 3) at: 17) to: result rECEIVETokens.
	result addTokens: ((nodes at: 3) at: 18) to: result pLUSTokens.
	result addTokens: ((nodes at: 3) at: 19) to: result mINUSTokens.
	result addTokens: ((nodes at: 3) at: 20) to: result eXCLAMATIONTokens.
	result addTokens: ((nodes at: 3) at: 21) to: result cARETTokens.
	result addTokens: ((nodes at: 3) at: 22) to: result aMPERSANDTokens.
	result addTokens: ((nodes at: 3) at: 23) to: result unaryOps.
	result addTokens: ((nodes at: 3) at: 24) to: result dIVTokens.
	result addTokens: ((nodes at: 3) at: 25) to: result mODTokens.
	result addTokens: ((nodes at: 3) at: 26) to: result lSHIFTTokens.
	result addTokens: ((nodes at: 3) at: 27) to: result rSHIFTTokens.
	result addTokens: ((nodes at: 3) at: 28) to: result mulOps.
	result addTokens: ((nodes at: 3) at: 29) to: result oRTokens.
	result addTokens: ((nodes at: 3) at: 30) to: result addOps.
	result addTokens: ((nodes at: 3) at: 31) to: result eQUALSTokens.
	result addTokens: ((nodes at: 3) at: 32) to: result nOT_EQUALSTokens.
	result addTokens: ((nodes at: 3) at: 33) to: result lESSTokens.
	result addTokens: ((nodes at: 3) at: 34) to: result lESS_OR_EQUALSTokens.
	result addTokens: ((nodes at: 3) at: 35) to: result gREATERTokens.
	result addTokens: ((nodes at: 3) at: 36) to: result relOps.
	result addTokens: ((nodes at: 3) at: 37) to: result lOGICAL_ANDTokens.
	result addTokens: ((nodes at: 3) at: 38) to: result lOGICAL_ORTokens.
	result addNodes: ((nodes at: 3) at: 39) to: result paramses.
	result addObjects: ((nodes at: 3) at: 40) to: result results.
	result addTokens: ((nodes at: 3) at: 41) to: result sEMITokens.
	result addTokens: ((nodes at: 3) at: 42) to: result nEWLINETokens.
	result addTokens: ((nodes at: 3) at: 43) to: result uNDERLYINGTokens.
	result addTokens: ((nodes at: 3) at: 44) to: result cOLONTokens.
	result addTokens: ((nodes at: 3) at: 45) to: result eLLIPSISTokens.
	result addObjects: ((nodes at: 3) at: 46) to: result tags.
	result addObjects: ((nodes at: 3) at: 47) to: result parameters.
	result addTokens: ((nodes at: 3) at: 48) to: result dECIMAL_LITTokens.
	result addTokens: ((nodes at: 3) at: 49) to: result bINARY_LITTokens.
	result addTokens: ((nodes at: 3) at: 50) to: result oCTAL_LITTokens.
	result addTokens: ((nodes at: 3) at: 51) to: result hEX_LITTokens.
	result addTokens: ((nodes at: 3) at: 52) to: result iMAGINARY_LITTokens.
	result addTokens: ((nodes at: 3) at: 53) to: result rUNE_LITTokens.
	result addTokens: ((nodes at: 3) at: 54) to: result rAW_STRING_LITTokens.
	result
		addTokens: ((nodes at: 3) at: 55)
		to: result iNTERPRETED_STRING_LITTokens.
	result addTokens: ((nodes at: 3) at: 56) to: result fLOAT_LITTokens.
	result addTokens: ((nodes at: 3) at: 57) to: result cONSTTokens.
	result addTokens: ((nodes at: 3) at: 58) to: result tYPETokens.
	result addTokens: ((nodes at: 3) at: 59) to: result vARTokens.
	result addObjects: ((nodes at: 3) at: 60) to: result channels.
	result addTokens: ((nodes at: 3) at: 61) to: result pLUS_PLUSTokens.
	result addTokens: ((nodes at: 3) at: 62) to: result mINUS_MINUSTokens.
	result addTokens: ((nodes at: 3) at: 63) to: result dECLARE_ASSIGNTokens.
	result addTokens: ((nodes at: 3) at: 64) to: result gOTokens.
	result addTokens: ((nodes at: 3) at: 65) to: result rETURNTokens.
	result addTokens: ((nodes at: 3) at: 66) to: result bREAKTokens.
	result addTokens: ((nodes at: 3) at: 67) to: result cONTINUETokens.
	result addTokens: ((nodes at: 3) at: 68) to: result gOTOTokens.
	result addTokens: ((nodes at: 3) at: 69) to: result fALLTHROUGHTokens.
	result addTokens: ((nodes at: 3) at: 70) to: result iFTokens.
	result addTokens: ((nodes at: 3) at: 71) to: result eLSETokens.
	result addTokens: ((nodes at: 3) at: 72) to: result sELECTTokens.
	result addTokens: ((nodes at: 3) at: 73) to: result fORTokens.
	result addTokens: ((nodes at: 3) at: 74) to: result dEFERTokens.
	result addTokens: ((nodes at: 3) at: 75) to: result aSSIGNTokens.
	result addTokens: ((nodes at: 3) at: 76) to: result bIT_CLEARTokens.
	result addTokens: ((nodes at: 3) at: 77) to: result sWITCHTokens.
	result addObjects: ((nodes at: 3) at: 78) to: result postStmts.
	result addObjects: ((nodes at: 3) at: 79) to: result initStmts.
	result addTokens: ((nodes at: 3) at: 80) to: result rANGETokens.
	result addTokens: ((nodes at: 3) at: 81) to: result cASETokens.
	result addTokens: ((nodes at: 3) at: 82) to: result dEFAULTTokens.
	result addObjects: ((nodes at: 3) at: 83) to: result recvExprs.
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionForidentifierList1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	self add: (nodes at: 1) to: (result at: 1).
	self addAll: ((nodes at: 2) at: 1) to: (result at: 2).
	self addAll: ((nodes at: 2) at: 2) to: (result at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionForimportDecl1: nodes [
	| result |
	result := GoImportDeclNode new.
	result iMPORTToken: (nodes at: 1).
	result addNode: (nodes at: 2) to: result imports.
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionForimportDecl2: nodes [
	| result |
	result := GoImportDeclNode new.
	result iMPORTToken: (nodes at: 1).
	result l_PARENToken: (nodes at: 2).
	result addToken: ((nodes at: 3) at: 1) to: result sEMITokens.
	result addToken: ((nodes at: 3) at: 2) to: result nEWLINETokens.
	result addNodes: ((nodes at: 4) at: 1) to: result imports.
	result addTokens: ((nodes at: 4) at: 2) to: result sEMITokens.
	result addTokens: ((nodes at: 4) at: 3) to: result nEWLINETokens.
	result r_PARENToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionForimportPath1: nodes [
	| result |
	result := GoImportPathNode new.
	result string: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionForimportSpec1: nodes [
	| result |
	result := GoImportSpecNode new.
	result path: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionForimportSpec3: nodes [
	| result |
	result := GoImportSpecNode new.
	result name: (nodes at: 1).
	result path: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionForpackageClause1: nodes [
	| result |
	result := GoPackageClauseNode new.
	result packageName: (nodes at: 1).
	result iDENTIFIERToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionForparameters1: nodes [
	| result |
	result := GoParametersNode new.
	result l_PARENToken: (nodes at: 1).
	result r_PARENToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionForresult2: nodes [
	| result |
	result := Array new: 83.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 7 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 9 put: (OrderedCollection new: 2).
	result at: 10 put: (OrderedCollection new: 2).
	result at: 11 put: (OrderedCollection new: 2).
	result at: 12 put: (OrderedCollection new: 2).
	result at: 13 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 15 put: (OrderedCollection new: 2).
	result at: 16 put: (OrderedCollection new: 2).
	result at: 17 put: (OrderedCollection new: 2).
	result at: 18 put: (OrderedCollection new: 2).
	result at: 19 put: (OrderedCollection new: 2).
	result at: 20 put: (OrderedCollection new: 2).
	result at: 21 put: (OrderedCollection new: 2).
	result at: 22 put: (OrderedCollection new: 2).
	result at: 23 put: (OrderedCollection new: 2).
	result at: 24 put: (OrderedCollection new: 2).
	result at: 25 put: (OrderedCollection new: 2).
	result at: 26 put: (OrderedCollection new: 2).
	result at: 27 put: (OrderedCollection new: 2).
	result at: 28 put: (OrderedCollection new: 2).
	result at: 29 put: (OrderedCollection new: 2).
	result at: 30 put: (OrderedCollection new: 2).
	result at: 31 put: (OrderedCollection new: 2).
	result at: 32 put: (OrderedCollection new: 2).
	result at: 33 put: (OrderedCollection new: 2).
	result at: 34 put: (OrderedCollection new: 2).
	result at: 35 put: (OrderedCollection new: 2).
	result at: 36 put: (OrderedCollection new: 2).
	result at: 37 put: (OrderedCollection new: 2).
	result at: 38 put: (OrderedCollection new: 2).
	result at: 39 put: (OrderedCollection new: 2).
	result at: 40 put: (OrderedCollection new: 2).
	result at: 41 put: (OrderedCollection new: 2).
	result at: 42 put: (OrderedCollection new: 2).
	result at: 43 put: (OrderedCollection new: 2).
	result at: 44 put: (OrderedCollection new: 2).
	result at: 45 put: (OrderedCollection new: 2).
	result at: 46 put: (OrderedCollection new: 2).
	result at: 47 put: (OrderedCollection new: 2).
	result at: 48 put: (OrderedCollection new: 2).
	result at: 49 put: (OrderedCollection new: 2).
	result at: 50 put: (OrderedCollection new: 2).
	result at: 51 put: (OrderedCollection new: 2).
	result at: 52 put: (OrderedCollection new: 2).
	result at: 53 put: (OrderedCollection new: 2).
	result at: 54 put: (OrderedCollection new: 2).
	result at: 55 put: (OrderedCollection new: 2).
	result at: 56 put: (OrderedCollection new: 2).
	result at: 57 put: (OrderedCollection new: 2).
	result at: 58 put: (OrderedCollection new: 2).
	result at: 59 put: (OrderedCollection new: 2).
	result at: 60 put: (OrderedCollection new: 2).
	result at: 61 put: (OrderedCollection new: 2).
	result at: 62 put: (OrderedCollection new: 2).
	result at: 63 put: (OrderedCollection new: 2).
	result at: 64 put: (OrderedCollection new: 2).
	result at: 65 put: (OrderedCollection new: 2).
	result at: 66 put: (OrderedCollection new: 2).
	result at: 67 put: (OrderedCollection new: 2).
	result at: 68 put: (OrderedCollection new: 2).
	result at: 69 put: (OrderedCollection new: 2).
	result at: 70 put: (OrderedCollection new: 2).
	result at: 71 put: (OrderedCollection new: 2).
	result at: 72 put: (OrderedCollection new: 2).
	result at: 73 put: (OrderedCollection new: 2).
	result at: 74 put: (OrderedCollection new: 2).
	result at: 75 put: (OrderedCollection new: 2).
	result at: 76 put: (OrderedCollection new: 2).
	result at: 77 put: (OrderedCollection new: 2).
	result at: 78 put: (OrderedCollection new: 2).
	result at: 79 put: (OrderedCollection new: 2).
	result at: 80 put: (OrderedCollection new: 2).
	result at: 81 put: (OrderedCollection new: 2).
	result at: 82 put: (OrderedCollection new: 2).
	result at: 83 put: (OrderedCollection new: 2).
	self addAll: ((nodes at: 1) at: 1) to: (result at: 5).
	self addAll: ((nodes at: 1) at: 2) to: (result at: 6).
	self addAll: ((nodes at: 1) at: 3) to: (result at: 7).
	self addAll: ((nodes at: 1) at: 4) to: (result at: 1).
	self addAll: ((nodes at: 1) at: 5) to: (result at: 2).
	self addAll: ((nodes at: 1) at: 6) to: (result at: 4).
	self addAll: ((nodes at: 1) at: 7) to: (result at: 8).
	self addAll: ((nodes at: 1) at: 8) to: (result at: 9).
	self addAll: ((nodes at: 1) at: 9) to: (result at: 10).
	self addAll: ((nodes at: 1) at: 10) to: (result at: 11).
	self addAll: ((nodes at: 1) at: 11) to: (result at: 12).
	self addAll: ((nodes at: 1) at: 12) to: (result at: 13).
	self addAll: ((nodes at: 1) at: 13) to: (result at: 14).
	self addAll: ((nodes at: 1) at: 14) to: (result at: 15).
	self addAll: ((nodes at: 1) at: 15) to: (result at: 16).
	self addAll: ((nodes at: 1) at: 16) to: (result at: 17).
	self addAll: ((nodes at: 1) at: 17) to: (result at: 18).
	self addAll: ((nodes at: 1) at: 18) to: (result at: 19).
	self addAll: ((nodes at: 1) at: 19) to: (result at: 20).
	self addAll: ((nodes at: 1) at: 20) to: (result at: 21).
	self addAll: ((nodes at: 1) at: 21) to: (result at: 22).
	self addAll: ((nodes at: 1) at: 22) to: (result at: 23).
	self addAll: ((nodes at: 1) at: 23) to: (result at: 24).
	self addAll: ((nodes at: 1) at: 24) to: (result at: 25).
	self addAll: ((nodes at: 1) at: 25) to: (result at: 26).
	self addAll: ((nodes at: 1) at: 26) to: (result at: 27).
	self addAll: ((nodes at: 1) at: 27) to: (result at: 28).
	self addAll: ((nodes at: 1) at: 28) to: (result at: 29).
	self addAll: ((nodes at: 1) at: 29) to: (result at: 30).
	self addAll: ((nodes at: 1) at: 30) to: (result at: 31).
	self addAll: ((nodes at: 1) at: 31) to: (result at: 32).
	self addAll: ((nodes at: 1) at: 32) to: (result at: 33).
	self addAll: ((nodes at: 1) at: 33) to: (result at: 34).
	self addAll: ((nodes at: 1) at: 34) to: (result at: 35).
	self addAll: ((nodes at: 1) at: 35) to: (result at: 36).
	self addAll: ((nodes at: 1) at: 36) to: (result at: 37).
	self addAll: ((nodes at: 1) at: 37) to: (result at: 38).
	self addAll: ((nodes at: 1) at: 38) to: (result at: 39).
	self addAll: ((nodes at: 1) at: 39) to: (result at: 40).
	self addAll: ((nodes at: 1) at: 40) to: (result at: 41).
	self addAll: ((nodes at: 1) at: 41) to: (result at: 42).
	self addAll: ((nodes at: 1) at: 42) to: (result at: 43).
	self addAll: ((nodes at: 1) at: 43) to: (result at: 44).
	self addAll: ((nodes at: 1) at: 44) to: (result at: 45).
	self addAll: ((nodes at: 1) at: 45) to: (result at: 46).
	self addAll: ((nodes at: 1) at: 46) to: (result at: 47).
	self addAll: ((nodes at: 1) at: 47) to: (result at: 3).
	self addAll: ((nodes at: 1) at: 48) to: (result at: 48).
	self addAll: ((nodes at: 1) at: 49) to: (result at: 49).
	self addAll: ((nodes at: 1) at: 50) to: (result at: 50).
	self addAll: ((nodes at: 1) at: 51) to: (result at: 51).
	self addAll: ((nodes at: 1) at: 52) to: (result at: 52).
	self addAll: ((nodes at: 1) at: 53) to: (result at: 53).
	self addAll: ((nodes at: 1) at: 54) to: (result at: 54).
	self addAll: ((nodes at: 1) at: 55) to: (result at: 55).
	self addAll: ((nodes at: 1) at: 56) to: (result at: 56).
	self addAll: ((nodes at: 1) at: 57) to: (result at: 57).
	self addAll: ((nodes at: 1) at: 58) to: (result at: 58).
	self addAll: ((nodes at: 1) at: 59) to: (result at: 59).
	self addAll: ((nodes at: 1) at: 60) to: (result at: 60).
	self addAll: ((nodes at: 1) at: 61) to: (result at: 61).
	self addAll: ((nodes at: 1) at: 62) to: (result at: 62).
	self addAll: ((nodes at: 1) at: 63) to: (result at: 63).
	self addAll: ((nodes at: 1) at: 64) to: (result at: 64).
	self addAll: ((nodes at: 1) at: 65) to: (result at: 65).
	self addAll: ((nodes at: 1) at: 66) to: (result at: 66).
	self addAll: ((nodes at: 1) at: 67) to: (result at: 67).
	self addAll: ((nodes at: 1) at: 68) to: (result at: 68).
	self addAll: ((nodes at: 1) at: 69) to: (result at: 69).
	self addAll: ((nodes at: 1) at: 70) to: (result at: 70).
	self addAll: ((nodes at: 1) at: 71) to: (result at: 71).
	self addAll: ((nodes at: 1) at: 72) to: (result at: 72).
	self addAll: ((nodes at: 1) at: 73) to: (result at: 73).
	self addAll: ((nodes at: 1) at: 74) to: (result at: 74).
	self addAll: ((nodes at: 1) at: 75) to: (result at: 75).
	self addAll: ((nodes at: 1) at: 76) to: (result at: 76).
	self addAll: ((nodes at: 1) at: 77) to: (result at: 77).
	self addAll: ((nodes at: 1) at: 78) to: (result at: 78).
	self addAll: ((nodes at: 1) at: 79) to: (result at: 79).
	self addAll: ((nodes at: 1) at: 80) to: (result at: 80).
	self addAll: ((nodes at: 1) at: 81) to: (result at: 81).
	self addAll: ((nodes at: 1) at: 82) to: (result at: 82).
	self addAll: ((nodes at: 1) at: 83) to: (result at: 83).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionForsignature1: nodes [
	| result |
	result := GoSignatureNode new.
	result params: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionForsourceFile1: nodes [
	| result |
	result := GoSourceFileNode new.
	result package: (nodes at: 1).
	result addToken: ((nodes at: 2) at: 1) to: result sEMITokens.
	result addToken: ((nodes at: 2) at: 2) to: result nEWLINETokens.
	result addNodes: ((nodes at: 3) at: 1) to: result imports.
	result addTokens: ((nodes at: 3) at: 2) to: result sEMITokens.
	result addTokens: ((nodes at: 3) at: 3) to: result nEWLINETokens.
	result addNodes: ((nodes at: 4) at: 1) to: result functionDeclarations.
	result addNodes: ((nodes at: 4) at: 2) to: result methodDeclarations.
	result addNodes: ((nodes at: 4) at: 3) to: result declarations.
	result addTokens: ((nodes at: 4) at: 4) to: result sEMITokens.
	result addTokens: ((nodes at: 4) at: 5) to: result nEWLINETokens.
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFortypeDecl1: nodes [
	| result |
	result := Array new: 83.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 7 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 9 put: (OrderedCollection new: 2).
	result at: 10 put: (OrderedCollection new: 2).
	result at: 11 put: (OrderedCollection new: 2).
	result at: 12 put: (OrderedCollection new: 2).
	result at: 13 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 15 put: (OrderedCollection new: 2).
	result at: 16 put: (OrderedCollection new: 2).
	result at: 17 put: (OrderedCollection new: 2).
	result at: 18 put: (OrderedCollection new: 2).
	result at: 19 put: (OrderedCollection new: 2).
	result at: 20 put: (OrderedCollection new: 2).
	result at: 21 put: (OrderedCollection new: 2).
	result at: 22 put: (OrderedCollection new: 2).
	result at: 23 put: (OrderedCollection new: 2).
	result at: 24 put: (OrderedCollection new: 2).
	result at: 25 put: (OrderedCollection new: 2).
	result at: 26 put: (OrderedCollection new: 2).
	result at: 27 put: (OrderedCollection new: 2).
	result at: 28 put: (OrderedCollection new: 2).
	result at: 29 put: (OrderedCollection new: 2).
	result at: 30 put: (OrderedCollection new: 2).
	result at: 31 put: (OrderedCollection new: 2).
	result at: 32 put: (OrderedCollection new: 2).
	result at: 33 put: (OrderedCollection new: 2).
	result at: 34 put: (OrderedCollection new: 2).
	result at: 35 put: (OrderedCollection new: 2).
	result at: 36 put: (OrderedCollection new: 2).
	result at: 37 put: (OrderedCollection new: 2).
	result at: 38 put: (OrderedCollection new: 2).
	result at: 39 put: (OrderedCollection new: 2).
	result at: 40 put: (OrderedCollection new: 2).
	result at: 41 put: (OrderedCollection new: 2).
	result at: 42 put: (OrderedCollection new: 2).
	result at: 43 put: (OrderedCollection new: 2).
	result at: 44 put: (OrderedCollection new: 2).
	result at: 45 put: (OrderedCollection new: 2).
	result at: 46 put: (OrderedCollection new: 2).
	result at: 47 put: (OrderedCollection new: 2).
	result at: 48 put: (OrderedCollection new: 2).
	result at: 49 put: (OrderedCollection new: 2).
	result at: 50 put: (OrderedCollection new: 2).
	result at: 51 put: (OrderedCollection new: 2).
	result at: 52 put: (OrderedCollection new: 2).
	result at: 53 put: (OrderedCollection new: 2).
	result at: 54 put: (OrderedCollection new: 2).
	result at: 55 put: (OrderedCollection new: 2).
	result at: 56 put: (OrderedCollection new: 2).
	result at: 57 put: (OrderedCollection new: 2).
	result at: 58 put: (OrderedCollection new: 2).
	result at: 59 put: (OrderedCollection new: 2).
	result at: 60 put: (OrderedCollection new: 2).
	result at: 61 put: (OrderedCollection new: 2).
	result at: 62 put: (OrderedCollection new: 2).
	result at: 63 put: (OrderedCollection new: 2).
	result at: 64 put: (OrderedCollection new: 2).
	result at: 65 put: (OrderedCollection new: 2).
	result at: 66 put: (OrderedCollection new: 2).
	result at: 67 put: (OrderedCollection new: 2).
	result at: 68 put: (OrderedCollection new: 2).
	result at: 69 put: (OrderedCollection new: 2).
	result at: 70 put: (OrderedCollection new: 2).
	result at: 71 put: (OrderedCollection new: 2).
	result at: 72 put: (OrderedCollection new: 2).
	result at: 73 put: (OrderedCollection new: 2).
	result at: 74 put: (OrderedCollection new: 2).
	result at: 75 put: (OrderedCollection new: 2).
	result at: 76 put: (OrderedCollection new: 2).
	result at: 77 put: (OrderedCollection new: 2).
	result at: 78 put: (OrderedCollection new: 2).
	result at: 79 put: (OrderedCollection new: 2).
	result at: 80 put: (OrderedCollection new: 2).
	result at: 81 put: (OrderedCollection new: 2).
	result at: 82 put: (OrderedCollection new: 2).
	result at: 83 put: (OrderedCollection new: 2).
	self add: (nodes at: 1) to: (result at: 1).
	self addAll: ((nodes at: 2) at: 1) to: (result at: 2).
	self addAll: ((nodes at: 2) at: 2) to: (result at: 3).
	self addAll: ((nodes at: 2) at: 3) to: (result at: 4).
	self addAll: ((nodes at: 2) at: 4) to: (result at: 5).
	self addAll: ((nodes at: 2) at: 5) to: (result at: 6).
	self addAll: ((nodes at: 2) at: 6) to: (result at: 7).
	self addAll: ((nodes at: 2) at: 7) to: (result at: 8).
	self addAll: ((nodes at: 2) at: 8) to: (result at: 9).
	self addAll: ((nodes at: 2) at: 9) to: (result at: 10).
	self addAll: ((nodes at: 2) at: 10) to: (result at: 11).
	self addAll: ((nodes at: 2) at: 11) to: (result at: 12).
	self addAll: ((nodes at: 2) at: 12) to: (result at: 13).
	self addAll: ((nodes at: 2) at: 13) to: (result at: 14).
	self addAll: ((nodes at: 2) at: 14) to: (result at: 15).
	self addAll: ((nodes at: 2) at: 15) to: (result at: 16).
	self addAll: ((nodes at: 2) at: 16) to: (result at: 17).
	self addAll: ((nodes at: 2) at: 17) to: (result at: 18).
	self addAll: ((nodes at: 2) at: 18) to: (result at: 19).
	self addAll: ((nodes at: 2) at: 19) to: (result at: 20).
	self addAll: ((nodes at: 2) at: 20) to: (result at: 21).
	self addAll: ((nodes at: 2) at: 21) to: (result at: 22).
	self addAll: ((nodes at: 2) at: 22) to: (result at: 23).
	self addAll: ((nodes at: 2) at: 23) to: (result at: 24).
	self addAll: ((nodes at: 2) at: 24) to: (result at: 25).
	self addAll: ((nodes at: 2) at: 25) to: (result at: 26).
	self addAll: ((nodes at: 2) at: 26) to: (result at: 27).
	self addAll: ((nodes at: 2) at: 27) to: (result at: 28).
	self addAll: ((nodes at: 2) at: 28) to: (result at: 29).
	self addAll: ((nodes at: 2) at: 29) to: (result at: 30).
	self addAll: ((nodes at: 2) at: 30) to: (result at: 31).
	self addAll: ((nodes at: 2) at: 31) to: (result at: 32).
	self addAll: ((nodes at: 2) at: 32) to: (result at: 33).
	self addAll: ((nodes at: 2) at: 33) to: (result at: 34).
	self addAll: ((nodes at: 2) at: 34) to: (result at: 35).
	self addAll: ((nodes at: 2) at: 35) to: (result at: 36).
	self addAll: ((nodes at: 2) at: 36) to: (result at: 37).
	self addAll: ((nodes at: 2) at: 37) to: (result at: 38).
	self addAll: ((nodes at: 2) at: 38) to: (result at: 39).
	self addAll: ((nodes at: 2) at: 39) to: (result at: 40).
	self addAll: ((nodes at: 2) at: 40) to: (result at: 41).
	self addAll: ((nodes at: 2) at: 41) to: (result at: 42).
	self addAll: ((nodes at: 2) at: 42) to: (result at: 43).
	self addAll: ((nodes at: 2) at: 43) to: (result at: 44).
	self addAll: ((nodes at: 2) at: 44) to: (result at: 45).
	self addAll: ((nodes at: 2) at: 45) to: (result at: 46).
	self addAll: ((nodes at: 2) at: 46) to: (result at: 47).
	self addAll: ((nodes at: 2) at: 47) to: (result at: 48).
	self addAll: ((nodes at: 2) at: 48) to: (result at: 49).
	self addAll: ((nodes at: 2) at: 49) to: (result at: 50).
	self addAll: ((nodes at: 2) at: 50) to: (result at: 51).
	self addAll: ((nodes at: 2) at: 51) to: (result at: 52).
	self addAll: ((nodes at: 2) at: 52) to: (result at: 53).
	self addAll: ((nodes at: 2) at: 53) to: (result at: 54).
	self addAll: ((nodes at: 2) at: 54) to: (result at: 55).
	self addAll: ((nodes at: 2) at: 55) to: (result at: 56).
	self addAll: ((nodes at: 2) at: 56) to: (result at: 57).
	self addAll: ((nodes at: 2) at: 57) to: (result at: 58).
	self addAll: ((nodes at: 2) at: 58) to: (result at: 59).
	self addAll: ((nodes at: 2) at: 59) to: (result at: 1).
	self addAll: ((nodes at: 2) at: 60) to: (result at: 60).
	self addAll: ((nodes at: 2) at: 61) to: (result at: 61).
	self addAll: ((nodes at: 2) at: 62) to: (result at: 62).
	self addAll: ((nodes at: 2) at: 63) to: (result at: 63).
	self addAll: ((nodes at: 2) at: 64) to: (result at: 64).
	self addAll: ((nodes at: 2) at: 65) to: (result at: 65).
	self addAll: ((nodes at: 2) at: 66) to: (result at: 66).
	self addAll: ((nodes at: 2) at: 67) to: (result at: 67).
	self addAll: ((nodes at: 2) at: 68) to: (result at: 68).
	self addAll: ((nodes at: 2) at: 69) to: (result at: 69).
	self addAll: ((nodes at: 2) at: 70) to: (result at: 70).
	self addAll: ((nodes at: 2) at: 71) to: (result at: 71).
	self addAll: ((nodes at: 2) at: 72) to: (result at: 72).
	self addAll: ((nodes at: 2) at: 73) to: (result at: 73).
	self addAll: ((nodes at: 2) at: 74) to: (result at: 74).
	self addAll: ((nodes at: 2) at: 75) to: (result at: 75).
	self addAll: ((nodes at: 2) at: 76) to: (result at: 76).
	self addAll: ((nodes at: 2) at: 77) to: (result at: 77).
	self addAll: ((nodes at: 2) at: 78) to: (result at: 78).
	self addAll: ((nodes at: 2) at: 79) to: (result at: 79).
	self addAll: ((nodes at: 2) at: 80) to: (result at: 80).
	self addAll: ((nodes at: 2) at: 81) to: (result at: 81).
	self addAll: ((nodes at: 2) at: 82) to: (result at: 82).
	self addAll: ((nodes at: 2) at: 83) to: (result at: 83).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFortypeDef1: nodes [
	| result |
	result := nodes at: 2.
	self addFirst: (nodes at: 1) to: (result at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFortypeLit2: nodes [
	| result |
	result := Array new: 83.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 7 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 9 put: (OrderedCollection new: 2).
	result at: 10 put: (OrderedCollection new: 2).
	result at: 11 put: (OrderedCollection new: 2).
	result at: 12 put: (OrderedCollection new: 2).
	result at: 13 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 15 put: (OrderedCollection new: 2).
	result at: 16 put: (OrderedCollection new: 2).
	result at: 17 put: (OrderedCollection new: 2).
	result at: 18 put: (OrderedCollection new: 2).
	result at: 19 put: (OrderedCollection new: 2).
	result at: 20 put: (OrderedCollection new: 2).
	result at: 21 put: (OrderedCollection new: 2).
	result at: 22 put: (OrderedCollection new: 2).
	result at: 23 put: (OrderedCollection new: 2).
	result at: 24 put: (OrderedCollection new: 2).
	result at: 25 put: (OrderedCollection new: 2).
	result at: 26 put: (OrderedCollection new: 2).
	result at: 27 put: (OrderedCollection new: 2).
	result at: 28 put: (OrderedCollection new: 2).
	result at: 29 put: (OrderedCollection new: 2).
	result at: 30 put: (OrderedCollection new: 2).
	result at: 31 put: (OrderedCollection new: 2).
	result at: 32 put: (OrderedCollection new: 2).
	result at: 33 put: (OrderedCollection new: 2).
	result at: 34 put: (OrderedCollection new: 2).
	result at: 35 put: (OrderedCollection new: 2).
	result at: 36 put: (OrderedCollection new: 2).
	result at: 37 put: (OrderedCollection new: 2).
	result at: 38 put: (OrderedCollection new: 2).
	result at: 39 put: (OrderedCollection new: 2).
	result at: 40 put: (OrderedCollection new: 2).
	result at: 41 put: (OrderedCollection new: 2).
	result at: 42 put: (OrderedCollection new: 2).
	result at: 43 put: (OrderedCollection new: 2).
	result at: 44 put: (OrderedCollection new: 2).
	result at: 45 put: (OrderedCollection new: 2).
	result at: 46 put: (OrderedCollection new: 2).
	result at: 47 put: (OrderedCollection new: 2).
	result at: 48 put: (OrderedCollection new: 2).
	result at: 49 put: (OrderedCollection new: 2).
	result at: 50 put: (OrderedCollection new: 2).
	result at: 51 put: (OrderedCollection new: 2).
	result at: 52 put: (OrderedCollection new: 2).
	result at: 53 put: (OrderedCollection new: 2).
	result at: 54 put: (OrderedCollection new: 2).
	result at: 55 put: (OrderedCollection new: 2).
	result at: 56 put: (OrderedCollection new: 2).
	result at: 57 put: (OrderedCollection new: 2).
	result at: 58 put: (OrderedCollection new: 2).
	result at: 59 put: (OrderedCollection new: 2).
	result at: 60 put: (OrderedCollection new: 2).
	result at: 61 put: (OrderedCollection new: 2).
	result at: 62 put: (OrderedCollection new: 2).
	result at: 63 put: (OrderedCollection new: 2).
	result at: 64 put: (OrderedCollection new: 2).
	result at: 65 put: (OrderedCollection new: 2).
	result at: 66 put: (OrderedCollection new: 2).
	result at: 67 put: (OrderedCollection new: 2).
	result at: 68 put: (OrderedCollection new: 2).
	result at: 69 put: (OrderedCollection new: 2).
	result at: 70 put: (OrderedCollection new: 2).
	result at: 71 put: (OrderedCollection new: 2).
	result at: 72 put: (OrderedCollection new: 2).
	result at: 73 put: (OrderedCollection new: 2).
	result at: 74 put: (OrderedCollection new: 2).
	result at: 75 put: (OrderedCollection new: 2).
	result at: 76 put: (OrderedCollection new: 2).
	result at: 77 put: (OrderedCollection new: 2).
	result at: 78 put: (OrderedCollection new: 2).
	result at: 79 put: (OrderedCollection new: 2).
	result at: 80 put: (OrderedCollection new: 2).
	result at: 81 put: (OrderedCollection new: 2).
	result at: 82 put: (OrderedCollection new: 2).
	result at: 83 put: (OrderedCollection new: 2).
	self addAll: ((nodes at: 1) at: 1) to: (result at: 12).
	self addAll: ((nodes at: 1) at: 2) to: (result at: 13).
	self addAll: ((nodes at: 1) at: 3) to: (result at: 14).
	self addAll: ((nodes at: 1) at: 4) to: (result at: 15).
	self addAll: ((nodes at: 1) at: 5) to: (result at: 16).
	self addAll: ((nodes at: 1) at: 6) to: (result at: 17).
	self addAll: ((nodes at: 1) at: 7) to: (result at: 18).
	self addAll: ((nodes at: 1) at: 8) to: (result at: 19).
	self addAll: ((nodes at: 1) at: 9) to: (result at: 20).
	self addAll: ((nodes at: 1) at: 10) to: (result at: 1).
	self addAll: ((nodes at: 1) at: 11) to: (result at: 2).
	self addAll: ((nodes at: 1) at: 12) to: (result at: 21).
	self addAll: ((nodes at: 1) at: 13) to: (result at: 22).
	self addAll: ((nodes at: 1) at: 14) to: (result at: 23).
	self addAll: ((nodes at: 1) at: 15) to: (result at: 24).
	self addAll: ((nodes at: 1) at: 16) to: (result at: 25).
	self addAll: ((nodes at: 1) at: 17) to: (result at: 26).
	self addAll: ((nodes at: 1) at: 18) to: (result at: 27).
	self addAll: ((nodes at: 1) at: 19) to: (result at: 28).
	self addAll: ((nodes at: 1) at: 20) to: (result at: 29).
	self addAll: ((nodes at: 1) at: 21) to: (result at: 30).
	self addAll: ((nodes at: 1) at: 22) to: (result at: 31).
	self addAll: ((nodes at: 1) at: 23) to: (result at: 33).
	self addAll: ((nodes at: 1) at: 24) to: (result at: 34).
	self addAll: ((nodes at: 1) at: 25) to: (result at: 35).
	self addAll: ((nodes at: 1) at: 26) to: (result at: 36).
	self addAll: ((nodes at: 1) at: 27) to: (result at: 37).
	self addAll: ((nodes at: 1) at: 28) to: (result at: 38).
	self addAll: ((nodes at: 1) at: 29) to: (result at: 39).
	self addAll: ((nodes at: 1) at: 30) to: (result at: 40).
	self addAll: ((nodes at: 1) at: 31) to: (result at: 41).
	self addAll: ((nodes at: 1) at: 32) to: (result at: 42).
	self addAll: ((nodes at: 1) at: 33) to: (result at: 43).
	self addAll: ((nodes at: 1) at: 34) to: (result at: 44).
	self addAll: ((nodes at: 1) at: 35) to: (result at: 45).
	self addAll: ((nodes at: 1) at: 36) to: (result at: 46).
	self addAll: ((nodes at: 1) at: 37) to: (result at: 47).
	self addAll: ((nodes at: 1) at: 38) to: (result at: 48).
	self addAll: ((nodes at: 1) at: 39) to: (result at: 49).
	self addAll: ((nodes at: 1) at: 40) to: (result at: 50).
	self addAll: ((nodes at: 1) at: 41) to: (result at: 51).
	self addAll: ((nodes at: 1) at: 42) to: (result at: 52).
	self addAll: ((nodes at: 1) at: 43) to: (result at: 53).
	self addAll: ((nodes at: 1) at: 44) to: (result at: 55).
	self addAll: ((nodes at: 1) at: 45) to: (result at: 56).
	self addAll: ((nodes at: 1) at: 46) to: (result at: 54).
	self addAll: ((nodes at: 1) at: 47) to: (result at: 32).
	self addAll: ((nodes at: 1) at: 48) to: (result at: 11).
	self addAll: ((nodes at: 1) at: 49) to: (result at: 3).
	self addAll: ((nodes at: 1) at: 50) to: (result at: 4).
	self addAll: ((nodes at: 1) at: 51) to: (result at: 5).
	self addAll: ((nodes at: 1) at: 52) to: (result at: 6).
	self addAll: ((nodes at: 1) at: 53) to: (result at: 7).
	self addAll: ((nodes at: 1) at: 54) to: (result at: 8).
	self addAll: ((nodes at: 1) at: 55) to: (result at: 9).
	self addAll: ((nodes at: 1) at: 56) to: (result at: 10).
	self addAll: ((nodes at: 1) at: 57) to: (result at: 57).
	self addAll: ((nodes at: 1) at: 58) to: (result at: 59).
	self addAll: ((nodes at: 1) at: 59) to: (result at: 60).
	self addAll: ((nodes at: 1) at: 60) to: (result at: 61).
	self addAll: ((nodes at: 1) at: 61) to: (result at: 62).
	self addAll: ((nodes at: 1) at: 62) to: (result at: 63).
	self addAll: ((nodes at: 1) at: 63) to: (result at: 64).
	self addAll: ((nodes at: 1) at: 64) to: (result at: 65).
	self addAll: ((nodes at: 1) at: 65) to: (result at: 66).
	self addAll: ((nodes at: 1) at: 66) to: (result at: 67).
	self addAll: ((nodes at: 1) at: 67) to: (result at: 68).
	self addAll: ((nodes at: 1) at: 68) to: (result at: 69).
	self addAll: ((nodes at: 1) at: 69) to: (result at: 70).
	self addAll: ((nodes at: 1) at: 70) to: (result at: 71).
	self addAll: ((nodes at: 1) at: 71) to: (result at: 72).
	self addAll: ((nodes at: 1) at: 72) to: (result at: 73).
	self addAll: ((nodes at: 1) at: 73) to: (result at: 74).
	self addAll: ((nodes at: 1) at: 74) to: (result at: 75).
	self addAll: ((nodes at: 1) at: 75) to: (result at: 58).
	self addAll: ((nodes at: 1) at: 76) to: (result at: 76).
	self addAll: ((nodes at: 1) at: 77) to: (result at: 77).
	self addAll: ((nodes at: 1) at: 78) to: (result at: 78).
	self addAll: ((nodes at: 1) at: 79) to: (result at: 79).
	self addAll: ((nodes at: 1) at: 80) to: (result at: 80).
	self addAll: ((nodes at: 1) at: 81) to: (result at: 81).
	self addAll: ((nodes at: 1) at: 82) to: (result at: 82).
	self addAll: ((nodes at: 1) at: 83) to: (result at: 83).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFortypeLit3: nodes [
	| result |
	result := Array new: 83.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 7 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 9 put: (OrderedCollection new: 2).
	result at: 10 put: (OrderedCollection new: 2).
	result at: 11 put: (OrderedCollection new: 2).
	result at: 12 put: (OrderedCollection new: 2).
	result at: 13 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 15 put: (OrderedCollection new: 2).
	result at: 16 put: (OrderedCollection new: 2).
	result at: 17 put: (OrderedCollection new: 2).
	result at: 18 put: (OrderedCollection new: 2).
	result at: 19 put: (OrderedCollection new: 2).
	result at: 20 put: (OrderedCollection new: 2).
	result at: 21 put: (OrderedCollection new: 2).
	result at: 22 put: (OrderedCollection new: 2).
	result at: 23 put: (OrderedCollection new: 2).
	result at: 24 put: (OrderedCollection new: 2).
	result at: 25 put: (OrderedCollection new: 2).
	result at: 26 put: (OrderedCollection new: 2).
	result at: 27 put: (OrderedCollection new: 2).
	result at: 28 put: (OrderedCollection new: 2).
	result at: 29 put: (OrderedCollection new: 2).
	result at: 30 put: (OrderedCollection new: 2).
	result at: 31 put: (OrderedCollection new: 2).
	result at: 32 put: (OrderedCollection new: 2).
	result at: 33 put: (OrderedCollection new: 2).
	result at: 34 put: (OrderedCollection new: 2).
	result at: 35 put: (OrderedCollection new: 2).
	result at: 36 put: (OrderedCollection new: 2).
	result at: 37 put: (OrderedCollection new: 2).
	result at: 38 put: (OrderedCollection new: 2).
	result at: 39 put: (OrderedCollection new: 2).
	result at: 40 put: (OrderedCollection new: 2).
	result at: 41 put: (OrderedCollection new: 2).
	result at: 42 put: (OrderedCollection new: 2).
	result at: 43 put: (OrderedCollection new: 2).
	result at: 44 put: (OrderedCollection new: 2).
	result at: 45 put: (OrderedCollection new: 2).
	result at: 46 put: (OrderedCollection new: 2).
	result at: 47 put: (OrderedCollection new: 2).
	result at: 48 put: (OrderedCollection new: 2).
	result at: 49 put: (OrderedCollection new: 2).
	result at: 50 put: (OrderedCollection new: 2).
	result at: 51 put: (OrderedCollection new: 2).
	result at: 52 put: (OrderedCollection new: 2).
	result at: 53 put: (OrderedCollection new: 2).
	result at: 54 put: (OrderedCollection new: 2).
	result at: 55 put: (OrderedCollection new: 2).
	result at: 56 put: (OrderedCollection new: 2).
	result at: 57 put: (OrderedCollection new: 2).
	result at: 58 put: (OrderedCollection new: 2).
	result at: 59 put: (OrderedCollection new: 2).
	result at: 60 put: (OrderedCollection new: 2).
	result at: 61 put: (OrderedCollection new: 2).
	result at: 62 put: (OrderedCollection new: 2).
	result at: 63 put: (OrderedCollection new: 2).
	result at: 64 put: (OrderedCollection new: 2).
	result at: 65 put: (OrderedCollection new: 2).
	result at: 66 put: (OrderedCollection new: 2).
	result at: 67 put: (OrderedCollection new: 2).
	result at: 68 put: (OrderedCollection new: 2).
	result at: 69 put: (OrderedCollection new: 2).
	result at: 70 put: (OrderedCollection new: 2).
	result at: 71 put: (OrderedCollection new: 2).
	result at: 72 put: (OrderedCollection new: 2).
	result at: 73 put: (OrderedCollection new: 2).
	result at: 74 put: (OrderedCollection new: 2).
	result at: 75 put: (OrderedCollection new: 2).
	result at: 76 put: (OrderedCollection new: 2).
	result at: 77 put: (OrderedCollection new: 2).
	result at: 78 put: (OrderedCollection new: 2).
	result at: 79 put: (OrderedCollection new: 2).
	result at: 80 put: (OrderedCollection new: 2).
	result at: 81 put: (OrderedCollection new: 2).
	result at: 82 put: (OrderedCollection new: 2).
	result at: 83 put: (OrderedCollection new: 2).
	self addAll: ((nodes at: 1) at: 1) to: (result at: 22).
	self addAll: ((nodes at: 1) at: 2) to: (result at: 14).
	self addAll: ((nodes at: 1) at: 3) to: (result at: 23).
	self addAll: ((nodes at: 1) at: 4) to: (result at: 1).
	self addAll: ((nodes at: 1) at: 5) to: (result at: 15).
	self addAll: ((nodes at: 1) at: 6) to: (result at: 16).
	self addAll: ((nodes at: 1) at: 7) to: (result at: 20).
	self addAll: ((nodes at: 1) at: 8) to: (result at: 2).
	self addAll: ((nodes at: 1) at: 9) to: (result at: 21).
	self addAll: ((nodes at: 1) at: 10) to: (result at: 12).
	self addAll: ((nodes at: 1) at: 11) to: (result at: 13).
	self addAll: ((nodes at: 1) at: 12) to: (result at: 24).
	self addAll: ((nodes at: 1) at: 13) to: (result at: 25).
	self addAll: ((nodes at: 1) at: 14) to: (result at: 26).
	self addAll: ((nodes at: 1) at: 15) to: (result at: 27).
	self addAll: ((nodes at: 1) at: 16) to: (result at: 28).
	self addAll: ((nodes at: 1) at: 17) to: (result at: 29).
	self addAll: ((nodes at: 1) at: 18) to: (result at: 33).
	self addAll: ((nodes at: 1) at: 19) to: (result at: 34).
	self addAll: ((nodes at: 1) at: 20) to: (result at: 35).
	self addAll: ((nodes at: 1) at: 21) to: (result at: 36).
	self addAll: ((nodes at: 1) at: 22) to: (result at: 37).
	self addAll: ((nodes at: 1) at: 23) to: (result at: 38).
	self addAll: ((nodes at: 1) at: 24) to: (result at: 39).
	self addAll: ((nodes at: 1) at: 25) to: (result at: 40).
	self addAll: ((nodes at: 1) at: 26) to: (result at: 41).
	self addAll: ((nodes at: 1) at: 27) to: (result at: 42).
	self addAll: ((nodes at: 1) at: 28) to: (result at: 43).
	self addAll: ((nodes at: 1) at: 29) to: (result at: 44).
	self addAll: ((nodes at: 1) at: 30) to: (result at: 45).
	self addAll: ((nodes at: 1) at: 31) to: (result at: 46).
	self addAll: ((nodes at: 1) at: 32) to: (result at: 47).
	self addAll: ((nodes at: 1) at: 33) to: (result at: 48).
	self addAll: ((nodes at: 1) at: 34) to: (result at: 49).
	self addAll: ((nodes at: 1) at: 35) to: (result at: 50).
	self addAll: ((nodes at: 1) at: 36) to: (result at: 51).
	self addAll: ((nodes at: 1) at: 37) to: (result at: 52).
	self addAll: ((nodes at: 1) at: 38) to: (result at: 53).
	self addAll: ((nodes at: 1) at: 39) to: (result at: 30).
	self addAll: ((nodes at: 1) at: 40) to: (result at: 31).
	self addAll: ((nodes at: 1) at: 41) to: (result at: 18).
	self addAll: ((nodes at: 1) at: 42) to: (result at: 19).
	self addAll: ((nodes at: 1) at: 43) to: (result at: 55).
	self addAll: ((nodes at: 1) at: 44) to: (result at: 54).
	self addAll: ((nodes at: 1) at: 45) to: (result at: 32).
	self addAll: ((nodes at: 1) at: 46) to: (result at: 17).
	self addAll: ((nodes at: 1) at: 47) to: (result at: 56).
	self addAll: ((nodes at: 1) at: 48) to: (result at: 3).
	self addAll: ((nodes at: 1) at: 49) to: (result at: 4).
	self addAll: ((nodes at: 1) at: 50) to: (result at: 5).
	self addAll: ((nodes at: 1) at: 51) to: (result at: 6).
	self addAll: ((nodes at: 1) at: 52) to: (result at: 7).
	self addAll: ((nodes at: 1) at: 53) to: (result at: 8).
	self addAll: ((nodes at: 1) at: 54) to: (result at: 9).
	self addAll: ((nodes at: 1) at: 55) to: (result at: 10).
	self addAll: ((nodes at: 1) at: 56) to: (result at: 11).
	self addAll: ((nodes at: 1) at: 57) to: (result at: 57).
	self addAll: ((nodes at: 1) at: 58) to: (result at: 59).
	self addAll: ((nodes at: 1) at: 59) to: (result at: 60).
	self addAll: ((nodes at: 1) at: 60) to: (result at: 61).
	self addAll: ((nodes at: 1) at: 61) to: (result at: 62).
	self addAll: ((nodes at: 1) at: 62) to: (result at: 63).
	self addAll: ((nodes at: 1) at: 63) to: (result at: 64).
	self addAll: ((nodes at: 1) at: 64) to: (result at: 65).
	self addAll: ((nodes at: 1) at: 65) to: (result at: 66).
	self addAll: ((nodes at: 1) at: 66) to: (result at: 67).
	self addAll: ((nodes at: 1) at: 67) to: (result at: 68).
	self addAll: ((nodes at: 1) at: 68) to: (result at: 69).
	self addAll: ((nodes at: 1) at: 69) to: (result at: 70).
	self addAll: ((nodes at: 1) at: 70) to: (result at: 71).
	self addAll: ((nodes at: 1) at: 71) to: (result at: 72).
	self addAll: ((nodes at: 1) at: 72) to: (result at: 73).
	self addAll: ((nodes at: 1) at: 73) to: (result at: 74).
	self addAll: ((nodes at: 1) at: 74) to: (result at: 75).
	self addAll: ((nodes at: 1) at: 75) to: (result at: 58).
	self addAll: ((nodes at: 1) at: 76) to: (result at: 76).
	self addAll: ((nodes at: 1) at: 77) to: (result at: 77).
	self addAll: ((nodes at: 1) at: 78) to: (result at: 78).
	self addAll: ((nodes at: 1) at: 79) to: (result at: 79).
	self addAll: ((nodes at: 1) at: 80) to: (result at: 80).
	self addAll: ((nodes at: 1) at: 81) to: (result at: 81).
	self addAll: ((nodes at: 1) at: 82) to: (result at: 82).
	self addAll: ((nodes at: 1) at: 83) to: (result at: 83).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFortypeLit4: nodes [
	| result |
	result := Array new: 83.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 7 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 9 put: (OrderedCollection new: 2).
	result at: 10 put: (OrderedCollection new: 2).
	result at: 11 put: (OrderedCollection new: 2).
	result at: 12 put: (OrderedCollection new: 2).
	result at: 13 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 15 put: (OrderedCollection new: 2).
	result at: 16 put: (OrderedCollection new: 2).
	result at: 17 put: (OrderedCollection new: 2).
	result at: 18 put: (OrderedCollection new: 2).
	result at: 19 put: (OrderedCollection new: 2).
	result at: 20 put: (OrderedCollection new: 2).
	result at: 21 put: (OrderedCollection new: 2).
	result at: 22 put: (OrderedCollection new: 2).
	result at: 23 put: (OrderedCollection new: 2).
	result at: 24 put: (OrderedCollection new: 2).
	result at: 25 put: (OrderedCollection new: 2).
	result at: 26 put: (OrderedCollection new: 2).
	result at: 27 put: (OrderedCollection new: 2).
	result at: 28 put: (OrderedCollection new: 2).
	result at: 29 put: (OrderedCollection new: 2).
	result at: 30 put: (OrderedCollection new: 2).
	result at: 31 put: (OrderedCollection new: 2).
	result at: 32 put: (OrderedCollection new: 2).
	result at: 33 put: (OrderedCollection new: 2).
	result at: 34 put: (OrderedCollection new: 2).
	result at: 35 put: (OrderedCollection new: 2).
	result at: 36 put: (OrderedCollection new: 2).
	result at: 37 put: (OrderedCollection new: 2).
	result at: 38 put: (OrderedCollection new: 2).
	result at: 39 put: (OrderedCollection new: 2).
	result at: 40 put: (OrderedCollection new: 2).
	result at: 41 put: (OrderedCollection new: 2).
	result at: 42 put: (OrderedCollection new: 2).
	result at: 43 put: (OrderedCollection new: 2).
	result at: 44 put: (OrderedCollection new: 2).
	result at: 45 put: (OrderedCollection new: 2).
	result at: 46 put: (OrderedCollection new: 2).
	result at: 47 put: (OrderedCollection new: 2).
	result at: 48 put: (OrderedCollection new: 2).
	result at: 49 put: (OrderedCollection new: 2).
	result at: 50 put: (OrderedCollection new: 2).
	result at: 51 put: (OrderedCollection new: 2).
	result at: 52 put: (OrderedCollection new: 2).
	result at: 53 put: (OrderedCollection new: 2).
	result at: 54 put: (OrderedCollection new: 2).
	result at: 55 put: (OrderedCollection new: 2).
	result at: 56 put: (OrderedCollection new: 2).
	result at: 57 put: (OrderedCollection new: 2).
	result at: 58 put: (OrderedCollection new: 2).
	result at: 59 put: (OrderedCollection new: 2).
	result at: 60 put: (OrderedCollection new: 2).
	result at: 61 put: (OrderedCollection new: 2).
	result at: 62 put: (OrderedCollection new: 2).
	result at: 63 put: (OrderedCollection new: 2).
	result at: 64 put: (OrderedCollection new: 2).
	result at: 65 put: (OrderedCollection new: 2).
	result at: 66 put: (OrderedCollection new: 2).
	result at: 67 put: (OrderedCollection new: 2).
	result at: 68 put: (OrderedCollection new: 2).
	result at: 69 put: (OrderedCollection new: 2).
	result at: 70 put: (OrderedCollection new: 2).
	result at: 71 put: (OrderedCollection new: 2).
	result at: 72 put: (OrderedCollection new: 2).
	result at: 73 put: (OrderedCollection new: 2).
	result at: 74 put: (OrderedCollection new: 2).
	result at: 75 put: (OrderedCollection new: 2).
	result at: 76 put: (OrderedCollection new: 2).
	result at: 77 put: (OrderedCollection new: 2).
	result at: 78 put: (OrderedCollection new: 2).
	result at: 79 put: (OrderedCollection new: 2).
	result at: 80 put: (OrderedCollection new: 2).
	result at: 81 put: (OrderedCollection new: 2).
	result at: 82 put: (OrderedCollection new: 2).
	result at: 83 put: (OrderedCollection new: 2).
	self add: ((nodes at: 1) at: 1) to: (result at: 25).
	self add: ((nodes at: 1) at: 2) to: (result at: 30).
	self add: ((nodes at: 1) at: 3) to: (result at: 31).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFortypeLit5: nodes [
	| result |
	result := Array new: 83.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 7 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 9 put: (OrderedCollection new: 2).
	result at: 10 put: (OrderedCollection new: 2).
	result at: 11 put: (OrderedCollection new: 2).
	result at: 12 put: (OrderedCollection new: 2).
	result at: 13 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 15 put: (OrderedCollection new: 2).
	result at: 16 put: (OrderedCollection new: 2).
	result at: 17 put: (OrderedCollection new: 2).
	result at: 18 put: (OrderedCollection new: 2).
	result at: 19 put: (OrderedCollection new: 2).
	result at: 20 put: (OrderedCollection new: 2).
	result at: 21 put: (OrderedCollection new: 2).
	result at: 22 put: (OrderedCollection new: 2).
	result at: 23 put: (OrderedCollection new: 2).
	result at: 24 put: (OrderedCollection new: 2).
	result at: 25 put: (OrderedCollection new: 2).
	result at: 26 put: (OrderedCollection new: 2).
	result at: 27 put: (OrderedCollection new: 2).
	result at: 28 put: (OrderedCollection new: 2).
	result at: 29 put: (OrderedCollection new: 2).
	result at: 30 put: (OrderedCollection new: 2).
	result at: 31 put: (OrderedCollection new: 2).
	result at: 32 put: (OrderedCollection new: 2).
	result at: 33 put: (OrderedCollection new: 2).
	result at: 34 put: (OrderedCollection new: 2).
	result at: 35 put: (OrderedCollection new: 2).
	result at: 36 put: (OrderedCollection new: 2).
	result at: 37 put: (OrderedCollection new: 2).
	result at: 38 put: (OrderedCollection new: 2).
	result at: 39 put: (OrderedCollection new: 2).
	result at: 40 put: (OrderedCollection new: 2).
	result at: 41 put: (OrderedCollection new: 2).
	result at: 42 put: (OrderedCollection new: 2).
	result at: 43 put: (OrderedCollection new: 2).
	result at: 44 put: (OrderedCollection new: 2).
	result at: 45 put: (OrderedCollection new: 2).
	result at: 46 put: (OrderedCollection new: 2).
	result at: 47 put: (OrderedCollection new: 2).
	result at: 48 put: (OrderedCollection new: 2).
	result at: 49 put: (OrderedCollection new: 2).
	result at: 50 put: (OrderedCollection new: 2).
	result at: 51 put: (OrderedCollection new: 2).
	result at: 52 put: (OrderedCollection new: 2).
	result at: 53 put: (OrderedCollection new: 2).
	result at: 54 put: (OrderedCollection new: 2).
	result at: 55 put: (OrderedCollection new: 2).
	result at: 56 put: (OrderedCollection new: 2).
	result at: 57 put: (OrderedCollection new: 2).
	result at: 58 put: (OrderedCollection new: 2).
	result at: 59 put: (OrderedCollection new: 2).
	result at: 60 put: (OrderedCollection new: 2).
	result at: 61 put: (OrderedCollection new: 2).
	result at: 62 put: (OrderedCollection new: 2).
	result at: 63 put: (OrderedCollection new: 2).
	result at: 64 put: (OrderedCollection new: 2).
	result at: 65 put: (OrderedCollection new: 2).
	result at: 66 put: (OrderedCollection new: 2).
	result at: 67 put: (OrderedCollection new: 2).
	result at: 68 put: (OrderedCollection new: 2).
	result at: 69 put: (OrderedCollection new: 2).
	result at: 70 put: (OrderedCollection new: 2).
	result at: 71 put: (OrderedCollection new: 2).
	result at: 72 put: (OrderedCollection new: 2).
	result at: 73 put: (OrderedCollection new: 2).
	result at: 74 put: (OrderedCollection new: 2).
	result at: 75 put: (OrderedCollection new: 2).
	result at: 76 put: (OrderedCollection new: 2).
	result at: 77 put: (OrderedCollection new: 2).
	result at: 78 put: (OrderedCollection new: 2).
	result at: 79 put: (OrderedCollection new: 2).
	result at: 80 put: (OrderedCollection new: 2).
	result at: 81 put: (OrderedCollection new: 2).
	result at: 82 put: (OrderedCollection new: 2).
	result at: 83 put: (OrderedCollection new: 2).
	self addAll: ((nodes at: 1) at: 1) to: (result at: 26).
	self addAll: ((nodes at: 1) at: 2) to: (result at: 13).
	self addAll: ((nodes at: 1) at: 3) to: (result at: 14).
	self addAll: ((nodes at: 1) at: 4) to: (result at: 18).
	self addAll: ((nodes at: 1) at: 5) to: (result at: 19).
	self addAll: ((nodes at: 1) at: 6) to: (result at: 55).
	self addAll: ((nodes at: 1) at: 7) to: (result at: 44).
	self addAll: ((nodes at: 1) at: 8) to: (result at: 15).
	self addAll: ((nodes at: 1) at: 9) to: (result at: 16).
	self addAll: ((nodes at: 1) at: 10) to: (result at: 56).
	self addAll: ((nodes at: 1) at: 11) to: (result at: 20).
	self addAll: ((nodes at: 1) at: 12) to: (result at: 1).
	self addAll: ((nodes at: 1) at: 13) to: (result at: 2).
	self addAll: ((nodes at: 1) at: 14) to: (result at: 21).
	self addAll: ((nodes at: 1) at: 15) to: (result at: 23).
	self addAll: ((nodes at: 1) at: 16) to: (result at: 12).
	self addAll: ((nodes at: 1) at: 17) to: (result at: 24).
	self addAll: ((nodes at: 1) at: 18) to: (result at: 22).
	self addAll: ((nodes at: 1) at: 19) to: (result at: 25).
	self addAll: ((nodes at: 1) at: 20) to: (result at: 27).
	self addAll: ((nodes at: 1) at: 21) to: (result at: 28).
	self addAll: ((nodes at: 1) at: 22) to: (result at: 29).
	self addAll: ((nodes at: 1) at: 23) to: (result at: 30).
	self addAll: ((nodes at: 1) at: 24) to: (result at: 31).
	self addAll: ((nodes at: 1) at: 25) to: (result at: 33).
	self addAll: ((nodes at: 1) at: 26) to: (result at: 34).
	self addAll: ((nodes at: 1) at: 27) to: (result at: 35).
	self addAll: ((nodes at: 1) at: 28) to: (result at: 36).
	self addAll: ((nodes at: 1) at: 29) to: (result at: 37).
	self addAll: ((nodes at: 1) at: 30) to: (result at: 38).
	self addAll: ((nodes at: 1) at: 31) to: (result at: 39).
	self addAll: ((nodes at: 1) at: 32) to: (result at: 40).
	self addAll: ((nodes at: 1) at: 33) to: (result at: 41).
	self addAll: ((nodes at: 1) at: 34) to: (result at: 42).
	self addAll: ((nodes at: 1) at: 35) to: (result at: 43).
	self addAll: ((nodes at: 1) at: 36) to: (result at: 45).
	self addAll: ((nodes at: 1) at: 37) to: (result at: 46).
	self addAll: ((nodes at: 1) at: 38) to: (result at: 47).
	self addAll: ((nodes at: 1) at: 39) to: (result at: 48).
	self addAll: ((nodes at: 1) at: 40) to: (result at: 49).
	self addAll: ((nodes at: 1) at: 41) to: (result at: 50).
	self addAll: ((nodes at: 1) at: 42) to: (result at: 51).
	self addAll: ((nodes at: 1) at: 43) to: (result at: 52).
	self addAll: ((nodes at: 1) at: 44) to: (result at: 53).
	self addAll: ((nodes at: 1) at: 45) to: (result at: 17).
	self addAll: ((nodes at: 1) at: 46) to: (result at: 54).
	self addAll: ((nodes at: 1) at: 47) to: (result at: 32).
	self addAll: ((nodes at: 1) at: 48) to: (result at: 11).
	self addAll: ((nodes at: 1) at: 49) to: (result at: 3).
	self addAll: ((nodes at: 1) at: 50) to: (result at: 4).
	self addAll: ((nodes at: 1) at: 51) to: (result at: 5).
	self addAll: ((nodes at: 1) at: 52) to: (result at: 6).
	self addAll: ((nodes at: 1) at: 53) to: (result at: 7).
	self addAll: ((nodes at: 1) at: 54) to: (result at: 8).
	self addAll: ((nodes at: 1) at: 55) to: (result at: 9).
	self addAll: ((nodes at: 1) at: 56) to: (result at: 10).
	self addAll: ((nodes at: 1) at: 57) to: (result at: 57).
	self addAll: ((nodes at: 1) at: 58) to: (result at: 59).
	self addAll: ((nodes at: 1) at: 59) to: (result at: 60).
	self addAll: ((nodes at: 1) at: 60) to: (result at: 61).
	self addAll: ((nodes at: 1) at: 61) to: (result at: 62).
	self addAll: ((nodes at: 1) at: 62) to: (result at: 63).
	self addAll: ((nodes at: 1) at: 63) to: (result at: 64).
	self addAll: ((nodes at: 1) at: 64) to: (result at: 65).
	self addAll: ((nodes at: 1) at: 65) to: (result at: 66).
	self addAll: ((nodes at: 1) at: 66) to: (result at: 67).
	self addAll: ((nodes at: 1) at: 67) to: (result at: 68).
	self addAll: ((nodes at: 1) at: 68) to: (result at: 69).
	self addAll: ((nodes at: 1) at: 69) to: (result at: 70).
	self addAll: ((nodes at: 1) at: 70) to: (result at: 71).
	self addAll: ((nodes at: 1) at: 71) to: (result at: 72).
	self addAll: ((nodes at: 1) at: 72) to: (result at: 73).
	self addAll: ((nodes at: 1) at: 73) to: (result at: 74).
	self addAll: ((nodes at: 1) at: 74) to: (result at: 75).
	self addAll: ((nodes at: 1) at: 75) to: (result at: 58).
	self addAll: ((nodes at: 1) at: 76) to: (result at: 76).
	self addAll: ((nodes at: 1) at: 77) to: (result at: 77).
	self addAll: ((nodes at: 1) at: 78) to: (result at: 78).
	self addAll: ((nodes at: 1) at: 79) to: (result at: 79).
	self addAll: ((nodes at: 1) at: 80) to: (result at: 80).
	self addAll: ((nodes at: 1) at: 81) to: (result at: 81).
	self addAll: ((nodes at: 1) at: 82) to: (result at: 82).
	self addAll: ((nodes at: 1) at: 83) to: (result at: 83).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFortypeLit6: nodes [
	| result |
	result := Array new: 83.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 7 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 9 put: (OrderedCollection new: 2).
	result at: 10 put: (OrderedCollection new: 2).
	result at: 11 put: (OrderedCollection new: 2).
	result at: 12 put: (OrderedCollection new: 2).
	result at: 13 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 15 put: (OrderedCollection new: 2).
	result at: 16 put: (OrderedCollection new: 2).
	result at: 17 put: (OrderedCollection new: 2).
	result at: 18 put: (OrderedCollection new: 2).
	result at: 19 put: (OrderedCollection new: 2).
	result at: 20 put: (OrderedCollection new: 2).
	result at: 21 put: (OrderedCollection new: 2).
	result at: 22 put: (OrderedCollection new: 2).
	result at: 23 put: (OrderedCollection new: 2).
	result at: 24 put: (OrderedCollection new: 2).
	result at: 25 put: (OrderedCollection new: 2).
	result at: 26 put: (OrderedCollection new: 2).
	result at: 27 put: (OrderedCollection new: 2).
	result at: 28 put: (OrderedCollection new: 2).
	result at: 29 put: (OrderedCollection new: 2).
	result at: 30 put: (OrderedCollection new: 2).
	result at: 31 put: (OrderedCollection new: 2).
	result at: 32 put: (OrderedCollection new: 2).
	result at: 33 put: (OrderedCollection new: 2).
	result at: 34 put: (OrderedCollection new: 2).
	result at: 35 put: (OrderedCollection new: 2).
	result at: 36 put: (OrderedCollection new: 2).
	result at: 37 put: (OrderedCollection new: 2).
	result at: 38 put: (OrderedCollection new: 2).
	result at: 39 put: (OrderedCollection new: 2).
	result at: 40 put: (OrderedCollection new: 2).
	result at: 41 put: (OrderedCollection new: 2).
	result at: 42 put: (OrderedCollection new: 2).
	result at: 43 put: (OrderedCollection new: 2).
	result at: 44 put: (OrderedCollection new: 2).
	result at: 45 put: (OrderedCollection new: 2).
	result at: 46 put: (OrderedCollection new: 2).
	result at: 47 put: (OrderedCollection new: 2).
	result at: 48 put: (OrderedCollection new: 2).
	result at: 49 put: (OrderedCollection new: 2).
	result at: 50 put: (OrderedCollection new: 2).
	result at: 51 put: (OrderedCollection new: 2).
	result at: 52 put: (OrderedCollection new: 2).
	result at: 53 put: (OrderedCollection new: 2).
	result at: 54 put: (OrderedCollection new: 2).
	result at: 55 put: (OrderedCollection new: 2).
	result at: 56 put: (OrderedCollection new: 2).
	result at: 57 put: (OrderedCollection new: 2).
	result at: 58 put: (OrderedCollection new: 2).
	result at: 59 put: (OrderedCollection new: 2).
	result at: 60 put: (OrderedCollection new: 2).
	result at: 61 put: (OrderedCollection new: 2).
	result at: 62 put: (OrderedCollection new: 2).
	result at: 63 put: (OrderedCollection new: 2).
	result at: 64 put: (OrderedCollection new: 2).
	result at: 65 put: (OrderedCollection new: 2).
	result at: 66 put: (OrderedCollection new: 2).
	result at: 67 put: (OrderedCollection new: 2).
	result at: 68 put: (OrderedCollection new: 2).
	result at: 69 put: (OrderedCollection new: 2).
	result at: 70 put: (OrderedCollection new: 2).
	result at: 71 put: (OrderedCollection new: 2).
	result at: 72 put: (OrderedCollection new: 2).
	result at: 73 put: (OrderedCollection new: 2).
	result at: 74 put: (OrderedCollection new: 2).
	result at: 75 put: (OrderedCollection new: 2).
	result at: 76 put: (OrderedCollection new: 2).
	result at: 77 put: (OrderedCollection new: 2).
	result at: 78 put: (OrderedCollection new: 2).
	result at: 79 put: (OrderedCollection new: 2).
	result at: 80 put: (OrderedCollection new: 2).
	result at: 81 put: (OrderedCollection new: 2).
	result at: 82 put: (OrderedCollection new: 2).
	result at: 83 put: (OrderedCollection new: 2).
	self addAll: ((nodes at: 1) at: 1) to: (result at: 1).
	self addAll: ((nodes at: 1) at: 2) to: (result at: 21).
	self addAll: ((nodes at: 1) at: 3) to: (result at: 14).
	self addAll: ((nodes at: 1) at: 4) to: (result at: 23).
	self addAll: ((nodes at: 1) at: 5) to: (result at: 15).
	self addAll: ((nodes at: 1) at: 6) to: (result at: 16).
	self addAll: ((nodes at: 1) at: 7) to: (result at: 20).
	self addAll: ((nodes at: 1) at: 8) to: (result at: 2).
	self addAll: ((nodes at: 1) at: 9) to: (result at: 12).
	self addAll: ((nodes at: 1) at: 10) to: (result at: 13).
	self addAll: ((nodes at: 1) at: 11) to: (result at: 24).
	self addAll: ((nodes at: 1) at: 12) to: (result at: 22).
	self addAll: ((nodes at: 1) at: 13) to: (result at: 25).
	self addAll: ((nodes at: 1) at: 14) to: (result at: 26).
	self addAll: ((nodes at: 1) at: 15) to: (result at: 27).
	self addAll: ((nodes at: 1) at: 16) to: (result at: 28).
	self addAll: ((nodes at: 1) at: 17) to: (result at: 29).
	self addAll: ((nodes at: 1) at: 18) to: (result at: 33).
	self addAll: ((nodes at: 1) at: 19) to: (result at: 34).
	self addAll: ((nodes at: 1) at: 20) to: (result at: 35).
	self addAll: ((nodes at: 1) at: 21) to: (result at: 36).
	self addAll: ((nodes at: 1) at: 22) to: (result at: 37).
	self addAll: ((nodes at: 1) at: 23) to: (result at: 38).
	self addAll: ((nodes at: 1) at: 24) to: (result at: 39).
	self addAll: ((nodes at: 1) at: 25) to: (result at: 40).
	self addAll: ((nodes at: 1) at: 26) to: (result at: 41).
	self addAll: ((nodes at: 1) at: 27) to: (result at: 42).
	self addAll: ((nodes at: 1) at: 28) to: (result at: 43).
	self addAll: ((nodes at: 1) at: 29) to: (result at: 44).
	self addAll: ((nodes at: 1) at: 30) to: (result at: 45).
	self addAll: ((nodes at: 1) at: 31) to: (result at: 46).
	self addAll: ((nodes at: 1) at: 32) to: (result at: 47).
	self addAll: ((nodes at: 1) at: 33) to: (result at: 48).
	self addAll: ((nodes at: 1) at: 34) to: (result at: 49).
	self addAll: ((nodes at: 1) at: 35) to: (result at: 50).
	self addAll: ((nodes at: 1) at: 36) to: (result at: 51).
	self addAll: ((nodes at: 1) at: 37) to: (result at: 52).
	self addAll: ((nodes at: 1) at: 38) to: (result at: 53).
	self addAll: ((nodes at: 1) at: 39) to: (result at: 30).
	self addAll: ((nodes at: 1) at: 40) to: (result at: 31).
	self addAll: ((nodes at: 1) at: 41) to: (result at: 18).
	self addAll: ((nodes at: 1) at: 42) to: (result at: 19).
	self addAll: ((nodes at: 1) at: 43) to: (result at: 55).
	self addAll: ((nodes at: 1) at: 44) to: (result at: 54).
	self addAll: ((nodes at: 1) at: 45) to: (result at: 32).
	self addAll: ((nodes at: 1) at: 46) to: (result at: 17).
	self addAll: ((nodes at: 1) at: 47) to: (result at: 56).
	self addAll: ((nodes at: 1) at: 48) to: (result at: 3).
	self addAll: ((nodes at: 1) at: 49) to: (result at: 4).
	self addAll: ((nodes at: 1) at: 50) to: (result at: 5).
	self addAll: ((nodes at: 1) at: 51) to: (result at: 6).
	self addAll: ((nodes at: 1) at: 52) to: (result at: 7).
	self addAll: ((nodes at: 1) at: 53) to: (result at: 8).
	self addAll: ((nodes at: 1) at: 54) to: (result at: 9).
	self addAll: ((nodes at: 1) at: 55) to: (result at: 10).
	self addAll: ((nodes at: 1) at: 56) to: (result at: 11).
	self addAll: ((nodes at: 1) at: 57) to: (result at: 57).
	self addAll: ((nodes at: 1) at: 58) to: (result at: 59).
	self addAll: ((nodes at: 1) at: 59) to: (result at: 60).
	self addAll: ((nodes at: 1) at: 60) to: (result at: 61).
	self addAll: ((nodes at: 1) at: 61) to: (result at: 62).
	self addAll: ((nodes at: 1) at: 62) to: (result at: 63).
	self addAll: ((nodes at: 1) at: 63) to: (result at: 64).
	self addAll: ((nodes at: 1) at: 64) to: (result at: 65).
	self addAll: ((nodes at: 1) at: 65) to: (result at: 66).
	self addAll: ((nodes at: 1) at: 66) to: (result at: 67).
	self addAll: ((nodes at: 1) at: 67) to: (result at: 68).
	self addAll: ((nodes at: 1) at: 68) to: (result at: 69).
	self addAll: ((nodes at: 1) at: 69) to: (result at: 70).
	self addAll: ((nodes at: 1) at: 70) to: (result at: 71).
	self addAll: ((nodes at: 1) at: 71) to: (result at: 72).
	self addAll: ((nodes at: 1) at: 72) to: (result at: 73).
	self addAll: ((nodes at: 1) at: 73) to: (result at: 74).
	self addAll: ((nodes at: 1) at: 74) to: (result at: 75).
	self addAll: ((nodes at: 1) at: 75) to: (result at: 58).
	self addAll: ((nodes at: 1) at: 76) to: (result at: 76).
	self addAll: ((nodes at: 1) at: 77) to: (result at: 77).
	self addAll: ((nodes at: 1) at: 78) to: (result at: 78).
	self addAll: ((nodes at: 1) at: 79) to: (result at: 79).
	self addAll: ((nodes at: 1) at: 80) to: (result at: 80).
	self addAll: ((nodes at: 1) at: 81) to: (result at: 81).
	self addAll: ((nodes at: 1) at: 82) to: (result at: 82).
	self addAll: ((nodes at: 1) at: 83) to: (result at: 83).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFortypeLit7: nodes [
	| result |
	result := Array new: 83.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 7 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 9 put: (OrderedCollection new: 2).
	result at: 10 put: (OrderedCollection new: 2).
	result at: 11 put: (OrderedCollection new: 2).
	result at: 12 put: (OrderedCollection new: 2).
	result at: 13 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 15 put: (OrderedCollection new: 2).
	result at: 16 put: (OrderedCollection new: 2).
	result at: 17 put: (OrderedCollection new: 2).
	result at: 18 put: (OrderedCollection new: 2).
	result at: 19 put: (OrderedCollection new: 2).
	result at: 20 put: (OrderedCollection new: 2).
	result at: 21 put: (OrderedCollection new: 2).
	result at: 22 put: (OrderedCollection new: 2).
	result at: 23 put: (OrderedCollection new: 2).
	result at: 24 put: (OrderedCollection new: 2).
	result at: 25 put: (OrderedCollection new: 2).
	result at: 26 put: (OrderedCollection new: 2).
	result at: 27 put: (OrderedCollection new: 2).
	result at: 28 put: (OrderedCollection new: 2).
	result at: 29 put: (OrderedCollection new: 2).
	result at: 30 put: (OrderedCollection new: 2).
	result at: 31 put: (OrderedCollection new: 2).
	result at: 32 put: (OrderedCollection new: 2).
	result at: 33 put: (OrderedCollection new: 2).
	result at: 34 put: (OrderedCollection new: 2).
	result at: 35 put: (OrderedCollection new: 2).
	result at: 36 put: (OrderedCollection new: 2).
	result at: 37 put: (OrderedCollection new: 2).
	result at: 38 put: (OrderedCollection new: 2).
	result at: 39 put: (OrderedCollection new: 2).
	result at: 40 put: (OrderedCollection new: 2).
	result at: 41 put: (OrderedCollection new: 2).
	result at: 42 put: (OrderedCollection new: 2).
	result at: 43 put: (OrderedCollection new: 2).
	result at: 44 put: (OrderedCollection new: 2).
	result at: 45 put: (OrderedCollection new: 2).
	result at: 46 put: (OrderedCollection new: 2).
	result at: 47 put: (OrderedCollection new: 2).
	result at: 48 put: (OrderedCollection new: 2).
	result at: 49 put: (OrderedCollection new: 2).
	result at: 50 put: (OrderedCollection new: 2).
	result at: 51 put: (OrderedCollection new: 2).
	result at: 52 put: (OrderedCollection new: 2).
	result at: 53 put: (OrderedCollection new: 2).
	result at: 54 put: (OrderedCollection new: 2).
	result at: 55 put: (OrderedCollection new: 2).
	result at: 56 put: (OrderedCollection new: 2).
	result at: 57 put: (OrderedCollection new: 2).
	result at: 58 put: (OrderedCollection new: 2).
	result at: 59 put: (OrderedCollection new: 2).
	result at: 60 put: (OrderedCollection new: 2).
	result at: 61 put: (OrderedCollection new: 2).
	result at: 62 put: (OrderedCollection new: 2).
	result at: 63 put: (OrderedCollection new: 2).
	result at: 64 put: (OrderedCollection new: 2).
	result at: 65 put: (OrderedCollection new: 2).
	result at: 66 put: (OrderedCollection new: 2).
	result at: 67 put: (OrderedCollection new: 2).
	result at: 68 put: (OrderedCollection new: 2).
	result at: 69 put: (OrderedCollection new: 2).
	result at: 70 put: (OrderedCollection new: 2).
	result at: 71 put: (OrderedCollection new: 2).
	result at: 72 put: (OrderedCollection new: 2).
	result at: 73 put: (OrderedCollection new: 2).
	result at: 74 put: (OrderedCollection new: 2).
	result at: 75 put: (OrderedCollection new: 2).
	result at: 76 put: (OrderedCollection new: 2).
	result at: 77 put: (OrderedCollection new: 2).
	result at: 78 put: (OrderedCollection new: 2).
	result at: 79 put: (OrderedCollection new: 2).
	result at: 80 put: (OrderedCollection new: 2).
	result at: 81 put: (OrderedCollection new: 2).
	result at: 82 put: (OrderedCollection new: 2).
	result at: 83 put: (OrderedCollection new: 2).
	self addAll: ((nodes at: 1) at: 1) to: (result at: 27).
	self addAll: ((nodes at: 1) at: 2) to: (result at: 1).
	self addAll: ((nodes at: 1) at: 3) to: (result at: 14).
	self addAll: ((nodes at: 1) at: 4) to: (result at: 23).
	self addAll: ((nodes at: 1) at: 5) to: (result at: 2).
	self addAll: ((nodes at: 1) at: 6) to: (result at: 21).
	self addAll: ((nodes at: 1) at: 7) to: (result at: 20).
	self addAll: ((nodes at: 1) at: 8) to: (result at: 15).
	self addAll: ((nodes at: 1) at: 9) to: (result at: 16).
	self addAll: ((nodes at: 1) at: 10) to: (result at: 12).
	self addAll: ((nodes at: 1) at: 11) to: (result at: 13).
	self addAll: ((nodes at: 1) at: 12) to: (result at: 24).
	self addAll: ((nodes at: 1) at: 13) to: (result at: 22).
	self addAll: ((nodes at: 1) at: 14) to: (result at: 25).
	self addAll: ((nodes at: 1) at: 15) to: (result at: 30).
	self addAll: ((nodes at: 1) at: 16) to: (result at: 31).
	self addAll: ((nodes at: 1) at: 17) to: (result at: 26).
	self addAll: ((nodes at: 1) at: 18) to: (result at: 28).
	self addAll: ((nodes at: 1) at: 19) to: (result at: 29).
	self addAll: ((nodes at: 1) at: 20) to: (result at: 33).
	self addAll: ((nodes at: 1) at: 21) to: (result at: 34).
	self addAll: ((nodes at: 1) at: 22) to: (result at: 35).
	self addAll: ((nodes at: 1) at: 23) to: (result at: 36).
	self addAll: ((nodes at: 1) at: 24) to: (result at: 37).
	self addAll: ((nodes at: 1) at: 25) to: (result at: 38).
	self addAll: ((nodes at: 1) at: 26) to: (result at: 39).
	self addAll: ((nodes at: 1) at: 27) to: (result at: 40).
	self addAll: ((nodes at: 1) at: 28) to: (result at: 41).
	self addAll: ((nodes at: 1) at: 29) to: (result at: 42).
	self addAll: ((nodes at: 1) at: 30) to: (result at: 43).
	self addAll: ((nodes at: 1) at: 31) to: (result at: 44).
	self addAll: ((nodes at: 1) at: 32) to: (result at: 45).
	self addAll: ((nodes at: 1) at: 33) to: (result at: 46).
	self addAll: ((nodes at: 1) at: 34) to: (result at: 47).
	self addAll: ((nodes at: 1) at: 35) to: (result at: 48).
	self addAll: ((nodes at: 1) at: 36) to: (result at: 49).
	self addAll: ((nodes at: 1) at: 37) to: (result at: 50).
	self addAll: ((nodes at: 1) at: 38) to: (result at: 51).
	self addAll: ((nodes at: 1) at: 39) to: (result at: 52).
	self addAll: ((nodes at: 1) at: 40) to: (result at: 53).
	self addAll: ((nodes at: 1) at: 41) to: (result at: 17).
	self addAll: ((nodes at: 1) at: 42) to: (result at: 18).
	self addAll: ((nodes at: 1) at: 43) to: (result at: 19).
	self addAll: ((nodes at: 1) at: 44) to: (result at: 55).
	self addAll: ((nodes at: 1) at: 45) to: (result at: 56).
	self addAll: ((nodes at: 1) at: 46) to: (result at: 11).
	self addAll: ((nodes at: 1) at: 47) to: (result at: 54).
	self addAll: ((nodes at: 1) at: 48) to: (result at: 32).
	self addAll: ((nodes at: 1) at: 49) to: (result at: 3).
	self addAll: ((nodes at: 1) at: 50) to: (result at: 4).
	self addAll: ((nodes at: 1) at: 51) to: (result at: 5).
	self addAll: ((nodes at: 1) at: 52) to: (result at: 6).
	self addAll: ((nodes at: 1) at: 53) to: (result at: 7).
	self addAll: ((nodes at: 1) at: 54) to: (result at: 8).
	self addAll: ((nodes at: 1) at: 55) to: (result at: 9).
	self addAll: ((nodes at: 1) at: 56) to: (result at: 10).
	self addAll: ((nodes at: 1) at: 57) to: (result at: 57).
	self addAll: ((nodes at: 1) at: 58) to: (result at: 58).
	self addAll: ((nodes at: 1) at: 59) to: (result at: 59).
	self addAll: ((nodes at: 1) at: 60) to: (result at: 60).
	self addAll: ((nodes at: 1) at: 61) to: (result at: 61).
	self addAll: ((nodes at: 1) at: 62) to: (result at: 62).
	self addAll: ((nodes at: 1) at: 63) to: (result at: 63).
	self addAll: ((nodes at: 1) at: 64) to: (result at: 64).
	self addAll: ((nodes at: 1) at: 65) to: (result at: 65).
	self addAll: ((nodes at: 1) at: 66) to: (result at: 66).
	self addAll: ((nodes at: 1) at: 67) to: (result at: 67).
	self addAll: ((nodes at: 1) at: 68) to: (result at: 68).
	self addAll: ((nodes at: 1) at: 69) to: (result at: 69).
	self addAll: ((nodes at: 1) at: 70) to: (result at: 70).
	self addAll: ((nodes at: 1) at: 71) to: (result at: 71).
	self addAll: ((nodes at: 1) at: 72) to: (result at: 72).
	self addAll: ((nodes at: 1) at: 73) to: (result at: 73).
	self addAll: ((nodes at: 1) at: 74) to: (result at: 74).
	self addAll: ((nodes at: 1) at: 75) to: (result at: 75).
	self addAll: ((nodes at: 1) at: 76) to: (result at: 76).
	self addAll: ((nodes at: 1) at: 77) to: (result at: 77).
	self addAll: ((nodes at: 1) at: 78) to: (result at: 78).
	self addAll: ((nodes at: 1) at: 79) to: (result at: 79).
	self addAll: ((nodes at: 1) at: 80) to: (result at: 80).
	self addAll: ((nodes at: 1) at: 81) to: (result at: 81).
	self addAll: ((nodes at: 1) at: 82) to: (result at: 82).
	self addAll: ((nodes at: 1) at: 83) to: (result at: 83).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFortypeLit8: nodes [
	| result |
	result := Array new: 83.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 7 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 9 put: (OrderedCollection new: 2).
	result at: 10 put: (OrderedCollection new: 2).
	result at: 11 put: (OrderedCollection new: 2).
	result at: 12 put: (OrderedCollection new: 2).
	result at: 13 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 15 put: (OrderedCollection new: 2).
	result at: 16 put: (OrderedCollection new: 2).
	result at: 17 put: (OrderedCollection new: 2).
	result at: 18 put: (OrderedCollection new: 2).
	result at: 19 put: (OrderedCollection new: 2).
	result at: 20 put: (OrderedCollection new: 2).
	result at: 21 put: (OrderedCollection new: 2).
	result at: 22 put: (OrderedCollection new: 2).
	result at: 23 put: (OrderedCollection new: 2).
	result at: 24 put: (OrderedCollection new: 2).
	result at: 25 put: (OrderedCollection new: 2).
	result at: 26 put: (OrderedCollection new: 2).
	result at: 27 put: (OrderedCollection new: 2).
	result at: 28 put: (OrderedCollection new: 2).
	result at: 29 put: (OrderedCollection new: 2).
	result at: 30 put: (OrderedCollection new: 2).
	result at: 31 put: (OrderedCollection new: 2).
	result at: 32 put: (OrderedCollection new: 2).
	result at: 33 put: (OrderedCollection new: 2).
	result at: 34 put: (OrderedCollection new: 2).
	result at: 35 put: (OrderedCollection new: 2).
	result at: 36 put: (OrderedCollection new: 2).
	result at: 37 put: (OrderedCollection new: 2).
	result at: 38 put: (OrderedCollection new: 2).
	result at: 39 put: (OrderedCollection new: 2).
	result at: 40 put: (OrderedCollection new: 2).
	result at: 41 put: (OrderedCollection new: 2).
	result at: 42 put: (OrderedCollection new: 2).
	result at: 43 put: (OrderedCollection new: 2).
	result at: 44 put: (OrderedCollection new: 2).
	result at: 45 put: (OrderedCollection new: 2).
	result at: 46 put: (OrderedCollection new: 2).
	result at: 47 put: (OrderedCollection new: 2).
	result at: 48 put: (OrderedCollection new: 2).
	result at: 49 put: (OrderedCollection new: 2).
	result at: 50 put: (OrderedCollection new: 2).
	result at: 51 put: (OrderedCollection new: 2).
	result at: 52 put: (OrderedCollection new: 2).
	result at: 53 put: (OrderedCollection new: 2).
	result at: 54 put: (OrderedCollection new: 2).
	result at: 55 put: (OrderedCollection new: 2).
	result at: 56 put: (OrderedCollection new: 2).
	result at: 57 put: (OrderedCollection new: 2).
	result at: 58 put: (OrderedCollection new: 2).
	result at: 59 put: (OrderedCollection new: 2).
	result at: 60 put: (OrderedCollection new: 2).
	result at: 61 put: (OrderedCollection new: 2).
	result at: 62 put: (OrderedCollection new: 2).
	result at: 63 put: (OrderedCollection new: 2).
	result at: 64 put: (OrderedCollection new: 2).
	result at: 65 put: (OrderedCollection new: 2).
	result at: 66 put: (OrderedCollection new: 2).
	result at: 67 put: (OrderedCollection new: 2).
	result at: 68 put: (OrderedCollection new: 2).
	result at: 69 put: (OrderedCollection new: 2).
	result at: 70 put: (OrderedCollection new: 2).
	result at: 71 put: (OrderedCollection new: 2).
	result at: 72 put: (OrderedCollection new: 2).
	result at: 73 put: (OrderedCollection new: 2).
	result at: 74 put: (OrderedCollection new: 2).
	result at: 75 put: (OrderedCollection new: 2).
	result at: 76 put: (OrderedCollection new: 2).
	result at: 77 put: (OrderedCollection new: 2).
	result at: 78 put: (OrderedCollection new: 2).
	result at: 79 put: (OrderedCollection new: 2).
	result at: 80 put: (OrderedCollection new: 2).
	result at: 81 put: (OrderedCollection new: 2).
	result at: 82 put: (OrderedCollection new: 2).
	result at: 83 put: (OrderedCollection new: 2).
	self addAll: ((nodes at: 1) at: 1) to: (result at: 28).
	self addAll: ((nodes at: 1) at: 2) to: (result at: 14).
	self addAll: ((nodes at: 1) at: 3) to: (result at: 23).
	self addAll: ((nodes at: 1) at: 4) to: (result at: 1).
	self addAll: ((nodes at: 1) at: 5) to: (result at: 15).
	self addAll: ((nodes at: 1) at: 6) to: (result at: 16).
	self addAll: ((nodes at: 1) at: 7) to: (result at: 20).
	self addAll: ((nodes at: 1) at: 8) to: (result at: 2).
	self addAll: ((nodes at: 1) at: 9) to: (result at: 21).
	self addAll: ((nodes at: 1) at: 10) to: (result at: 12).
	self addAll: ((nodes at: 1) at: 11) to: (result at: 13).
	self addAll: ((nodes at: 1) at: 12) to: (result at: 24).
	self addAll: ((nodes at: 1) at: 13) to: (result at: 22).
	self addAll: ((nodes at: 1) at: 14) to: (result at: 25).
	self addAll: ((nodes at: 1) at: 15) to: (result at: 26).
	self addAll: ((nodes at: 1) at: 16) to: (result at: 27).
	self addAll: ((nodes at: 1) at: 17) to: (result at: 29).
	self addAll: ((nodes at: 1) at: 18) to: (result at: 33).
	self addAll: ((nodes at: 1) at: 19) to: (result at: 34).
	self addAll: ((nodes at: 1) at: 20) to: (result at: 35).
	self addAll: ((nodes at: 1) at: 21) to: (result at: 36).
	self addAll: ((nodes at: 1) at: 22) to: (result at: 37).
	self addAll: ((nodes at: 1) at: 23) to: (result at: 38).
	self addAll: ((nodes at: 1) at: 24) to: (result at: 39).
	self addAll: ((nodes at: 1) at: 25) to: (result at: 40).
	self addAll: ((nodes at: 1) at: 26) to: (result at: 41).
	self addAll: ((nodes at: 1) at: 27) to: (result at: 42).
	self addAll: ((nodes at: 1) at: 28) to: (result at: 43).
	self addAll: ((nodes at: 1) at: 29) to: (result at: 44).
	self addAll: ((nodes at: 1) at: 30) to: (result at: 45).
	self addAll: ((nodes at: 1) at: 31) to: (result at: 46).
	self addAll: ((nodes at: 1) at: 32) to: (result at: 47).
	self addAll: ((nodes at: 1) at: 33) to: (result at: 48).
	self addAll: ((nodes at: 1) at: 34) to: (result at: 49).
	self addAll: ((nodes at: 1) at: 35) to: (result at: 50).
	self addAll: ((nodes at: 1) at: 36) to: (result at: 51).
	self addAll: ((nodes at: 1) at: 37) to: (result at: 52).
	self addAll: ((nodes at: 1) at: 38) to: (result at: 53).
	self addAll: ((nodes at: 1) at: 39) to: (result at: 30).
	self addAll: ((nodes at: 1) at: 40) to: (result at: 31).
	self addAll: ((nodes at: 1) at: 41) to: (result at: 18).
	self addAll: ((nodes at: 1) at: 42) to: (result at: 19).
	self addAll: ((nodes at: 1) at: 43) to: (result at: 55).
	self addAll: ((nodes at: 1) at: 44) to: (result at: 54).
	self addAll: ((nodes at: 1) at: 45) to: (result at: 32).
	self addAll: ((nodes at: 1) at: 46) to: (result at: 17).
	self addAll: ((nodes at: 1) at: 47) to: (result at: 56).
	self addAll: ((nodes at: 1) at: 48) to: (result at: 3).
	self addAll: ((nodes at: 1) at: 49) to: (result at: 4).
	self addAll: ((nodes at: 1) at: 50) to: (result at: 5).
	self addAll: ((nodes at: 1) at: 51) to: (result at: 6).
	self addAll: ((nodes at: 1) at: 52) to: (result at: 7).
	self addAll: ((nodes at: 1) at: 53) to: (result at: 8).
	self addAll: ((nodes at: 1) at: 54) to: (result at: 9).
	self addAll: ((nodes at: 1) at: 55) to: (result at: 10).
	self addAll: ((nodes at: 1) at: 56) to: (result at: 11).
	self addAll: ((nodes at: 1) at: 57) to: (result at: 57).
	self addAll: ((nodes at: 1) at: 58) to: (result at: 59).
	self addAll: ((nodes at: 1) at: 59) to: (result at: 60).
	self addAll: ((nodes at: 1) at: 60) to: (result at: 61).
	self addAll: ((nodes at: 1) at: 61) to: (result at: 62).
	self addAll: ((nodes at: 1) at: 62) to: (result at: 63).
	self addAll: ((nodes at: 1) at: 63) to: (result at: 64).
	self addAll: ((nodes at: 1) at: 64) to: (result at: 65).
	self addAll: ((nodes at: 1) at: 65) to: (result at: 66).
	self addAll: ((nodes at: 1) at: 66) to: (result at: 67).
	self addAll: ((nodes at: 1) at: 67) to: (result at: 68).
	self addAll: ((nodes at: 1) at: 68) to: (result at: 69).
	self addAll: ((nodes at: 1) at: 69) to: (result at: 70).
	self addAll: ((nodes at: 1) at: 70) to: (result at: 71).
	self addAll: ((nodes at: 1) at: 71) to: (result at: 72).
	self addAll: ((nodes at: 1) at: 72) to: (result at: 73).
	self addAll: ((nodes at: 1) at: 73) to: (result at: 74).
	self addAll: ((nodes at: 1) at: 74) to: (result at: 75).
	self addAll: ((nodes at: 1) at: 75) to: (result at: 58).
	self addAll: ((nodes at: 1) at: 76) to: (result at: 76).
	self addAll: ((nodes at: 1) at: 77) to: (result at: 77).
	self addAll: ((nodes at: 1) at: 78) to: (result at: 78).
	self addAll: ((nodes at: 1) at: 79) to: (result at: 79).
	self addAll: ((nodes at: 1) at: 80) to: (result at: 80).
	self addAll: ((nodes at: 1) at: 81) to: (result at: 81).
	self addAll: ((nodes at: 1) at: 82) to: (result at: 82).
	self addAll: ((nodes at: 1) at: 83) to: (result at: 83).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFortypeName2: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	self add: (nodes at: 1) to: (result at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFortypeSpec1: nodes [
	| result |
	result := nodes at: 1.
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFortypeSpec2: nodes [
	| result |
	result := Array new: 83.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 7 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 9 put: (OrderedCollection new: 2).
	result at: 10 put: (OrderedCollection new: 2).
	result at: 11 put: (OrderedCollection new: 2).
	result at: 12 put: (OrderedCollection new: 2).
	result at: 13 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 15 put: (OrderedCollection new: 2).
	result at: 16 put: (OrderedCollection new: 2).
	result at: 17 put: (OrderedCollection new: 2).
	result at: 18 put: (OrderedCollection new: 2).
	result at: 19 put: (OrderedCollection new: 2).
	result at: 20 put: (OrderedCollection new: 2).
	result at: 21 put: (OrderedCollection new: 2).
	result at: 22 put: (OrderedCollection new: 2).
	result at: 23 put: (OrderedCollection new: 2).
	result at: 24 put: (OrderedCollection new: 2).
	result at: 25 put: (OrderedCollection new: 2).
	result at: 26 put: (OrderedCollection new: 2).
	result at: 27 put: (OrderedCollection new: 2).
	result at: 28 put: (OrderedCollection new: 2).
	result at: 29 put: (OrderedCollection new: 2).
	result at: 30 put: (OrderedCollection new: 2).
	result at: 31 put: (OrderedCollection new: 2).
	result at: 32 put: (OrderedCollection new: 2).
	result at: 33 put: (OrderedCollection new: 2).
	result at: 34 put: (OrderedCollection new: 2).
	result at: 35 put: (OrderedCollection new: 2).
	result at: 36 put: (OrderedCollection new: 2).
	result at: 37 put: (OrderedCollection new: 2).
	result at: 38 put: (OrderedCollection new: 2).
	result at: 39 put: (OrderedCollection new: 2).
	result at: 40 put: (OrderedCollection new: 2).
	result at: 41 put: (OrderedCollection new: 2).
	result at: 42 put: (OrderedCollection new: 2).
	result at: 43 put: (OrderedCollection new: 2).
	result at: 44 put: (OrderedCollection new: 2).
	result at: 45 put: (OrderedCollection new: 2).
	result at: 46 put: (OrderedCollection new: 2).
	result at: 47 put: (OrderedCollection new: 2).
	result at: 48 put: (OrderedCollection new: 2).
	result at: 49 put: (OrderedCollection new: 2).
	result at: 50 put: (OrderedCollection new: 2).
	result at: 51 put: (OrderedCollection new: 2).
	result at: 52 put: (OrderedCollection new: 2).
	result at: 53 put: (OrderedCollection new: 2).
	result at: 54 put: (OrderedCollection new: 2).
	result at: 55 put: (OrderedCollection new: 2).
	result at: 56 put: (OrderedCollection new: 2).
	result at: 57 put: (OrderedCollection new: 2).
	result at: 58 put: (OrderedCollection new: 2).
	result at: 59 put: (OrderedCollection new: 2).
	result at: 60 put: (OrderedCollection new: 2).
	result at: 61 put: (OrderedCollection new: 2).
	result at: 62 put: (OrderedCollection new: 2).
	result at: 63 put: (OrderedCollection new: 2).
	result at: 64 put: (OrderedCollection new: 2).
	result at: 65 put: (OrderedCollection new: 2).
	result at: 66 put: (OrderedCollection new: 2).
	result at: 67 put: (OrderedCollection new: 2).
	result at: 68 put: (OrderedCollection new: 2).
	result at: 69 put: (OrderedCollection new: 2).
	result at: 70 put: (OrderedCollection new: 2).
	result at: 71 put: (OrderedCollection new: 2).
	result at: 72 put: (OrderedCollection new: 2).
	result at: 73 put: (OrderedCollection new: 2).
	result at: 74 put: (OrderedCollection new: 2).
	result at: 75 put: (OrderedCollection new: 2).
	result at: 76 put: (OrderedCollection new: 2).
	result at: 77 put: (OrderedCollection new: 2).
	result at: 78 put: (OrderedCollection new: 2).
	result at: 79 put: (OrderedCollection new: 2).
	result at: 80 put: (OrderedCollection new: 2).
	result at: 81 put: (OrderedCollection new: 2).
	result at: 82 put: (OrderedCollection new: 2).
	result at: 83 put: (OrderedCollection new: 2).
	self addAll: ((nodes at: 1) at: 1) to: (result at: 1).
	self addAll: ((nodes at: 1) at: 2) to: (result at: 3).
	self addAll: ((nodes at: 1) at: 3) to: (result at: 4).
	self addAll: ((nodes at: 1) at: 4) to: (result at: 5).
	self addAll: ((nodes at: 1) at: 5) to: (result at: 6).
	self addAll: ((nodes at: 1) at: 6) to: (result at: 7).
	self addAll: ((nodes at: 1) at: 7) to: (result at: 8).
	self addAll: ((nodes at: 1) at: 8) to: (result at: 9).
	self addAll: ((nodes at: 1) at: 9) to: (result at: 10).
	self addAll: ((nodes at: 1) at: 10) to: (result at: 11).
	self addAll: ((nodes at: 1) at: 11) to: (result at: 12).
	self addAll: ((nodes at: 1) at: 12) to: (result at: 13).
	self addAll: ((nodes at: 1) at: 13) to: (result at: 14).
	self addAll: ((nodes at: 1) at: 14) to: (result at: 15).
	self addAll: ((nodes at: 1) at: 15) to: (result at: 16).
	self addAll: ((nodes at: 1) at: 16) to: (result at: 17).
	self addAll: ((nodes at: 1) at: 17) to: (result at: 18).
	self addAll: ((nodes at: 1) at: 18) to: (result at: 19).
	self addAll: ((nodes at: 1) at: 19) to: (result at: 20).
	self addAll: ((nodes at: 1) at: 20) to: (result at: 21).
	self addAll: ((nodes at: 1) at: 21) to: (result at: 22).
	self addAll: ((nodes at: 1) at: 22) to: (result at: 23).
	self addAll: ((nodes at: 1) at: 23) to: (result at: 24).
	self addAll: ((nodes at: 1) at: 24) to: (result at: 25).
	self addAll: ((nodes at: 1) at: 25) to: (result at: 26).
	self addAll: ((nodes at: 1) at: 26) to: (result at: 27).
	self addAll: ((nodes at: 1) at: 27) to: (result at: 28).
	self addAll: ((nodes at: 1) at: 28) to: (result at: 29).
	self addAll: ((nodes at: 1) at: 29) to: (result at: 30).
	self addAll: ((nodes at: 1) at: 30) to: (result at: 31).
	self addAll: ((nodes at: 1) at: 31) to: (result at: 32).
	self addAll: ((nodes at: 1) at: 32) to: (result at: 33).
	self addAll: ((nodes at: 1) at: 33) to: (result at: 34).
	self addAll: ((nodes at: 1) at: 34) to: (result at: 35).
	self addAll: ((nodes at: 1) at: 35) to: (result at: 36).
	self addAll: ((nodes at: 1) at: 36) to: (result at: 37).
	self addAll: ((nodes at: 1) at: 37) to: (result at: 38).
	self addAll: ((nodes at: 1) at: 38) to: (result at: 39).
	self addAll: ((nodes at: 1) at: 39) to: (result at: 40).
	self addAll: ((nodes at: 1) at: 40) to: (result at: 41).
	self addAll: ((nodes at: 1) at: 41) to: (result at: 42).
	self addAll: ((nodes at: 1) at: 42) to: (result at: 43).
	self addAll: ((nodes at: 1) at: 43) to: (result at: 44).
	self addAll: ((nodes at: 1) at: 44) to: (result at: 45).
	self addAll: ((nodes at: 1) at: 45) to: (result at: 46).
	self addAll: ((nodes at: 1) at: 46) to: (result at: 47).
	self addAll: ((nodes at: 1) at: 47) to: (result at: 48).
	self addAll: ((nodes at: 1) at: 48) to: (result at: 49).
	self addAll: ((nodes at: 1) at: 49) to: (result at: 50).
	self addAll: ((nodes at: 1) at: 50) to: (result at: 51).
	self addAll: ((nodes at: 1) at: 51) to: (result at: 52).
	self addAll: ((nodes at: 1) at: 52) to: (result at: 53).
	self addAll: ((nodes at: 1) at: 53) to: (result at: 54).
	self addAll: ((nodes at: 1) at: 54) to: (result at: 55).
	self addAll: ((nodes at: 1) at: 55) to: (result at: 56).
	self addAll: ((nodes at: 1) at: 56) to: (result at: 57).
	self addAll: ((nodes at: 1) at: 57) to: (result at: 58).
	self addAll: ((nodes at: 1) at: 58) to: (result at: 59).
	self addAll: ((nodes at: 1) at: 59) to: (result at: 60).
	self addAll: ((nodes at: 1) at: 60) to: (result at: 61).
	self addAll: ((nodes at: 1) at: 61) to: (result at: 62).
	self addAll: ((nodes at: 1) at: 62) to: (result at: 63).
	self addAll: ((nodes at: 1) at: 63) to: (result at: 64).
	self addAll: ((nodes at: 1) at: 64) to: (result at: 65).
	self addAll: ((nodes at: 1) at: 65) to: (result at: 66).
	self addAll: ((nodes at: 1) at: 66) to: (result at: 67).
	self addAll: ((nodes at: 1) at: 67) to: (result at: 68).
	self addAll: ((nodes at: 1) at: 68) to: (result at: 69).
	self addAll: ((nodes at: 1) at: 69) to: (result at: 70).
	self addAll: ((nodes at: 1) at: 70) to: (result at: 71).
	self addAll: ((nodes at: 1) at: 71) to: (result at: 72).
	self addAll: ((nodes at: 1) at: 72) to: (result at: 73).
	self addAll: ((nodes at: 1) at: 73) to: (result at: 74).
	self addAll: ((nodes at: 1) at: 74) to: (result at: 75).
	self addAll: ((nodes at: 1) at: 75) to: (result at: 2).
	self addAll: ((nodes at: 1) at: 76) to: (result at: 76).
	self addAll: ((nodes at: 1) at: 77) to: (result at: 77).
	self addAll: ((nodes at: 1) at: 78) to: (result at: 78).
	self addAll: ((nodes at: 1) at: 79) to: (result at: 79).
	self addAll: ((nodes at: 1) at: 80) to: (result at: 80).
	self addAll: ((nodes at: 1) at: 81) to: (result at: 81).
	self addAll: ((nodes at: 1) at: 82) to: (result at: 82).
	self addAll: ((nodes at: 1) at: 83) to: (result at: 83).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFortype_1: nodes [
	| result |
	result := Array new: 83.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 7 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 9 put: (OrderedCollection new: 2).
	result at: 10 put: (OrderedCollection new: 2).
	result at: 11 put: (OrderedCollection new: 2).
	result at: 12 put: (OrderedCollection new: 2).
	result at: 13 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 15 put: (OrderedCollection new: 2).
	result at: 16 put: (OrderedCollection new: 2).
	result at: 17 put: (OrderedCollection new: 2).
	result at: 18 put: (OrderedCollection new: 2).
	result at: 19 put: (OrderedCollection new: 2).
	result at: 20 put: (OrderedCollection new: 2).
	result at: 21 put: (OrderedCollection new: 2).
	result at: 22 put: (OrderedCollection new: 2).
	result at: 23 put: (OrderedCollection new: 2).
	result at: 24 put: (OrderedCollection new: 2).
	result at: 25 put: (OrderedCollection new: 2).
	result at: 26 put: (OrderedCollection new: 2).
	result at: 27 put: (OrderedCollection new: 2).
	result at: 28 put: (OrderedCollection new: 2).
	result at: 29 put: (OrderedCollection new: 2).
	result at: 30 put: (OrderedCollection new: 2).
	result at: 31 put: (OrderedCollection new: 2).
	result at: 32 put: (OrderedCollection new: 2).
	result at: 33 put: (OrderedCollection new: 2).
	result at: 34 put: (OrderedCollection new: 2).
	result at: 35 put: (OrderedCollection new: 2).
	result at: 36 put: (OrderedCollection new: 2).
	result at: 37 put: (OrderedCollection new: 2).
	result at: 38 put: (OrderedCollection new: 2).
	result at: 39 put: (OrderedCollection new: 2).
	result at: 40 put: (OrderedCollection new: 2).
	result at: 41 put: (OrderedCollection new: 2).
	result at: 42 put: (OrderedCollection new: 2).
	result at: 43 put: (OrderedCollection new: 2).
	result at: 44 put: (OrderedCollection new: 2).
	result at: 45 put: (OrderedCollection new: 2).
	result at: 46 put: (OrderedCollection new: 2).
	result at: 47 put: (OrderedCollection new: 2).
	result at: 48 put: (OrderedCollection new: 2).
	result at: 49 put: (OrderedCollection new: 2).
	result at: 50 put: (OrderedCollection new: 2).
	result at: 51 put: (OrderedCollection new: 2).
	result at: 52 put: (OrderedCollection new: 2).
	result at: 53 put: (OrderedCollection new: 2).
	result at: 54 put: (OrderedCollection new: 2).
	result at: 55 put: (OrderedCollection new: 2).
	result at: 56 put: (OrderedCollection new: 2).
	result at: 57 put: (OrderedCollection new: 2).
	result at: 58 put: (OrderedCollection new: 2).
	result at: 59 put: (OrderedCollection new: 2).
	result at: 60 put: (OrderedCollection new: 2).
	result at: 61 put: (OrderedCollection new: 2).
	result at: 62 put: (OrderedCollection new: 2).
	result at: 63 put: (OrderedCollection new: 2).
	result at: 64 put: (OrderedCollection new: 2).
	result at: 65 put: (OrderedCollection new: 2).
	result at: 66 put: (OrderedCollection new: 2).
	result at: 67 put: (OrderedCollection new: 2).
	result at: 68 put: (OrderedCollection new: 2).
	result at: 69 put: (OrderedCollection new: 2).
	result at: 70 put: (OrderedCollection new: 2).
	result at: 71 put: (OrderedCollection new: 2).
	result at: 72 put: (OrderedCollection new: 2).
	result at: 73 put: (OrderedCollection new: 2).
	result at: 74 put: (OrderedCollection new: 2).
	result at: 75 put: (OrderedCollection new: 2).
	result at: 76 put: (OrderedCollection new: 2).
	result at: 77 put: (OrderedCollection new: 2).
	result at: 78 put: (OrderedCollection new: 2).
	result at: 79 put: (OrderedCollection new: 2).
	result at: 80 put: (OrderedCollection new: 2).
	result at: 81 put: (OrderedCollection new: 2).
	result at: 82 put: (OrderedCollection new: 2).
	result at: 83 put: (OrderedCollection new: 2).
	self addAll: ((nodes at: 1) at: 1) to: (result at: 1).
	self add: ((nodes at: 1) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionFortype_3: nodes [
	| result |
	result := Array new: 83.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 7 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 9 put: (OrderedCollection new: 2).
	result at: 10 put: (OrderedCollection new: 2).
	result at: 11 put: (OrderedCollection new: 2).
	result at: 12 put: (OrderedCollection new: 2).
	result at: 13 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 15 put: (OrderedCollection new: 2).
	result at: 16 put: (OrderedCollection new: 2).
	result at: 17 put: (OrderedCollection new: 2).
	result at: 18 put: (OrderedCollection new: 2).
	result at: 19 put: (OrderedCollection new: 2).
	result at: 20 put: (OrderedCollection new: 2).
	result at: 21 put: (OrderedCollection new: 2).
	result at: 22 put: (OrderedCollection new: 2).
	result at: 23 put: (OrderedCollection new: 2).
	result at: 24 put: (OrderedCollection new: 2).
	result at: 25 put: (OrderedCollection new: 2).
	result at: 26 put: (OrderedCollection new: 2).
	result at: 27 put: (OrderedCollection new: 2).
	result at: 28 put: (OrderedCollection new: 2).
	result at: 29 put: (OrderedCollection new: 2).
	result at: 30 put: (OrderedCollection new: 2).
	result at: 31 put: (OrderedCollection new: 2).
	result at: 32 put: (OrderedCollection new: 2).
	result at: 33 put: (OrderedCollection new: 2).
	result at: 34 put: (OrderedCollection new: 2).
	result at: 35 put: (OrderedCollection new: 2).
	result at: 36 put: (OrderedCollection new: 2).
	result at: 37 put: (OrderedCollection new: 2).
	result at: 38 put: (OrderedCollection new: 2).
	result at: 39 put: (OrderedCollection new: 2).
	result at: 40 put: (OrderedCollection new: 2).
	result at: 41 put: (OrderedCollection new: 2).
	result at: 42 put: (OrderedCollection new: 2).
	result at: 43 put: (OrderedCollection new: 2).
	result at: 44 put: (OrderedCollection new: 2).
	result at: 45 put: (OrderedCollection new: 2).
	result at: 46 put: (OrderedCollection new: 2).
	result at: 47 put: (OrderedCollection new: 2).
	result at: 48 put: (OrderedCollection new: 2).
	result at: 49 put: (OrderedCollection new: 2).
	result at: 50 put: (OrderedCollection new: 2).
	result at: 51 put: (OrderedCollection new: 2).
	result at: 52 put: (OrderedCollection new: 2).
	result at: 53 put: (OrderedCollection new: 2).
	result at: 54 put: (OrderedCollection new: 2).
	result at: 55 put: (OrderedCollection new: 2).
	result at: 56 put: (OrderedCollection new: 2).
	result at: 57 put: (OrderedCollection new: 2).
	result at: 58 put: (OrderedCollection new: 2).
	result at: 59 put: (OrderedCollection new: 2).
	result at: 60 put: (OrderedCollection new: 2).
	result at: 61 put: (OrderedCollection new: 2).
	result at: 62 put: (OrderedCollection new: 2).
	result at: 63 put: (OrderedCollection new: 2).
	result at: 64 put: (OrderedCollection new: 2).
	result at: 65 put: (OrderedCollection new: 2).
	result at: 66 put: (OrderedCollection new: 2).
	result at: 67 put: (OrderedCollection new: 2).
	result at: 68 put: (OrderedCollection new: 2).
	result at: 69 put: (OrderedCollection new: 2).
	result at: 70 put: (OrderedCollection new: 2).
	result at: 71 put: (OrderedCollection new: 2).
	result at: 72 put: (OrderedCollection new: 2).
	result at: 73 put: (OrderedCollection new: 2).
	result at: 74 put: (OrderedCollection new: 2).
	result at: 75 put: (OrderedCollection new: 2).
	result at: 76 put: (OrderedCollection new: 2).
	result at: 77 put: (OrderedCollection new: 2).
	result at: 78 put: (OrderedCollection new: 2).
	result at: 79 put: (OrderedCollection new: 2).
	result at: 80 put: (OrderedCollection new: 2).
	result at: 81 put: (OrderedCollection new: 2).
	result at: 82 put: (OrderedCollection new: 2).
	result at: 83 put: (OrderedCollection new: 2).
	self addAll: ((nodes at: 1) at: 1) to: (result at: 3).
	self addAll: ((nodes at: 1) at: 2) to: (result at: 7).
	self addAll: ((nodes at: 1) at: 3) to: (result at: 48).
	self addAll: ((nodes at: 1) at: 4) to: (result at: 49).
	self addAll: ((nodes at: 1) at: 5) to: (result at: 50).
	self addAll: ((nodes at: 1) at: 6) to: (result at: 51).
	self addAll: ((nodes at: 1) at: 7) to: (result at: 52).
	self addAll: ((nodes at: 1) at: 8) to: (result at: 53).
	self addAll: ((nodes at: 1) at: 9) to: (result at: 54).
	self addAll: ((nodes at: 1) at: 10) to: (result at: 55).
	self addAll: ((nodes at: 1) at: 11) to: (result at: 56).
	self addAll: ((nodes at: 1) at: 12) to: (result at: 9).
	self addAll: ((nodes at: 1) at: 13) to: (result at: 10).
	self addAll: ((nodes at: 1) at: 14) to: (result at: 1).
	self addAll: ((nodes at: 1) at: 15) to: (result at: 4).
	self addAll: ((nodes at: 1) at: 16) to: (result at: 5).
	self addAll: ((nodes at: 1) at: 17) to: (result at: 46).
	self addAll: ((nodes at: 1) at: 18) to: (result at: 41).
	self addAll: ((nodes at: 1) at: 19) to: (result at: 42).
	self addAll: ((nodes at: 1) at: 20) to: (result at: 6).
	self addAll: ((nodes at: 1) at: 21) to: (result at: 8).
	self addAll: ((nodes at: 1) at: 22) to: (result at: 12).
	self addAll: ((nodes at: 1) at: 23) to: (result at: 2).
	self addAll: ((nodes at: 1) at: 24) to: (result at: 11).
	self addAll: ((nodes at: 1) at: 25) to: (result at: 13).
	self addAll: ((nodes at: 1) at: 26) to: (result at: 14).
	self addAll: ((nodes at: 1) at: 27) to: (result at: 15).
	self addAll: ((nodes at: 1) at: 28) to: (result at: 16).
	self addAll: ((nodes at: 1) at: 29) to: (result at: 17).
	self addAll: ((nodes at: 1) at: 30) to: (result at: 39).
	self addAll: ((nodes at: 1) at: 31) to: (result at: 40).
	self addAll: ((nodes at: 1) at: 32) to: (result at: 45).
	self addAll: ((nodes at: 1) at: 33) to: (result at: 18).
	self addAll: ((nodes at: 1) at: 34) to: (result at: 19).
	self addAll: ((nodes at: 1) at: 35) to: (result at: 20).
	self addAll: ((nodes at: 1) at: 36) to: (result at: 21).
	self addAll: ((nodes at: 1) at: 37) to: (result at: 22).
	self addAll: ((nodes at: 1) at: 38) to: (result at: 23).
	self addAll: ((nodes at: 1) at: 39) to: (result at: 24).
	self addAll: ((nodes at: 1) at: 40) to: (result at: 25).
	self addAll: ((nodes at: 1) at: 41) to: (result at: 26).
	self addAll: ((nodes at: 1) at: 42) to: (result at: 27).
	self addAll: ((nodes at: 1) at: 43) to: (result at: 28).
	self addAll: ((nodes at: 1) at: 44) to: (result at: 29).
	self addAll: ((nodes at: 1) at: 45) to: (result at: 30).
	self addAll: ((nodes at: 1) at: 46) to: (result at: 31).
	self addAll: ((nodes at: 1) at: 47) to: (result at: 32).
	self addAll: ((nodes at: 1) at: 48) to: (result at: 33).
	self addAll: ((nodes at: 1) at: 49) to: (result at: 34).
	self addAll: ((nodes at: 1) at: 50) to: (result at: 35).
	self addAll: ((nodes at: 1) at: 51) to: (result at: 36).
	self addAll: ((nodes at: 1) at: 52) to: (result at: 37).
	self addAll: ((nodes at: 1) at: 53) to: (result at: 38).
	self addAll: ((nodes at: 1) at: 54) to: (result at: 44).
	self addAll: ((nodes at: 1) at: 55) to: (result at: 43).
	self addAll: ((nodes at: 1) at: 56) to: (result at: 47).
	self addAll: ((nodes at: 1) at: 57) to: (result at: 57).
	self addAll: ((nodes at: 1) at: 58) to: (result at: 75).
	self addAll: ((nodes at: 1) at: 59) to: (result at: 58).
	self addAll: ((nodes at: 1) at: 60) to: (result at: 59).
	self addAll: ((nodes at: 1) at: 61) to: (result at: 60).
	self addAll: ((nodes at: 1) at: 62) to: (result at: 61).
	self addAll: ((nodes at: 1) at: 63) to: (result at: 62).
	self addAll: ((nodes at: 1) at: 64) to: (result at: 63).
	self addAll: ((nodes at: 1) at: 65) to: (result at: 64).
	self addAll: ((nodes at: 1) at: 66) to: (result at: 65).
	self addAll: ((nodes at: 1) at: 67) to: (result at: 66).
	self addAll: ((nodes at: 1) at: 68) to: (result at: 67).
	self addAll: ((nodes at: 1) at: 69) to: (result at: 68).
	self addAll: ((nodes at: 1) at: 70) to: (result at: 69).
	self addAll: ((nodes at: 1) at: 71) to: (result at: 70).
	self addAll: ((nodes at: 1) at: 72) to: (result at: 71).
	self addAll: ((nodes at: 1) at: 73) to: (result at: 72).
	self addAll: ((nodes at: 1) at: 74) to: (result at: 73).
	self addAll: ((nodes at: 1) at: 75) to: (result at: 74).
	self addAll: ((nodes at: 1) at: 76) to: (result at: 76).
	self addAll: ((nodes at: 1) at: 77) to: (result at: 77).
	self addAll: ((nodes at: 1) at: 78) to: (result at: 78).
	self addAll: ((nodes at: 1) at: 79) to: (result at: 79).
	self addAll: ((nodes at: 1) at: 80) to: (result at: 80).
	self addAll: ((nodes at: 1) at: 81) to: (result at: 81).
	self addAll: ((nodes at: 1) at: 82) to: (result at: 82).
	self addAll: ((nodes at: 1) at: 83) to: (result at: 83).
	^ result
]

{ #category : #'generated-reduction actions' }
GoParser >> reduceActionForvarSpec1: nodes [
	| result |
	result := Array new: 83.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 7 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 9 put: (OrderedCollection new: 2).
	result at: 10 put: (OrderedCollection new: 2).
	result at: 11 put: (OrderedCollection new: 2).
	result at: 12 put: (OrderedCollection new: 2).
	result at: 13 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 15 put: (OrderedCollection new: 2).
	result at: 16 put: (OrderedCollection new: 2).
	result at: 17 put: (OrderedCollection new: 2).
	result at: 18 put: (OrderedCollection new: 2).
	result at: 19 put: (OrderedCollection new: 2).
	result at: 20 put: (OrderedCollection new: 2).
	result at: 21 put: (OrderedCollection new: 2).
	result at: 22 put: (OrderedCollection new: 2).
	result at: 23 put: (OrderedCollection new: 2).
	result at: 24 put: (OrderedCollection new: 2).
	result at: 25 put: (OrderedCollection new: 2).
	result at: 26 put: (OrderedCollection new: 2).
	result at: 27 put: (OrderedCollection new: 2).
	result at: 28 put: (OrderedCollection new: 2).
	result at: 29 put: (OrderedCollection new: 2).
	result at: 30 put: (OrderedCollection new: 2).
	result at: 31 put: (OrderedCollection new: 2).
	result at: 32 put: (OrderedCollection new: 2).
	result at: 33 put: (OrderedCollection new: 2).
	result at: 34 put: (OrderedCollection new: 2).
	result at: 35 put: (OrderedCollection new: 2).
	result at: 36 put: (OrderedCollection new: 2).
	result at: 37 put: (OrderedCollection new: 2).
	result at: 38 put: (OrderedCollection new: 2).
	result at: 39 put: (OrderedCollection new: 2).
	result at: 40 put: (OrderedCollection new: 2).
	result at: 41 put: (OrderedCollection new: 2).
	result at: 42 put: (OrderedCollection new: 2).
	result at: 43 put: (OrderedCollection new: 2).
	result at: 44 put: (OrderedCollection new: 2).
	result at: 45 put: (OrderedCollection new: 2).
	result at: 46 put: (OrderedCollection new: 2).
	result at: 47 put: (OrderedCollection new: 2).
	result at: 48 put: (OrderedCollection new: 2).
	result at: 49 put: (OrderedCollection new: 2).
	result at: 50 put: (OrderedCollection new: 2).
	result at: 51 put: (OrderedCollection new: 2).
	result at: 52 put: (OrderedCollection new: 2).
	result at: 53 put: (OrderedCollection new: 2).
	result at: 54 put: (OrderedCollection new: 2).
	result at: 55 put: (OrderedCollection new: 2).
	result at: 56 put: (OrderedCollection new: 2).
	result at: 57 put: (OrderedCollection new: 2).
	result at: 58 put: (OrderedCollection new: 2).
	result at: 59 put: (OrderedCollection new: 2).
	result at: 60 put: (OrderedCollection new: 2).
	result at: 61 put: (OrderedCollection new: 2).
	result at: 62 put: (OrderedCollection new: 2).
	result at: 63 put: (OrderedCollection new: 2).
	result at: 64 put: (OrderedCollection new: 2).
	result at: 65 put: (OrderedCollection new: 2).
	result at: 66 put: (OrderedCollection new: 2).
	result at: 67 put: (OrderedCollection new: 2).
	result at: 68 put: (OrderedCollection new: 2).
	result at: 69 put: (OrderedCollection new: 2).
	result at: 70 put: (OrderedCollection new: 2).
	result at: 71 put: (OrderedCollection new: 2).
	result at: 72 put: (OrderedCollection new: 2).
	result at: 73 put: (OrderedCollection new: 2).
	result at: 74 put: (OrderedCollection new: 2).
	result at: 75 put: (OrderedCollection new: 2).
	result at: 76 put: (OrderedCollection new: 2).
	result at: 77 put: (OrderedCollection new: 2).
	result at: 78 put: (OrderedCollection new: 2).
	result at: 79 put: (OrderedCollection new: 2).
	result at: 80 put: (OrderedCollection new: 2).
	result at: 81 put: (OrderedCollection new: 2).
	result at: 82 put: (OrderedCollection new: 2).
	result at: 83 put: (OrderedCollection new: 2).
	self addAll: ((nodes at: 1) at: 1) to: (result at: 1).
	self addAll: ((nodes at: 1) at: 2) to: (result at: 2).
	self addAll: ((nodes at: 2) at: 1) to: (result at: 1).
	self addAll: ((nodes at: 2) at: 2) to: (result at: 3).
	self addAll: ((nodes at: 2) at: 3) to: (result at: 4).
	self addAll: ((nodes at: 2) at: 4) to: (result at: 5).
	self addAll: ((nodes at: 2) at: 5) to: (result at: 6).
	self addAll: ((nodes at: 2) at: 6) to: (result at: 2).
	self addAll: ((nodes at: 2) at: 7) to: (result at: 7).
	self addAll: ((nodes at: 2) at: 8) to: (result at: 8).
	self addAll: ((nodes at: 2) at: 9) to: (result at: 9).
	self addAll: ((nodes at: 2) at: 10) to: (result at: 10).
	self addAll: ((nodes at: 2) at: 11) to: (result at: 11).
	self addAll: ((nodes at: 2) at: 12) to: (result at: 12).
	self addAll: ((nodes at: 2) at: 13) to: (result at: 13).
	self addAll: ((nodes at: 2) at: 14) to: (result at: 14).
	self addAll: ((nodes at: 2) at: 15) to: (result at: 15).
	self addAll: ((nodes at: 2) at: 16) to: (result at: 16).
	self addAll: ((nodes at: 2) at: 17) to: (result at: 17).
	self addAll: ((nodes at: 2) at: 18) to: (result at: 18).
	self addAll: ((nodes at: 2) at: 19) to: (result at: 19).
	self addAll: ((nodes at: 2) at: 20) to: (result at: 20).
	self addAll: ((nodes at: 2) at: 21) to: (result at: 21).
	self addAll: ((nodes at: 2) at: 22) to: (result at: 22).
	self addAll: ((nodes at: 2) at: 23) to: (result at: 23).
	self addAll: ((nodes at: 2) at: 24) to: (result at: 24).
	self addAll: ((nodes at: 2) at: 25) to: (result at: 25).
	self addAll: ((nodes at: 2) at: 26) to: (result at: 26).
	self addAll: ((nodes at: 2) at: 27) to: (result at: 27).
	self addAll: ((nodes at: 2) at: 28) to: (result at: 28).
	self addAll: ((nodes at: 2) at: 29) to: (result at: 29).
	self addAll: ((nodes at: 2) at: 30) to: (result at: 30).
	self addAll: ((nodes at: 2) at: 31) to: (result at: 31).
	self addAll: ((nodes at: 2) at: 32) to: (result at: 32).
	self addAll: ((nodes at: 2) at: 33) to: (result at: 33).
	self addAll: ((nodes at: 2) at: 34) to: (result at: 34).
	self addAll: ((nodes at: 2) at: 35) to: (result at: 35).
	self addAll: ((nodes at: 2) at: 36) to: (result at: 36).
	self addAll: ((nodes at: 2) at: 37) to: (result at: 37).
	self addAll: ((nodes at: 2) at: 38) to: (result at: 38).
	self addAll: ((nodes at: 2) at: 39) to: (result at: 39).
	self addAll: ((nodes at: 2) at: 40) to: (result at: 40).
	self addAll: ((nodes at: 2) at: 41) to: (result at: 41).
	self addAll: ((nodes at: 2) at: 42) to: (result at: 42).
	self addAll: ((nodes at: 2) at: 43) to: (result at: 43).
	self addAll: ((nodes at: 2) at: 44) to: (result at: 44).
	self addAll: ((nodes at: 2) at: 45) to: (result at: 45).
	self addAll: ((nodes at: 2) at: 46) to: (result at: 46).
	self addAll: ((nodes at: 2) at: 47) to: (result at: 47).
	self addAll: ((nodes at: 2) at: 48) to: (result at: 48).
	self addAll: ((nodes at: 2) at: 49) to: (result at: 49).
	self addAll: ((nodes at: 2) at: 50) to: (result at: 50).
	self addAll: ((nodes at: 2) at: 51) to: (result at: 51).
	self addAll: ((nodes at: 2) at: 52) to: (result at: 52).
	self addAll: ((nodes at: 2) at: 53) to: (result at: 53).
	self addAll: ((nodes at: 2) at: 54) to: (result at: 54).
	self addAll: ((nodes at: 2) at: 55) to: (result at: 55).
	self addAll: ((nodes at: 2) at: 56) to: (result at: 56).
	self addAll: ((nodes at: 2) at: 57) to: (result at: 57).
	self addAll: ((nodes at: 2) at: 58) to: (result at: 58).
	self addAll: ((nodes at: 2) at: 59) to: (result at: 59).
	self addAll: ((nodes at: 2) at: 60) to: (result at: 60).
	self addAll: ((nodes at: 2) at: 61) to: (result at: 61).
	self addAll: ((nodes at: 2) at: 62) to: (result at: 62).
	self addAll: ((nodes at: 2) at: 63) to: (result at: 63).
	self addAll: ((nodes at: 2) at: 64) to: (result at: 64).
	self addAll: ((nodes at: 2) at: 65) to: (result at: 65).
	self addAll: ((nodes at: 2) at: 66) to: (result at: 66).
	self addAll: ((nodes at: 2) at: 67) to: (result at: 67).
	self addAll: ((nodes at: 2) at: 68) to: (result at: 68).
	self addAll: ((nodes at: 2) at: 69) to: (result at: 69).
	self addAll: ((nodes at: 2) at: 70) to: (result at: 70).
	self addAll: ((nodes at: 2) at: 71) to: (result at: 71).
	self addAll: ((nodes at: 2) at: 72) to: (result at: 72).
	self addAll: ((nodes at: 2) at: 73) to: (result at: 73).
	self addAll: ((nodes at: 2) at: 74) to: (result at: 74).
	self addAll: ((nodes at: 2) at: 75) to: (result at: 75).
	self addAll: ((nodes at: 2) at: 76) to: (result at: 76).
	self addAll: ((nodes at: 2) at: 77) to: (result at: 77).
	self addAll: ((nodes at: 2) at: 78) to: (result at: 78).
	self addAll: ((nodes at: 2) at: 79) to: (result at: 79).
	self addAll: ((nodes at: 2) at: 80) to: (result at: 80).
	self addAll: ((nodes at: 2) at: 81) to: (result at: 81).
	self addAll: ((nodes at: 2) at: 82) to: (result at: 82).
	self addAll: ((nodes at: 2) at: 83) to: (result at: 83).
	^ result
]
